"use strict";define("Analytics/Boards/RollupQueries",["require","exports","Analytics/Boards/BoardsQueries/WitFieldUtilities","Analytics/Common/AnalyticsCacheableQueryBase","Analytics/Common/Utilities/QueryUtilities"],(function(e,t,s,r,a){var i,o,n,l;i=t[l="Contracts"]={},(n=t[l].RollupType||(t[l].RollupType={}))[n.Progress=0]="Progress",n[n.Total=1]="Total",(o=t[l].RollupAggregation||(t[l].RollupAggregation={}))[o.Count=1]="Count",o[o.Sum=2]="Sum",function(e){t[e]={};class o extends r.AnalyticsCacheableQueryBase{constructor(e,t,s,r,a){super(o.commandName,o.generateQueryOptions(e,t,s,r,a)),this.workItemIds=e,this.rollupMetric=t,this.projectId=s,this.backlogWorkItemTypes=r,this.syncDateConditions=a}static generateQueryOptions(e,t,s,r,i){const n=o.getMultiFilterClause("WorkItemId",e),l=`Descendants(${o.getDescendantsApplyClause(t,r)})`;return{entityType:"WorkItems",oDataVersion:a.latestODataVersion,project:s,batchRequestMode:1,$filter:n,$select:"WorkItemId",$expand:l,getProviderSyncDates:!0,expectSinglePage:e.length<o.axServerPageSize,syncDateConditions:i,getBatchResponseInnerHeaders:!!i}}static getMultiFilterClause(e,t){let s="";return t&&t.forEach((t=>{"string"==typeof t&&(t=`'${t}'`),s?s+=` or ${e} eq ${t}`:s=`${e} eq ${t}`})),s}static getDescendantsApplyClause(e,t){const s="WorkItemType";let r="";e.backlogFilter?r=o.getMultiFilterClause(s,t):e.workItemTypeFilter&&(r=o.getMultiFilterClause(s,[e.workItemTypeFilter]));const a="$apply=filter(StateCategory ne null"+(r?` and ${r})`:")"),n=o.getAggregateClause(e);if(e.type===i.RollupType.Progress){return[a,"compute(StateCategory eq 'Completed' as isCompleted)",`groupby((isCompleted), ${n})`].join("/")}return[a,n].join("/")}static getAggregateClause(e){let t="aggregate(";switch(e.aggregation){case i.RollupAggregation.Sum:if(!e.aggregationField)throw new Error("Missing aggregation field");return t+=`${s.WitFieldUtilities.getFieldODataPropertyName(e.aggregationField)} with sum as Sum)`,t;case i.RollupAggregation.Count:default:return t+="$count as Count)",t}}getQueryName(){return`RollupQuery${JSON.stringify(this.workItemIds)}${JSON.stringify(this.rollupMetric)}`}interpretQueryResults(e){const t={results:e.value,syncDates:{}},s="ProviderSyncDates:",r=e["@vsts.warnings"];if(r){let e="";r.some((t=>{if(0===t.indexOf(s))return e=t.substring(18),!0}));let a=[],i=null,o=null;try{a=JSON.parse(e)}catch(e){}for(const e of a){const t=Date.parse(e.ProviderSyncDate);"WorkItemRevision"===e.ProviderTableName?i=Math.min(t,i||t):"WorkItemLink"===e.ProviderTableName&&(o=Math.min(t,o||t))}i&&i>0&&(t.syncDates.workItemsChangedUtcTimestamp=i),o&&o>0&&(t.syncDates.workItemLinksChangedUtcTimestamp=o)}return t}inspectResponseFormat(e){e&&e.responseStatus&&"304"===e.responseStatus.StatusCode||super.inspectResponseFormat(e)}}t[e].RollupQuery=o,o.commandName="RollupQuery",o.axServerPageSize=1e3}("RollupQuery")}),["Contracts","RollupQuery"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-analytics.rollup-queries"}}));