"use strict";define("Dashboards/AddToDashboard",["require","exports","react","VSS/Platform/Layout","VSSUI/PickList","Dashboards/DashboardPickerProvider/DashboardPickerProviderFactory","VSS/Core/Util/String","VSS/Platform/Components/Format","VSS/Platform/Feature","VSSUI/Panel","VSSUI/Spinner"],(function(e,a,s,t,o,r,d,n,i,l,h){var c,p,m;c=a[m="Resources"]={},a[m].PanelTitle="Select a dashboard",a[m].PanelInstruction="By selecting a dashboard you will create a copy of {0} as a widget on that dashboard",a[m].SelectADashboard="Select a dashboard",a[m].PanelOk="OK",a[m].PanelCancel="Cancel",a[m].Search="Search",a[m].NoItems="No results",a[m].AllGroupHeader="A to Z",a[m].AllTeamDashboardsGroupHeader="All team dashboards",a[m].AllProjectDashboardsGroupHeader="All project dashboards",a[m].FavoritesGroupHeader="Favorites",function(e){p=a[e]={};class r extends t.VssComponent{constructor(){super(...arguments),this.onSelectedItemChanged=e=>{this.props.onSelection(e.selectedItems&&e.selectedItems[0])},this.getListItem=e=>{const a=e.groupKey||e.ownerId;return{name:e.displayName,key:`${a} - ${e.id}`,groupKey:a,iconProps:{iconType:0,iconName:"ViewDashboard"}}}}render(){return s.createElement(o.PickListDropdown,{className:"dashboard-picker",getPickListItems:()=>this.props.dashboards,groups:this.props.groups,pickListClassName:"dashboard-item-picker-dropdown",placeholder:c.SelectADashboard,getListItem:this.getListItem,onSelectionChanged:this.onSelectedItemChanged,selectedItems:void 0!==this.props.selectedItem?[this.props.selectedItem]:void 0,searchTextPlaceholder:c.Search,isSearchable:!0,searchNoResultsText:c.NoItems})}}a[e].SimpleDashboardPicker=r}("SimpleDashboardPicker"),function(e){a[e]={};class o extends t.VssComponent{constructor(e,a){super(e,a),this.onSelectedDashboardChanged=e=>{this.setState({selectedItem:e})},this.onOk=()=>{this.props.onOk(this.state.selectedItem),this.publish("Dashboards.AddToDashboardPanel.Ok")},this.onDismiss=()=>{this.props.onDismiss(),this.publish("Dashboards.AddToDashboardPanel.Dismiss")},this.state={selectedItem:void 0,dashboards:void 0,groups:void 0}}async componentDidMount(){this.publish("Dashboards.AddToDashboardPanel.Loaded");const e=await this.fetchData();this.processData(e.allDashboards,e.favoriteDashboards,e.allOwners,e.myTeams)}render(){if(this.props.isOpen){const e=[{className:"widget-config-save",onClick:this.onOk,text:c.PanelOk,primary:!0,disabled:void 0===this.state.selectedItem},{className:"widget-config-cancel",onClick:this.onDismiss,text:c.PanelCancel}],a=void 0!==this.state.dashboards&&void 0!==this.state.groups;return s.createElement(l.Panel,{className:"add-to-dashboard-panel",onDismiss:this.props.onDismiss,titleProps:{text:c.PanelTitle},footerButtonProps:e},s.createElement("div",null,s.createElement(n.FormatComponent,{format:c.PanelInstruction},s.createElement("b",null,this.props.widgetName)),!a&&s.createElement(h.Spinner,null),a&&s.createElement(p.SimpleDashboardPicker,{dashboards:this.state.dashboards,onSelection:this.onSelectedDashboardChanged,selectedItem:this.state.selectedItem,groups:this.state.groups})))}return null}publish(e){this.context.pageContext.getService("IVssTelemetryService").publishEvent("Dashboards",e,{})}async fetchData(){const e=this.context.pageContext.getService("IVssContributionService"),a=e.getDataAsync("ms.vss-dashboards-web.all-dashboards-data-provider"),s=e.getDataAsync("ms.vss-dashboards-web.favorite-dashboards-data-provider"),t=(0,r.getMyTeams)(this.context.pageContext),o=await a,d=o&&o.dashboards||[],n=o&&o.owners||[],i=await s;return{allDashboards:d,favoriteDashboards:i&&i.map((e=>e.dashboard))||[],allOwners:n,myTeams:await t||[]}}processData(e,a,s,t){const r=(0,i.isFeatureEnabled)(this.context.pageContext,"ms.vss-dashboards.team-agnostic-dashboards-feature",!1),n={};for(const e of s)n[e.id]=e.name;const l=[],h=e.filter((e=>n[e.ownerId]&&1===e.dashboardScope));l.push(...h.map((e=>Object.assign(Object.assign({},e),{groupKey:e.ownerId,displayName:e.name})))),r?l.push(...e.map((e=>{const a=n[e.ownerId],s=2===e.dashboardScope?o.allProjectDashboardsGroup.key:o.allTeamDashboardsGroup.key,t=a?`${a} - ${e.name}`:`${e.name}`;return Object.assign(Object.assign({},e),{groupKey:s,displayName:t})}))):l.push(...h.map((e=>{const a=n[e.ownerId];return Object.assign(Object.assign({},e),{groupKey:o.allGroup.key,displayName:`${a} - ${e.name}`})}))),l.push(...a.map((e=>{const a=n[e.ownerId],s=a?`${a} - ${e.name}`:`${e.name}`;return Object.assign(Object.assign({},e),{groupKey:o.favoritesGroup.key,displayName:s})}))),l.sort(((e,a)=>(0,d.localeIgnoreCaseComparer)(e.displayName,a.displayName)));const c=[o.favoritesGroup,...t.map((e=>({key:e.id,name:e.name}))).sort(((e,a)=>(0,d.localeIgnoreCaseComparer)(e.name,a.name)))];r?(c.push(o.allTeamDashboardsGroup),c.push(o.allProjectDashboardsGroup)):c.push(o.allGroup),this.setState({dashboards:l,groups:c})}}a[e].AddToDashboardPanel=o,o.allGroup={key:"add-to-dashboard-all-group",name:c.AllGroupHeader},o.allTeamDashboardsGroup={key:"add-to-dashboard-all-team-dashboards-group",name:c.AllTeamDashboardsGroupHeader},o.allProjectDashboardsGroup={key:"add-to-dashboard-all-project-dashboards-group",name:c.AllProjectDashboardsGroupHeader},o.favoritesGroup={key:"add-to-dashboard-favorite-group",name:c.FavoritesGroupHeader}}("AddToDashboardPanel")}),["Resources","SimpleDashboardPicker","AddToDashboardPanel"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-dashboards.dashboards-add-to-dashboard"}}));