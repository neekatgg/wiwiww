if (window.performance && window.performance.mark) { window.performance.mark('startLoadBundleInner-async'); }
// Copyright (C) Microsoft Corporation. All rights reserved.
define("Presentation/Scripts/TFS/Generated/TFS.Server.WebAccess.Constants",["require","exports"],function(n,t){var i,r,u,f,e,o,s,h,c,l;Object.defineProperty(t,"__esModule",{value:!0});t.TfsSettingsScopeNames=t.TeamProjectCapabilitiesConstants=t.ProjectVisibilityConstants=t.ProjectState=t.Messages=t.LicenseFeatureIds=t.HubsConstants=t.FeatureMode=t.FeatureAvailabilityFlags=t.CoreConstants=void 0,function(n){n.AreaIdGuid="79134c72-4a58-4b42-976c-04e7115f32bf";n.ProjectCollectionsLocationId="8031090f-ef1d-4af6-85fc-698cd75d42bf";n.ProjectsLocationId="603fe2ac-9723-48b9-88ad-09305aa6c6e1";n.ProcessLocationId="93878975-88c5-4e6a-8abb-7ddd77a8a7d8";n.ProjectHistoryLocationId="6488a877-4749-4954-82ea-7340d36be9f2";n.ProjectAvatarLocationId="54b2a2a0-859b-4d05-827c-ec4c862f641a";n.TeamsLocationId="d30a3dd1-f8ba-442a-b86a-bd0c0c383e59";n.CollectionTeamsLocationId="7a4d9ee9-3433-4347-b47a-7a80f1cf307e";n.TeamMembersLocationId="294c494c-2600-4d7e-b76c-3dd50c3c95be";n.ConnectedServicesId="b4f70219-e18b-42c5-abe3-98b07d35525e";n.ProxyId="ec1f4311-f2b4-4c15-b2b8-8990b80d2908";n.PropertiesLocationId="4976a71a-4487-49aa-8aab-a1eda469037a";n.ProjectsPropertiesLocationId="0a3ffdfc-fe94-47a6-bb27-79bf3f762eac";n.AreaId="79134C72-4A58-4B42-976C-04E7115F32BF";n.AreaName="core";n.ProcessAreaName="process";n.ApiString="_apis";n.JsonPatchMediaType="application/json-patch+json";n.ProcessResource="processes";n.ProjectsResource="projects";n.ProjectHistoryResource="projectHistory";n.ProjectAvatarResource="avatar";n.ProjectCollectionsResource="projectCollections";n.TeamsResource="teams";n.TeamMembersResource="members";n.ConnectedServicesResource="connectedServices";n.ProxyResource="proxies";n.ProxyAuthorizationResource="proxyauthorization";n.PropertiesResource="properties";n.ProjectsPropertiesResource="projectsproperties";n.ProjectCollectionsRouteName="ProjectCollections";n.ProjectsRouteName="Projects";n.ProjectHistoryRouteName="ProjectHistory";n.ProjectAvatarRouteName="ProjectAvatar";n.ProcessesRouteName="Processes";n.TeamsRouteName="Teams";n.CollectionTeamsRouteName="CollectionTeams";n.TeamMembersRouteName="TeamMembers";n.ConnectedServicesRouteName="ConnectedServices";n.ProxyRouteName="Proxies";n.PropertiesRouteName="Properties";n.ProjectsPropertiesRouteName="ProjectsProperties";n.TeamsLocationIdString="D30A3DD1-F8BA-442A-B86A-BD0C0C383E59";n.CollectionTeamsLocationIdString="7A4D9EE9-3433-4347-B47A-7A80F1CF307E"}(i=t.CoreConstants||(t.CoreConstants={})),function(n){n.DisablePageSizeForRequirements="WebAccess.TestManagement.DisablePageSizeForRequirements";n.WebAccessDashboardsNewExperienceToggle="WebAccess.Dashboards.NewExperience.Toggle";n.WebAccessDisableTypeAhead="WebAccess.Profile.DisableTypeAhead";n.WebAccessDisableRecommendationService="WebAccess.DisableRecommendationService";n.RecommendationServiceUseAex="VisualStudio.Recommendation.UseAex";n.WebAccessQuickStart="WebAccess.QuickStart";n.WebAccessQuickStartJumpStart="WebAccess.QuickStart.JumpStart";n.WebAccessQuickStartJumpStartForExistingProjects="WebAccess.QuickStart.JumpStartForExistingProjects";n.WebAccessQuickStartKanban="WebAccess.QuickStart.Kanban";n.WebAccessQuickStartKanbanForExistingProjects="WebAccess.QuickStart.KanbanForExistingProjects";n.WebAccessQuickStartScrum="WebAccess.QuickStart.Scrum";n.WebAccessQuickStartMembers="WebAccess.QuickStart.Members";n.WebAccessQuickStartCodeSearchPromotion="WebAccess.QuickStart.CodeSearchPromotion";n.WebAccessQuickStartCodeSearchFileViewerCapabilities="WebAccess.QuickStart.CodeSearchFileViewerCapabilities";n.WebAccessQuickStartCodeSearchFeature="WebAccess.QuickStart.CodeSearchFeature";n.WebAccessSendASmileNavbar="WebAccess.SendASmile.Navbar";n.WebAccessSendASmileNewBehavior="WebAccess.SendASmile.NewBehavior";n.WebAccessAccountShowGettingStartedVideo="WebAccess.Account.GettingStartedVideo";n.WebAccessAccountShowGettingStartedVideoIframe="WebAccess.Account.GettingStartedVideoIframe";n.WebAccessAccountSoftDelete="WebAccess.Account.AccountSoftDelete";n.WebAccessAccountRegion="WebAccess.Account.AccountRegion";n.WebAccessServicePreviewBuild="WebAccess.Service.Preview.Build";n.WebAccessServicePreviewTest="WebAccess.Service.Preview.Test";n.WebAccessExtensions="WebAccess.Extensions";n.WebAccessExtensionsDeployment="WebAccess.Extensions.Deployment";n.WebAccessExtensionsApplication="WebAccess.Extensions.Application";n.WebAccessExtensionsProjectCollection="WebAccess.Extensions.ProjectCollection";n.WebAccessExtensionsPersonal="WebAccess.Extensions.Personal";n.WebAccessVersionControlShowSelectedBranchAdminView="WebAccess.VersionControl.ShowSelectedBranchAdminView";n.WebAccessServiceMetricsAnalytics="WebAccess.Service.MetricsAnalytics";n.WebAccessTrialModeNotification="WebAccess.TrialModeNotification";n.WebAccessEarlyAdopterNotification="WebAccess.EarlyAdopterNotification";n.WebAccessAllowEarlyAdopterAfterExpiration="WebAccess.AllowEarlyAdopterAfterExpiration";n.WebAccessAllowFpsFromScalarWidgets="WebAccess.Widgets.ScalarWidgetsFps.Enable";n.ReportingAnalyticsVisualMenu="WebAccess.Reporting.AnalyticsVisualMenu";n.ReportingBuildTestVisualExamples="WebAccess.Reporting.BuildTestVisualExamples";n.ServiceHooksTfsPublisher="ServiceHooks.TfsHooksPublisher";n.ServiceHooksGeneralAvailability="ServiceHooks.GeneralAvailability";n.OpenPlatformAnnouncement="OpenPlatform.Announcement";n.EnableAddAadUserWarning="WebAccess.EnableAddAadUserWarning";n.WebAccessAccountAadInformationNotification="WebAccess.AccountAadInformationNotification";n.WebAccessWelcomeHub="WebAccess.WelcomeHub";n.WebAccessProjectWelcomeHub="WebAccess.ProjectWelcome";n.WebAccessVersionControlGitPullRequestsWITIntegration="WebAccess.VersionControl.GitPullRequestsWITIntegration";n.WebAccessVersionControlGitReduceBranchComparisonDefaultCount="WebAccess.VersionControl.GitReduceBranchComparisonDefaultCount";n.WebAccessVersionControlGitSecretsScanning="WebAccess.VersionControl.GitSecretsScanning";n.GitPushNewPushPolicies="Git.Push.NewPushPolicies";n.GitPushCommitAuthorPushPolicy="Git.Push.CommitAuthorPushPolicy";n.GitProtectedRepos="Git.ProtectedRepos";n.VisualStudioServicesPersistedNotification="VisualStudio.Services.PersistedNotification";n.ELSVSOIntegrationAnnouncement="ELS.VSO.IntegrationAnnouncement";n.BasicUserLimitedPortfolioAccessNotificationId="16676E24-8F6A-4EAA-9A9D-FCDF57E8BC8A";n.LoadTestFeatureFlag="ELS.VSO.LoadTesting";n.LoadTestEmailEnableFlag="ELS.VSO.EmailEnable";n.LoadTestUltimateEnableFlag="ELS.VSO.UltimateEnable";n.LoadTestGeoEnableFlag="ELS.VSO.GeoEnable";n.LoadTestFeatureEnableForNonUltimateFlag="ELS.VSO.LoadTestEnableForNonUltimate";n.LoadTestAverageResponseTimeThresholdValue="ELS.VSO.AverageResponseTimeThresholdValue";n.WebAccessSearchEnableNewRoute="WebAccess.Search.EnableNewRoute";n.WebAccessSearchShell="WebAccess.SearchShell";n.WebAccessSearchProject="WebAccess.Search.Project";n.WebAccessSearchWorkItemEnableListView="WebAccess.Search.WorkItem.EnableListView";n.WebAccessSearchWorkItem="WebAccess.Search.WorkItem";n.WebAccessSearchWorkItemClientSort="WebAccess.Search.WorkItem.ClientSort";n.WebAccessSearchWorkItemServerSort="WebAccess.Search.WorkItem.ServerSort";n.WebAccessSearchCodeServerSort="WebAccess.Search.Code.ServerSort";n.WebAccessSearchCodeClientSort="WebAccess.Search.Code.ClientSort";n.WebAccessSearchWikiConditionalFaultin="WebAccess.Search.Wiki.ConditionalFaultin";n.WebAccessSearchWorkItemConditionalFaultin="WebAccess.Search.WorkItem.ConditionalFaultin";n.WebAccessSearchWorkItemFeatureToggle="WebAccess.Search.WorkItem.Feature.Toggle";n.WebAccessSearchWorkItemFeatureDefault="WebAccess.Search.WorkItem.Feature.Default";n.WebAccessSearchCustomVC="WebAccess.Search.CustomVC";n.WebAccessSearchMultiAccount="WebAccess.Search.MultiAccount";n.WebAccessSearchMultiBranch="WebAccess.Search.MultiBranch";n.WebAccessSearchMultiBranchConfigurationUX="WebAccess.Search.MultiBranchConfigurationUX";n.WebAccessSearchUseContentHash="WebAccess.Search.UseContentHash";n.WebAccessSearchWorkItemWelcomeBanner="WebAccess.Search.WorkItem.WelcomeBanner";n.WebAccessVersionControlEditing="WebAccess.VersionControl.Editing";n.WebAccessVersionControlWikiLinkTransformation="WebAccess.VersionControl.WikiLinkTransformation";n.VersionControlAllowCreateReadMe="VisualStudio.VersionControl.AllowCreateReadMe";n.SourceControlPullRequestsAttachments="SourceControl.GitPullRequests.Attachments";n.WebAccessVersionControlPullRequestsCommentFeedback="WebAccess.VersionControl.PullRequests.CommentFeedback";n.WebAccessVersionControlPullRequestsDiscussionCollapseWidget="WebAccess.VersionControl.PullRequests.DiscussionCollapseWidget";n.WebAccessVersionControlPullRequestsDiscussionCommentLikes="WebAccess.VersionControl.PullRequests.DiscussionCommentLikes";n.WebAccessVersionControlPullRequestsAutoComplete="WebAccess.VersionControl.PullRequests.AutoComplete";n.WebAccessVersionControlPullRequestsFollows="WebAccess.VersionControl.PullRequests.Follows";n.WebAccessVersionControlPullRequestsCommitsTabReplaced="WebAccess.VersionControl.PullRequest.CommitsTabReplaced";n.WebAccessVersionControlPolicyAutomaticReviewersMinimumCount="WebAccess.VersionControl.Policy.AutomaticReviewers.MinimumCount";n.WebAccessVersionControlContributions="WebAccess.VersionControl.Contributions";n.WebAccessVersionControlIncludeForcePushDetails="WebAccess.VersionControl.Pushes.IncludeForcePushDetails";n.WebAccessVersionControlGitPushersExclusionFilter="WebAccess.VersionControl.GitPushersExclusionFilter";n.WebAccessVersionControlExplorerVanityBadges="WebAccess.VersionControl.ExplorerVanityBadges";n.WebAccessVersionControlGitCredentialManagerAvailable="WebAccess.VersionControl.GitCredentialManagerAvailable";n.WebAccessVersionControlDisableAlternateAuthInGitGettingStarted="WebAccess.VersionControl.DisableAlternateAuthInGitGettingStarted";n.WebAccessVersionControlNewBranches="WebAccess.VersionControl.NewBranches";n.WebAccessVersionControlStaleBranches="WebAccess.VersionControl.StaleBranches";n.WebAccessVersionControlDisableCommitItemCache="WebAccess.VersionControl.DisableCommitItemCache";n.ChartingHistorical="Charting.Historical";n.ChartingAggregation="Charting.Aggregation";n.WebAccessBuildCIWorkflowVariableGroups="WebAccess.Build.CIWorkflow.VariableGroups";n.MarketplaceExtensionSupport="WebAccess.Build.CIWorkflow.MarketplaceExtensionSupport";n.EnableIdentityNavigation="VisualStudio.Services.Framework.EnableIdentityNavigation";n.WebAccessBuildCIWorkflowYaml="WebAccess.Build.CIWorkflow.Yaml";n.WebAccessBuildDiagnosticLogs="WebAccess.Build.DiagnosticLog";n.WebAccessBuildCIWorkflowBuildCompletion="WebAccess.Build.CIWorkflow.BuildCompletion";n.WebAccessBuildCIWorkflowAgentDefinition="WebAccess.Build.CIWorkflow.AgentDefinition";n.WebAccessCIWorkflowEditableControlsWithoutPermission="WebAccess.CIWorkflow.EditableControlsWithoutPermission";n.WebAccessCIWorkflowShallowCloneOnByDefault="WebAccess.Build.CIWorkflow.ShallowCloneOnByDefault";n.BuildXaml="Build.Xaml";n.WebAccessBuildvNextGitHubRepository="WebAccess.BuildvNext.GitHubRepository";n.WebAccessBuildvNextSvnRepository="WebAccess.BuildvNext.SvnRepository";n.WebAccessBuildPhaseDependencies="WebAccess.Build2.PhaseDependencies";n.BuildvNextRetentionPolicy="Build.BuildvNext.RetentionPolicy";n.GitHubDiscoverYamlDefinition="Build2.GitHubDiscoverYamlDefinition";n.GitHubMarketplaceApp="Build2.GitHubMarketplaceApp";n.GitHubRequireCommentsForNonTeamAndNonContributors="Build2.GitHubRequireCommentsForNonTeamAndNonContributors";n.AllowCentralizedPipelineControls="Build2.AllowCentralizedPipelineControls";n.Build2BatchRealtimeUpdates="Build2.BatchRealtimeUpdates";n.Build2AllowOutOfScopeRepository="Build2.AllowOutOfScopeRepository";n.Build2FetchTagsOffByDefault="Build2.FetchTagsOffByDefault";n.WebAccessBuild2ShowYamlView="WebAccess.Build2.ShowYamlView";n.WebAccessSearchCORS="WebAccess.SearchCORS";n.WebAccessSearchPrefetchFirstSearch="WebAccess.Search.PrefetchFirstSearch";n.UseUserDetailsArea="VisualStudio.Services.Identity.UseUserDetailArea";n.ReleaseManagementReleasesHub="WebAccess.ReleaseManagement.ReleasesHub";n.ReleaseManagementCDOptInToggle="WebAccess.ReleaseManagement.NewCDWorkflowOptInToggle";n.ReleaseManagementCDOptInDefault="WebAccess.ReleaseManagement.NewCDWorkflowOptInDefault";n.ReleaseManagementNewCDReleaseViewOptInToggle="WebAccess.ReleaseManagement.NewCDReleaseViewOptInToggle";n.ReleaseManagementNewCDReleaseViewOptInDefault="WebAccess.ReleaseManagement.NewCDReleaseViewOptInDefault";n.ReleaseManagementUseDataProviderForSetupRelease="WebAccess.ReleaseManagement.UseDataProviderForSetupRelease";n.WebAccessAgileBacklogForecastOnDemand="WebAccess.Agile.Backlog.ForecastOnDemand";n.WebAccessAgileTaskboardDelayloadStateTransitions="WebAccess.Agile.Taskboard.DelayloadStateTransitions";n.WebAccessAgileTaskboardExpandCollapseAll="WebAccess.Agile.Taskboard.ExpandCollapseAll";n.WebAccessAgileTaskboardPeopleSwitcher="WebAccess.Agile.Taskboard.PeopleSwitcher";n.WebAccessAgileTaskboardDisableCustomColumns="WebAccess.Agile.Taskboard.DisableCustomColumn";n.WebAccessAgileTaskboardDisableLiveUpdates="WebAccess.Agile.Taskboard.DisableLiveUpdates";n.WebAccessAgileTaskboardLiveUpdatesDisableThrottling="WebAccess.Agile.Taskboard.LiveUpdates.DisableThrottling";n.AgileServerTeamServiceAADGroupsBlockExpansion="Agile.Server.TeamService.AADGroupsBlockExpansion";n.WebAccessVSTSBranding="WebAccess.VSTSBranding";n.WebAccessAgileBehaviorProvisioningRESTAPI="WebAccess.Agile.BehaviorProvisioningRESTAPI";n.BacklogsOfficeFabricContextMenu="WebAccess.Agile.Backlog.OfficeFabContextMenu";n.BacklogsChangeParentContextMenu="WebAccess.Agile.Backlog.ChangeParentMenuItem";n.WebAccessWorkItemTrackingIndexedDBCaching="WebAccess.WorkItemTracking.IndexedDBCaching";n.WebAccessVersionControlPullRequestsNoDefaultTitle="WebAccess.VersionControl.PullRequests.NoDefaultTitle";n.WebAccessVersionControlPullRequestsLabels="WebAccess.VersionControl.PullRequests.Labels";n.WebAccessVersionControlPullRequestsMentions="WebAccess.VersionControl.PullRequests.Mentions";n.WebAccessVersionControlPullRequestListHideGroupReviewers="WebAccess.VersionControl.PullRequestList.HideGroupReviewers";n.WebAccessDiscussionRendererHTMLRenderer="WebAccess.VersionControl.DiscussionRenderer.HTMLRendering";n.WebAccessVersionControlEnablePermissions="WebAccess.VersionControl.EnablePermissions";n.WebAccessVersionControlDisableWITValidationWarning="WebAccess.VersionControl.DisableWITValidationWarning";n.WebAccessVersionControlFilesMoreBlame="WebAccess.VersionControl.Files.MoreBlame";n.WebAccessVersionControlContributedEmptyRepository="WebAccess.VersionControl.ContributedEmptyRepository";n.WebAccessWorkItemTrackingAddLinksByToolType="WebAccess.WorkItemTracking.AddLinksByToolType";n.WebAccessVersionControlPullRequestsTemplates="WebAccess.VersionControl.PullRequests.Templates";n.WebAccessVersionControlPullRequestsViewedStatus="WebAccess.VersionControl.PullRequests.ViewedStatus";n.WebAccessWorkItemTrackingDisableCommentCount="WebAccess.WorkItemTracking.WorkItemsHub.DisableCommentCount";n.ShareEndpointsAcrossProjects="WebAccess.ServiceEndpoints.ShareAcrossProjects";n.AzureSubscriptionBasedDockerRegistry="ServiceEndpoints.AzureSubscriptionBasedDockerRegistry";n.WebAccessWorkItemTrackingEnableCSVExport="WebAccess.WorkItemTracking.EnableCSVExport";n.WebAccessWorkItemTrackingEnableCSVImport="WebAccess.WorkItemTracking.EnableCSVImport";n.DisableWebAccessServerKanbanLogs="WebAccess.Server.DisableKanbanLogs";n.EnableNewUIForKubernetesEndpoint="ServiceEndpoints.EnableNewUIForKubernetesEndpoint";n.EnableNewUIForAzureRMEndpoint="ServiceEndpoints.EnableNewUIForAzureRMEndpoint";n.EnableSovereignSupportInKubernetesEndpoint="ServiceEndpoints.EnableSovereignSupport";n.BitbucketAzurePipelinesOAuthClient="Build2.BitbucketAzurePipelinesOAuthClient";n.BitbucketAzurePipelinesBackupOAuthClient="Build2.BitbucketAzurePipelinesBackupOAuthClient";n.GetWorkItemHistoryFieldValue="WebAccess.WorkItemTracking.GetWorkItemHistoryFieldValue";n.TypeScriptRuleEngineStateTransitionFilteringDisabled="WebAccess.WorkItemTracking.TypeScriptRuleEngineStateTransitionFilteringDisabled";n.AllowWasEverForComputed="WebAccess.WorkItemTracking.AllowWasEverForComputed";n.DisableWorkItemTypesSplittedLoading="WebAccess.WorkItemTracking.DisableWorkItemTypesSplittedLoading";n.SourceControlGitPullRequestsMergeStrategyRebase="SourceControl.GitPullRequests.MergeStrategy.Rebase";n.GitCommitMessageWITTransition="VisualStudio.Mentions.GitCommitMessageWITTransition";n.WebAccessSkypeTeamsTabConfiguration="WebAccess.SkypeTeams.TabConfiguration";n.WebAccessScaledAgilePlansDeliveryTimelineDelayedDragDropCard="WebAccess.ScaledAgile.Plans.DeliveryTimeline.DelayedDragDropCard";n.WebAccessScaledAgilePlansDeliveryTimelineIsCardMovementAnimated="WebAccess.ScaledAgile.Plans.DeliveryTimeline.IsCardMovementAnimated";n.WebAccessAgileKanbanFlatQuery="WebAccess.Agile.Kanban.FlatQuery";n.WebAccessAgileKanbanBoardAutoRefreshThrottling="WebAccess.Agile.KanbanBoard.AutoRefresh.Throttling";n.WebAccessAgileCardAnnotations="WebAccess.Agile.Card.Annotations";n.WebAccessAgileCardRollup="WebAccess.Agile.Card.Rollup";n.WebAccessAgileIncreaseDefaultFilterPageSize="WebAccess.Agile.KanbanBoard.IncreaseDefaultFilterPageSize";n.UseTokenFiltering="WebAccess.WorkItemTracking.UseTokenFiltering";n.DisableLinkFiltersFix="WebAccess.Agile.DisableLinkFiltersFix";n.WebAccessAgileUseBehaviorsForBacklogLevels="WebAccess.Agile.UseBehaviorsForBacklogLevels";n.WebAccessAgileBacklogOneClickOpen="WebAccess.Agile.Backlog.OneClickOpen";n.WebAccessAgileBacklogEnableRollupColumns="WebAccess.Agile.Backlog.EnableRollupColumns";n.WebAccessAccessibilityMonitor="WebAccess.AccessibilityMonitor";n.WebAccessAgileBacklogSafeguardPerformanceSampling="WebAccess.Agile.Backlog.Safeguard.PerformanceSampling";n.TeamServiceSafeguardBlockCreateTeamAndAdminOperations="TeamService.Safeguard.BlockCreateTeamAndAdminOperations";n.TeamConfigurationServiceLimitTeamAreaPathsAndIterations="TeamConfigurationService.SaveTeamFields.LimitAllowedTeamAreaPathsAndIterations";n.CodeAnalysisAdornmentProvider="WebAccess.VersionControl.CodeAnalysisAdornmentProvider";n.WebAccessProcessUpload="WebAccess.Process.ProcessUpload";n.WebAccessXmlTemplateProcess="WebAccess.Process.XmlTemplateProcess";n.WorkItemTrackingCloneHostedXmlToInheritedDisabled="WorkItemTracking.Server.CloneHostedXmlToInheritedDisabled";n.WorkItemTrackingNewFormMoreSpaceInHeader="WebAccess.WorkItemTracking.NewForm.MoreSpaceInHeader";n.WorkItemTrackingMove="WorkItemTracking.Server.MoveWorkItems";n.InvalidateClientTagCacheOnWorkItemSave="WebAccess.WorkItemTracking.InvalidateClientTagCacheOnWorkItemSave";n.WebAccessWorkItemTrackingFindWiUseFavorites="WebAccess.WorkItemTracking.FindWorkItemUseFavorites";n.ShowTeamProfileCard="WebAccess.ShowTeamProfileCard";n.TeamAgnosticWorkItemTemplates="WebAccess.WorkItemTracking.TeamAgnosticWorkItemTemplates";n.WorkItemTemplatesLegacyUrl="WebAccess.WorkItemTracking.WorkItemTemplates.LegacyUrl";n.DisableWorkItemTrackingStateColors="WebAccess.WorkItemTracking.Safeguard.DisableWorkItemStateColors";n.WorkItemTrackingChangeWorkItemType="WorkItemTracking.Server.ChangeWorkItemType";n.DisableSendMailDataProvider="WorkItemTracking.Server.DisableSendMailDataProvider";n.AllowEmailingInvitedUsers="WorkItemTracking.Server.AllowEmailingInvitedUsers";n.DisableWorkItemColorDataProvider="WorkItemTracking.Server.DisableWorkItemColorDataProvider";n.EnableWebAccessBoardsService="WorkItemTracking.Server.EnableWebAccessBoardsService";n.EnableUIWithBoardsService="WorkItemTracking.Server.EnableUIWithBoardsService";n.DisableWorkItemStoreDataProviders="WorkItemTracking.Server.DisableWorkItemStoreDataProviders";n.ProjectChangeProcessDisabled="WorkItemTracking.Server.ProjectChangeProcessDisabled";n.CloneProcessCustomWITStatesNewMergeDisabled="WorkItemTracking.Server.CloneProcessCustomWITStatesNewMergeDisabled";n.EnableClassificationNodeRestClients="WorkItemTracking.Server.EnableClassificationNodeRestClients";n.EnableLiveReloadForWorkItemLinks="WebAccess.WorkItemTracking.EnableLiveReloadForWorkItemLinks";n.AllowMVCDownloadAttachment="WorkItemTracking.Server.AllowMVCDownloadAttachment";n.IgnoreActiveWorkItemTypesInBacklogsHubContentService="WorkItemTracking.Server.IgnoreActiveWorkItemTypesInBacklogsHubContentService";n.WebAccessWorkItemTrackingHistoryViewExtension="WebAccess.WorkItemTracking.HistoryViewExtension";n.WebAccessWorkItemTrackingEnableLinksOfDeletedAttachments="WebAccess.WorkItemTracking.EnableLinksOfDeletedAttachments";n.WebAccessWidgetsUseAnalyticsAgileChartingClient="WebAccess.Widgets.UseAnalyticsAgileChartingClient";n.WebAccessBuildvNextEmailBuildSummary="WebAccess.BuildvNext.EmailBuildSummary";n.WebAccessVersionControlQuickActions="WebAccess.VersionControl.QuickActions";n.WebaccessProcessHierarchy="WebAccess.Process.Hierarchy";n.WebaccessProcessSecurityPanel="WebAccess.Process.SecurityPanel.Enable";n.WebAccessServicePrincipal="WebAccess.ServicePrincipal";n.WebAccessHideServicePrincipal="WebAccess.HideServicePrincipal";n.WebAccessAutoCreateServicePrincipal="WebAccess.AutoCreateServicePrincipal";n.WebAccessAutoCreateServicePrincipalAcrossTenants="WebAccess.AutoCreateServicePrincipalAcrossTenants";n.WebAccessAutoCreateOAuthBasedServicePrincipalAcrossTenants="WebAccess.AutoCreateOAuthBasedServicePrincipalAcrossTenants";n.WebAccessAutoCreateServicePrincipalCompleteCallbackByAuthcode="WebAccess.AutoCreateServicePrincipalCompleteCallbackByAuthcode";n.WebAccessEnableNationalCloudForServicePrincipal="WebAccess.EnableNationalCloudForServicePrincipal";n.WebAccessEnableAzureStackForServicePrincipal="WebAccess.EnableAzureStackForServicePrincipal";n.WebAccessEnableResourceGroupScopedServicePrincipal="WebAccess.EnableResourceGroupScopedServicePrincipal";n.WebAccessSignalRSeparateAppPool="WebAccess.SignalR.AppPool";n.WebAccessSignalRDisablePing="WebAccess.SignalR.DisablePing";n.WebAccessWorkItemTrackingFormSignalR="WebAccess.WorkItemTracking.Form.SignalR.Enabled";n.AadGroupsAdminUi="VisualStudio.Services.AadGroupsAdminUi";n.MinControlNewAddDialog="VisualStudio.Services.Web.MinControlNewAddDialog";n.DoNotPopulateIdentityGrid="VisualStudio.Services.Web.DoNotPopulateIdentityGrid";n.CollectionAdminWebUi="VisualStudio.Services.Web.CollectionAdmin.UserExperience";n.OrgAdminWebUi="VisualStudio.Services.Web.OrgAdmin.UserExperience";n.TriPassPercentageCalculation="TestManagement.Server.TriPassPercentageCalculation";n.TriShowTestRunSummaryInContext="TestManagement.Server.TriShowTestRunSummaryInContext";n.TriTrendChartsForRM="TestManagement.Server.TriTrendChartsForRM";n.BuildSummaryCodeCoverage="TestManagement.Server.BuildSummaryCodeCoverage";n.ModuleDetailsUIForDotCoverage="TestManagement.Server.ModuleDetailsUIForDotCoverage";n.BuildSummaryCodeCoverageCharts="TestManagement.Server.BuildSummaryCodeCoverageCharts";n.FileContainerServiceBrowseItems="VisualStudio.FileContainerService.BrowseItems";n.TriReportCustomization="TestManagement.Server.TRIReportCustomization";n.ShowNotImpactedInTestResults="TestImpact.Server.ShowNotImpactedInTestResults";n.TriQuickStartTraceability="TestManagement.Server.TriQuickStartTraceability";n.TCMUseNewIdentityPicker="WebAccess.TestManagement.UseNewIdentityPicker";n.IdentityPickerClientPerformance="VisualStudio.Services.IdentityPicker.ClientPerformance";n.SSHPublicKeys="WebAccess.SshUI";n.WebAccessTCMTestPlanLiteHub="WebAccess.TestManagement.TestPlanLiteHub";n.WebAccessTCMMineTestPlanSkinnyProvider="WebAccess.TestManagement.MineTestPlanSkinnyProvider";n.WebAccessTCMAllTestPlanSkinnyProvider="WebAccess.TestManagement.AllTestPlanSkinnyProvider";n.WebAccessTCMAdvTestExtPermissionsProvider="WebAccess.TestManagement.AdvTestExtPermissionsProvider";n.WebAccessTCMManageTestPlansHubLWP="WebAccess.TestManagement.ManageTestPlansHubLWP";n.AddToExistingBugResultSummaryPage="WebAccess.TestManagement.AddToExistingBugResultSummaryPage";n.WebAccessUseNonWiqlPointCountQuery="WebAccess.TestManagement.UseNonWiqlPointCountQuery";n.WebAccessShowDTROptionForTestRunner="WebAccess.TestManagement.ShowDTROptionForTestRunner";n.WebAccessTCMEnableXtForEdge="WebAccess.TestManagement.EnableEdgeXt";n.GatedCheckInTrigger="Build2.GatedCheckInTrigger";n.MaxConcurrentBuildsPerBranchFeature="Build2.MaxConcurrentBuildsPerBranch";n.FilePathArtifactsAndSymbolsDeleteFeature="Build2.Retention.FilePathArtifactsAndSymbolsDelete";n.BuildAllDefinitionsTab="WebAccess.Build.Definitions.All";n.WebAccessAddInlineTest="WebAccess.TestManagement.InlineTest";n.ExcludeJQueryUI="VisualStudio.Services.Contributions.ExcludeCompleteJQueryUI";n.WebAccessTestManagementPointCountFeatureDisabled="WebAccess.TestManagement.PointCountFeature";n.WebAccessTestManagementEnableDesktopScreenShot="WebAccess.TestManagement.EnableDesktopScreenShot";n.WebAccessTestManagementEnableAudioWithVideo="WebAccess.TestManagement.EnableAudioWithVideo";n.WebAccessTestManagementRenderMarkDownComment="WebAccess.TestManagement.RenderMarkDownComment";n.WebAccessTestManagementUpdateRunComment="WebAccess.TestManagement.UpdateRunComment";n.WebAccessTestManagementReactBasedRunWithOptionsDialog="WebAccess.TestManagement.ReactBasedRunWithOptions";n.LogStoreAttachments="WebAccess.TestManagement.LogStore";n.WebAccessTestManagementAttachmentsGridView="WebAccess.TestManagement.AttachmentsGridView";n.WebAccessTestManagementBugsGridView="WebAccess.TestManagement.BugsGridView";n.WebAccessTestManagementLinkedItemsGridView="WebAccess.TestManagement.LinkedItemsGridView";n.WebAccessTestManagementRequirementsGridView="WebAccess.TestManagement.RequirementsGridView";n.WebAccessTestManagementFiltersForRerun="WebAccess.TestManagement.FiltersForRerun";n.WebAccessTestManagementLinkedStackTrace="WebAccess.TestManagement.LinkedStackTrace";n.TriTestResultsSearchAndFilter="WebAccess.TestManagement.TestResultsSearchAndFilter";n.AnalyticsTestResultsFilters="WebAccess.TestManagement.Analytics.TestResultsFilters";n.AnalyticsRouteAPIsToTestResultDaily="WebAccess.TestManagement.Analytics.RouteAPIsToTestResultDaily";n.AnalyticsSwitchToTestSKContextFilter="WebAccess.TestManagement.Analytics.SwitchToTestSKContextFilter";n.AnalyticsGroupByAndFilterOnTestSK="WebAccess.TestManagement.Analytics.GroupByAndFilterOnTestSK";n.TestAnalyticsRemoveReleaseEntities="WebAccess.Test.Analytics.RemoveReleaseEntities";n.PipelineAnalyticsRenameBuildEntities="WebAccess.Pipeline.Analytics.RenameBuildEntities";n.TriReportingAbortedRuns="TestManagement.Server.ReportingAbortedRuns";n.TriInProgress="TestManagement.Server.ReportingInProgressRuns";n.TriSignalRIntegration="TestManagement.Server.SignalRReportingRuns";n.PublishOnTcmService="TestManagement.Server.EnablePublishOnTcmService";n.UseOnlyLongPolling="WebAccess.TestManagement.UseOnlyLongPolling";n.QueryFromTcmService="WebAccess.TestManagement.QueryFromTcmService";n.LWPTestTab="WebAccess.TestManagement.TestTabInNewWebPlatform";n.WebAccessTestManagementInProgressRunsInInProgressDefaultView="WebAccess.TestManagement.ShowInProgressRunsInInProgressDefaultView";n.WebAccessTestManagementHierarchicalViewForResults="WebAccess.TestManagement.HierarchicalViewForResults";n.WebAccessTestManagementShowSummaryForNotImpactedTests="WebAccess.TestManagement.ShowSummaryForNotImpactedTests";n.TcmChartWidget="WebAccess.Widgets.TcmChartWidget";n.WebAccessTestManagementAddRefLinksToRequirement="TestManagement.Server.AddTestCaseRefLinksToRequirement";n.WebAccessTestManagementTestTabExtensionBuild="WebAccess.TestManagement.TestTabExtension.Build";n.WebAccessTestManagementTestTabInNewWebPlatform="WebAccess.TestManagement.TestTabInNewWebPlatform";n.UpdateTestersOnSuiteUpdate="TestManagement.Server.SuitesApiIncludeTesters";n.WebAccessTestManagementNewTestPlanExperienceToggle="WebAccess.TestManagement.NewTestPlanExperience.Toggle";n.IsSingletonTestPointGridToolbarInstanceEnabled="WebAccess.TestManagement.SingletonTestPointGridToolbarInstance";n.ShouldEnableFilterInInProgress="TestManagement.Server.ShouldEnableFilterInInProgress";n.AnalyticsHubForManualTest="WebAccess.TestManagement.EnableNewAnalyticsHubForManualTest";n.DisableAutoRefreshOfEntryPointTextForAnalyticsHubForManualTest="WebAccess.TestManagement.DisableAutoRefreshOfEntryPointTextForAnalyticsHubForManualTest";n.GalleryPromotion="Gallery.NewFeature.GalleryPromotion";n.AdminWorkHubDisplayAreaOwners="Admin.WorkHub.DisplayAreaOwners";n.BuildHostedImage="WebAccess.Build.HostedImageSelection";n.NewCIWorkflowOptIn="WebAccess.Build.NewCIWorkflowOptIn";n.NewCIWorkflowOptInDefault="WebAccess.Build.NewCIWorkflowOptInDefault";n.NewCIWorkflowOptInToggle="WebAccess.Build.NewCIWorkflowOptInToggle";n.TaskOutputVariables="DistributedTask.TaskOutputVariables";n.TaskValidateOutputVariables="DistributedTask.TaskValidateOutputVariables";n.BuildAndReleaseResourceLimits="WebAccess.BuildAndRelease.ResourceLimits";n.LimitHostedMaxParallelism="DistributedTask.LimitHostedMaxParallelism";n.PipelineBillingModel2SelfHostedInfiniteResourceLimits="DistributedTask.PipelineBillingModel2.SelfHosted.InfiniteResourceLimits";n.PipelineBillingModel2="DistributedTask.PipelineBillingModel2";n.PipelineBillingModel2PublicProjects="DistributedTask.PipelineBillingModel2.PublicProjects";n.OldTaskGroupHub="WebAccess.DistributedTask.EnableOldTaskGroupHub";n.SwitchToQueueAdminHubExtension="WebAccess.DistributedTask.Queue.Extension";n.DistributedTaskKSB="Webaccess.DistributedTask.KSB";n.ServiceEndpointInlineSPNDescriptor="DistributedTask.TaskEditor.ServiceEndpointInlineSPNDescriptor";n.DistributedTaskTaskPreview="DistributedTask.TaskPreview";n.DistributedTaskViewYamlHasMoved="DistributedTask.ViewYamlHasMoved";n.WebAccessVersionControlCherryPick="WebAccess.VersionControl.CherryPick";n.SourceControlCherryPick="SourceControl.CherryPick";n.SourceControlRevert="SourceControl.Revert";n.SourceControlGitPullRequestsConflicts="SourceControl.GitPullRequests.Conflicts";n.SourceControlGitCherryPickConflicts="SourceControl.GitCherryPick.Conflicts";n.SourceControlGitRevertConflicts="SourceControl.GitRevert.Conflicts";n.SourceControlGitPullRequestsRetarget="SourceControl.GitPullRequests.Retarget";n.SourceControlGitPullRequestsSelectiveAutoComplete="SourceControl.GitPullRequests.SelectiveAutoComplete";n.SourceControlGitPullRequestsEnforceAdHocRequiredReviewers="SourceControl.GitPullRequests.EnforceAdHocRequiredReviewers";n.SourceControlGitPullRequestsAutoCompleteLegacyNonBlockingBehavior="SourceControl.GitPullRequests.AutoCompleteLegacyNonBlockingBehavior";n.WebAccessVersionControlConflictsDisplay="WebAccess.VersionControl.ConflictsDisplay";n.WebAccessNotificationsUI="Notifications.Web.NotificationsUI";n.NotificationsWebTileStatistic="Notifications.Web.TileStatistic";n.UsersAndRoomsHubs="WebAccess.ContributedHeader.UsersAndRoomsHubs";n.NewAccountLandingPageFavoriteDiscovery="WebAccess.Account.NewLandingPage.FavoriteDiscovery";n.NewUserHub="VisualStudio.UserManagement.Web.UserHub";n.WebAccessMyExperiencesNewProjectCreation="WebAccess.MyExperiences.NewProjectCreation";n.WebAccessMyExperiencesOrgAccountSelector="WebAccess.MyExperiences.OrgAccountSelector";n.WebAccessSearchSearchThisOrganization="WebAccess.Search.SearchThisOrganization";n.WebAccessNewEmptyRepoPage="WebAccess.VersionControl.NewEmptyRepoPage";n.QuickStartXTPromotion2="TestManagement.QuickStart.XTPromotion2";n.MyWorkShowRecentActivity="WebAccess.MyWork.ShowRecentActivity";n.MyWorkShowMentioned="WebAccess.MyWork.ShowMentioned";n.NewProjectOVerviewPageBuildReleaseMetrics="WebAccess.Project.NewOverviewPage.BuildReleaseMetrics";n.NewProjectOverviewPageLikes="WebAccess.Project.NewOverviewPage.Likes";n.NewProjectOverviewUseIsAnyServiceInitializedData="WebAccess.Project.Verticals.OverviewPage.UseIsAnyServiceInitializedData";n.ProcessSettingsValidatorAllowCustomTeamField="Agile.ProcessSettingsValidator.AllowCustomTeamField";n.WebAccessWikiImmersive="WebAccess.Wiki.Immersive";n.WebAccessWikiPageViewStats="WebAccess.Wiki.PageViewStats";n.WebAccessWikiProductDocumentation="WebAccess.Wiki.ProductDocumentation";n.WebAccessWikiUnpublishCodeWiki="WebAccess.Wiki.UnpublishCodeWiki";n.WebAccessWikiHandleBrokenLinks="WebAccess.WikiHandleBrokenLinks";n.WebAccessWikiTemplateSupport="WebAccess.Wiki.TemplateSupport";n.WebAccessWikiRichCodeWikiEditing="WebAccess.Wiki.RichCodeWikiEditing";n.WebAccessWikiRenameWiki="WebAccess.Wiki.RenameWiki";n.WikiTemplateEditing="Wiki.EnableTemplateEditing";n.WikiWebEnableNewMermaidSupportedDiagram="Wiki.Web.EnableNewMermaidSupportedDiagram";n.WebAccessWikiEnableFuzzySearch="WebAccess.Wiki.EnableFuzzySearch";n.WebAccessWikiDetailedFilterTelemetry="WebAccess.Wiki.DetailedFilterTelemetry";n.CleanupDeleteBoardsForDeletedBacklogLevels="Agile.Cleanup.DeleteBoardsForDeletedBacklogLevels";n.WebAccessProjectTags="WebAccess.Project.Tags";n.WebAccessProjectLanguages="WebAccess.Project.Languages";n.WebAccessAgileDoneColumnSortNullsLast="WebAccess.Agile.DoneColumnSortNullsLast";n.UserManagementProjectDialog="VisualStudio.UserManagement.ProjectInviteDialog";n.AnalyticsRichWorkFieldFiltering="WebAccess.Widgets.AnalyticsRichWorkFieldFiltering";n.PATPaginationAndFiltering="VisualStudio.Services.Identity.PATPaginationAndFiltering";n.UseNotificationPipelineForMentions="VisualStudio.Mentions.UseNotificationPipeline";n.AllowGroupMentions="VisualStudio.Mentions.AllowGroupMentions";n.MaterializeAadGroupsInMentions="VisualStudio.Mentions.MaterializeAadGroupsInMentions";n.UseStorageKeyInMentions="VisualStudio.Mentions.UseStorageKeyInMentions";n.HideTypeAndTitleInWorkItemMentions="VisualStudio.Mentions.HideTypeAndTitleInWorkItemMentions";n.GroupLicensingRule="VisualStudio.Services.GroupLicensingRule";n.AnonymousAccessFeatureName="VisualStudio.Services.Identity.AnonymousAccess";n.WebAccessDashboardsUseFpsNavigation="WebAccess.Dashboards.UseFpsForSwitchingDashboards.Enable";n.WebAccessDashboardsMonitorResourceUtilizationHeaders="WebAccess.Dashboards.MonitorResourceUtilizationHeaders";n.WebAccessDashboardsSuppressAutoRefreshOnHighResourceUtilization="WebAccess.Dashboards.SuppressAutoRefreshOnHighResourceUtilization";n.WebAccessDashboardsSecurityDialog="WebAccess.Dashboards.SecurityDialog";n.WebAccessAllowFpsWidgets="WebAccess.Widgets.AllowFpsWidgets";n.UseNewBranding="VisualStudio.Services.WebPlatform.UseNewBranding";n.NetPromoterSurveyAnonymousAccess="WebAccess.Survey.NetPromoter.AnonymousAccess";n.ATREnableIALAndVideo="WebAccess.TestManagement.ATREnableIALAndVideo";n.ATREnableVideoWithAudio="WebAccess.TestManagement.ATREnableVideoWithAudio";n.GitHubLinkification="WorkItemTracking.Server.GitHubLinkification";n.ShareVariableGroups="WebAccess.DistributedTask.ShareVariableGroups";n.EnableChecksScalabilityResourceIssues="Pipelines.Checks.EnableChecksScalabilityResourceIssues";n.ResourceAuthorizationforVGEndpoint="WebAccess.DistributedTask.ResourceAuthorization.VGEndpoint";n.WebAccessWorkItemTrackingFormRoosterEnable="WebAccess.WorkItemTracking.Form.Rooster.Enable";n.WebAccessWorkItemTrackingFormCommentServiceEditAndDeleteEnable="WorkItemTracking.Server.CommentService.EnableEditAndDelete.F4";n.WebAccessWorkItemTrackingEnableCommentReactions="WorkItemTracking.Server.CommentService.EnableCommentReactions";n.WebAccessEnableCommentReactionsNotifications="Comments.Server.EnableCommentReactionsNotifications";n.WebAccessWorkItemTrackingDisableTagsMRU="WebAccess.WorkItemTracking.DisableTagsMRU";n.ResourceAuthorizationExperience="WebAccess.DistributedTask.ResourceAuthorizationExperience";n.QueryMyWorkByExcludingDoneStates="WorkItemTracking.Server.QueryMyWorkByExcludingDoneStates";n.AnalyticsDashboardShadowTesting="WebAccess.Dashboards.AnalyticsShadowTesting";n.PipelinesSimplifiedRetention="Pipelines.SimplifiedRetention";n.PipelinesExtendedRetention="Pipelines.ExtendedRetention";n.EnableCustomFollows="WebAccess.WorkItemTracking.EnableCustomFollows";n.WebAccessWorkItemTrackingHtmlFieldsMentionsEnable="WebAccess.WorkItemTracking.EnableHtmlFieldsMentions";n.UseProdAzureResources="VisualStudio.Services.UseProdAzureResourcesOnDevFabric";n.NewServiceConnectionUI="ms.vss-distributedtask-web.new-serviceconnections-ui";n.EnableBranchesMenuSecurityDialog="WebAccess.VersionControl.Branches.SecurityDialog";n.EnableExtensionFilterMethodUsageTelemetry="WebAccess.WorkItemTracking.EnableExtensionFilterMethodUsageTelemetry";n.EnableAreaIterationPathSecurityDialog="WebAccess.Agile.Admin.SecurityDialog";n.EnableDetailedMyWorkItemsList="WebAccess.MyExperiences.MyWorkItems";n.EnableRepositoriesSecurityView="WebAccess.VersionControl.Repositories.SecurityView";n.DashboardsTeamAgnostic="WebAccess.Dashboards.TeamAgnosticDashboards";n.EnableNewSignalrRAppPool="WebAccess.SignalR.AppPool";n.EnableBlockingLastPusherVote="SourceControl.Policy.LastPusherCannotBeApprover";n.EnableSourceControlPolicyLastIterationApproved="SourceControl.Policy.LastIterationApproved";n.DisableRelatedWorkItemSuggestions="WebAccess.WorkItemTracking.DisableRelatedWorkItemSuggestions";n.DisableRichTextWorkItemPrefetch="WebAccess.WorkItemTracking.DisableRichTextWorkItemPrefetch";n.DisableAssigneesOnChildItems="WorkItemTracking.Server.DisableAssigneesOnChildItems";n.ServerSideFilteringByKeywordDisabled="WebAccess.WorkItemTracking.ServerSideFilteringByKeywordDisabled";n.MarkdownDiscussionEnabled="WebAccess.WorkItemTracking.Form.MarkdownDiscussionEnabled";n.EnableNewCommentsStorage="WorkItemTracking.Server.CommentService.LegacyCommentsApiOnNewStorage";n.EnableGetTestFailureTypeFromTcm="WebAccess.TestManagement.EnableGetTestFailureTypeFromTcm";n.GetBuildCodeCoverageReadOnlyEnabled="WebAccess.TestManagement.GetBuildCodeCoverage.EnableSqlReadReplica";n.GetCodeCoverageSummaryReadOnlyEnabled="WebAccess.TestManagement.GetCodeCoverageSummary.EnableSqlReadReplica";n.GetQueryTestHistoryReadOnlyEnabled="WebAccess.TestManagement.QueryTestHistory.EnableSqlReadReplica";n.ServicePrincipalsAllowed="WebAccess.WorkItemTracking.ServicePrincipalsAllowed";n.ProjectLimitAreaPathsEnabled="WorkItemTracking.Server.ProjectLimitAreaPaths";n.ProjectLimitIterationPathsEnabled="WorkItemTracking.Server.ProjectLimitIterationPaths"}(r=t.FeatureAvailabilityFlags||(t.FeatureAvailabilityFlags={})),function(n){n[n.Off=0]="Off";n[n.Advertising=1]="Advertising";n[n.Trial=2]="Trial";n[n.Licensed=3]="Licensed"}(u=t.FeatureMode||(t.FeatureMode={})),function(n){n.MruHubPath="/WebAccess/MRU/Hub";n.MruCookieName="StickyHub";n.EmitHubMruViewDataKey="TFS-EmitHubMru"}(f=t.HubsConstants||(t.HubsConstants={})),function(n){n.Admin="65AC9DB3-BB0A-42fe-B584-A690FB0D817B";n.AdvancedBacklogManagement="CEDD6BE8-B717-4a0a-8BFD-C4E9B4CAA071";n.AdvancedHomePage="509B6940-9948-47e6-A392-99E0CA873F65";n.AdvancedPortfolioBacklogManagement="F1026762-C08D-4de3-9C17-7587296F3CFE";n.AgileBoards="181DDF83-AFAF-4982-97D9-870AE96BB8D3";n.BacklogManagement="EC7545A3-E5DB-40E8-B0D0-F64DF7619BBA";n.Build="D8BE799B-2716-4c4b-A939-E97C46A28CAA";n.ChartAuthoring="F01E607A-F55C-4038-8F4B-7956712DEA22";n.ChartViewing="A510D786-5E4B-432F-8C31-F9D7B42CF17E";n.Code="2FF0A29B-5679-44f6-8FAD-F5968AE3E32E";n.Feedback="BB000720-4CF7-466A-BA47-1AB40B7A8DFB";n.PortfolioBacklogManagement="68DFF179-850A-4F20-A489-E6BD6E6A17EC";n.ReleaseManagementStakeholder="F2CB3207-42D8-42CA-81F3-43F9C5182AF7";n.ReleaseManagement="321CEBB8-72F6-40E6-836D-47580566CCF4";n.Standard="D91355E2-2A55-4CBE-9636-4D73F70FBA7C";n.TestManagementForBasicUsers="2BAEE8C9-BB36-4DE1-B991-3C1B6B5CB2B5";n.TestManagementForExpressSku="2DD84BB6-7821-4FDE-85BA-A6CC4AB1B7E9";n.TestManagement="8D00EEB7-D5AD-4141-B601-FBB500F264BA";n.ViewMyWorkItems="4F5D9D44-EC3F-4AF1-921A-DEE2147C54DC"}(e=t.LicenseFeatureIds||(t.LicenseFeatureIds={})),function(n){n.DismissNotificationRegistryPath="/notification/dismiss/"}(o=t.Messages||(t.Messages={})),function(n){n[n.Deleting=2]="Deleting";n[n.New=0]="New";n[n.WellFormed=1]="WellFormed";n[n.CreatePending=3]="CreatePending";n[n.All=-1]="All";n[n.Unchanged=-2]="Unchanged";n[n.Deleted=4]="Deleted"}(s=t.ProjectState||(t.ProjectState={})),function(n){n.EveryoneInTenant="EveryoneInTenant";n.TeamMembers="TeamMembers";n.Everyone="Everyone"}(h=t.ProjectVisibilityConstants||(t.ProjectVisibilityConstants={})),function(n){n.FeaturesCapabilityName="features";n.FeaturesEnabled="featuresEnabled";n.VersionControlCapabilityName="versioncontrol";n.VersionControlCapabilityAttributeName="sourceControlType";n.VersionControlGitEnabledAttributeName="gitEnabled";n.VersionControlTfvcEnabledAttributeName="tfvcEnabled";n.ProcessTemplateCapabilityName="processTemplate";n.ProcessTemplateCapabilityTemplateNameAttributeName="templateName";n.ProcessTemplateCapabilityTemplateTypeIdAttributeName="templateTypeId"}(c=t.TeamProjectCapabilitiesConstants||(t.TeamProjectCapabilitiesConstants={})),function(n){n.Project="Project";n.Team="Team";n.WebTeam="WebTeam";n.Repository="Repository"}(l=t.TfsSettingsScopeNames||(t.TfsSettingsScopeNames={}))});

define("Mention/Scripts/TFS.Mention",["require","exports","q","VSS/VSS","VSS/Diag","VSS/Utils/Array","VSS/FeatureAvailability/Services","Presentation/Scripts/TFS/Generated/TFS.Server.WebAccess.Constants"],function(n,t,i,r,u,f,e,o){function p(n,t,i,r){var u,f;return r===void 0&&(r="1.0"),u=h.HTML_MENTION_VERSION_ATTR+h.METADATA_ATTR_SEPARATOR+r,i&&(u+=","+i),f=$("<a/>").attr("href",n).attr(h.HTML_MENTION_ATTR_NAME,u).text(t),f[0].outerHTML+"&nbsp;"}var h,y,s,l,a,c,v;Object.defineProperty(t,"__esModule",{value:!0});t.ArtifactsCache=t.MentionsRenderer=t.ArtifactMentionParser=t.MentionProcessor=t.TextPartType=t.createHtmlMention=t.CssClasses=t.Constants=void 0,function(n){n.PATTERN_WORD_START_SEPARATOR="\\s|^|-|\\.|,|:|;|'|\"|\\(";n.PATTERN_WORD_END_SEPARATOR="\\s|$|\\.|,|:|;|-|' | \"|\\)";n.PATTERN_WORD_SEPARATOR="\\s#";n.METADATA_ATTR_SEPARATOR=":";n.HTML_MENTION_ATTR_NAME="data-vss-mention";n.HTML_MENTION_ID_ATTR="id";n.HTML_MENTION_VERSION_ATTR="version";n.HTML_MENTION_LEGACY_HREF_ATTR="mailto";n.HTML_MENTION_VERSION_10=n.HTML_MENTION_VERSION_ATTR+n.METADATA_ATTR_SEPARATOR+"1.0";n.HTML_MENTION_VERSION_20=n.HTML_MENTION_VERSION_ATTR+n.METADATA_ATTR_SEPARATOR+"2.0";n.HTML_MENTION_ID_ATTR_PREFIX=n.HTML_MENTION_ID_ATTR+n.METADATA_ATTR_SEPARATOR;n.HTML_MENTION_LEGACY_FORMAT_HREF=n.HTML_MENTION_LEGACY_HREF_ATTR+n.METADATA_ATTR_SEPARATOR;n.CODE_BLOCK_REGEX="(```[a-z]*[\\s\\S]*?```)|(<pre>[a-z]*[\\s\\S]*?<\/pre>)|(`[a-z]*[\\s\\S]*?`)";n.EMPTY_LINES_IN_BLOCK_REGEX="\\n[\\s]*\\n";n.CONTAINER_REGEX="(:::[\\s]*\\S+[\\s\\r\\n]+[\\s\\S]*?:::)";n.IDENTITY_PICKER_CONSUMER_ID="0ca36598-9c44-4a19-a3b1-74960b631990";n.DISCUSSION_MESSAGE_CLASS="discussion-messages-messagecontent";n.HTML_RENDERED_MENTION_ATTR_NAME="data-rendered-mention"}(h=t.Constants||(t.Constants={})),function(n){n.AUTOCOMPLETE_ID="mention-autocomp-id";n.AUTOCOMPLETE_TITLE="mention-autocomp-title"}(y=t.CssClasses||(t.CssClasses={}));t.createHtmlMention=p,function(n){n[n.Text=0]="Text";n[n.Mention=1]="Mention"}(s=t.TextPartType||(t.TextPartType={}));l=function(){function n(n){n===void 0&&(n=c.getDefault());this._parserFactories=[];this._mentionsRenderer=n;e.FeatureAvailabilityService.isFeatureEnabled(o.FeatureAvailabilityFlags.WebAccessVersionControlPullRequestsMentions,!1)&&this._parserFactories.push(i.Promise(function(n){r.using(["VersionControl/Scripts/Mentions/PullRequestMentionParser"],function(t){n(function(){return t.createParser()})})}));this._MentionTranslatorFactory=i.Promise(function(n){r.using(["Mention/Scripts/TFS.Mention.People","Mention/Scripts/TFS.Mention.People.Registration"],function(t){n(function(){return t.getDisplayNameStorageKeyTranslatorInstance()})})})}return n.getDefault=function(){return n._defaultInstance||(n._defaultInstance=new n),n._defaultInstance},n.prototype.registerParser=function(n){this._parsers?this._parsers.then(function(t){for(var f,r=n(),e=r.getArtifactType(),i=0,u=t;i<u.length;i++)if(f=u[i],f.getArtifactType()===e)throw new Error("Cannot register additional parser of same artifact type after initialization.");return t.push(r),t}):this._parserFactories.push(i.resolve(n))},n.prototype.setMentionTranslationProvider=function(n){this._mentionTranslationProvider||(this._mentionTranslationProvider=n)},n.prototype.getMentionsRenderer=function(){return this._mentionsRenderer},n.prototype.parseCodeBlocksFromText=function(n){for(var u=[],i=new RegExp(h.CODE_BLOCK_REGEX,"ig"),e=new RegExp(h.EMPTY_LINES_IN_BLOCK_REGEX,"ig"),t,r,f;t=i.exec(n);)r=!0,n[t.index]==="`"&&n[t.index+1]!=="`"&&(f=n.substring(t.index,i.lastIndex),r=!e.exec(f)),r&&u.push({start:t.index,end:i.lastIndex});return u},n.prototype.parseContainersFromText=function(n){for(var t=[],i=new RegExp(h.CONTAINER_REGEX,"ig"),r;r=i.exec(n);)t.push({start:r.index,end:i.lastIndex});return t},n.prototype.parseInput=function(n){this._parsers||(this._parsers=i.allSettled(this._parserFactories).then(function(n){return n.map(function(n){return n.state=="fulfilled"?n.value():null}).filter(function(n){return n!=null})}));var t=this.parseCodeBlocksFromText(n),r=this.parseContainersFromText(n),u=t.concat(r);return this._parsers.then(function(t){var i=[{Text:n,Type:s.Text,StartIndex:0}],r,f;for(r in t)f=t[r],i=$.map(i,function(n){var t=n;return t.Type===s.Mention?n:f.parseMentions(t.Text,t.StartIndex,u)});return i})},n.prototype.renderParts=function(n,t,i){for(var u,e=this,o=$.Deferred(),r=$(),h=0,f=[],c=0;c<t.length;c++)r=r.add("<span>");return u=function(){h++;h===t.length&&(i.parts=f.join(","),o.resolve(r))},t.forEach(function(n,t){if(n.Type===s.Mention){var i=n;f.push(e._mentionsRenderer.getTelemetryMentionSummary(i));e._mentionsRenderer.renderMention($(r[t]),i).then(function(){u(t)},function(){u(t)})}else f.push("text"),$(r[t]).text(n.Text),u(t)}),r.appendTo(n),o.promise()},n.prototype.translateDisplayNamesToStorageKeysOfPersonMentions=function(n){return n&&this._mentionTranslationProvider?this._mentionTranslationProvider.translateDisplayNamesToStorageKeys(n):n},n.prototype.translateStorageKeysToDisplayNamesOfPersonMentions=function(n){var t=this,r=function(){return t._mentionTranslationProvider&&n?t._mentionTranslationProvider.translateStorageKeysToDisplayNames(n):i.resolve(n)};return this._mentionTranslationProvider?r():this._MentionTranslatorFactory.then(function(n){return t._mentionTranslationProvider||(t._mentionTranslationProvider=n()),r()})},n}();t.MentionProcessor=l;a=function(){function n(){}return n.prototype.parseFromText=function(){throw new Error("Not implemented");},n.prototype.getArtifactType=function(){throw new Error("Not implemented");},n.prototype.parseFromUrl=function(){throw new Error("Not implemented");},n.prototype.isInsideIgnoreBlock=function(n,t,i){var r=!1;return n&&n.forEach(function(n){n.start<t&&n.start<i&&n.end>t&&n.end>i&&(r=!0)}),r},n.prototype.parseMentions=function(n,t,i){var f=[],o,u,e,r;if(n){for(o=this.parseFromText(n),u=0,e=0;e<o.length;e++)r=o[e],r.index.start>u&&f.push({Type:s.Text,Text:n.substring(u,r.index.start),StartIndex:t+u}),this.isInsideIgnoreBlock(i,t+r.index.start,t+r.index.end)?f.push({Type:s.Text,Text:n.substring(r.index.start,r.index.end),StartIndex:t+r.index.start}):f.push({Type:s.Mention,Text:n.substring(r.index.start,r.index.end),ArtifactType:this.getArtifactType(),ArtifactId:r.id,StartIndex:t+r.index.start}),u=r.index.end;n.length>u&&f.push({Type:s.Text,Text:n.substring(u,n.length),StartIndex:t+u})}return f},n}();t.ArtifactMentionParser=a;c=function(){function n(){this._rendererFactories=[];this._vcRendererPromise=e.FeatureAvailabilityService.isFeatureEnabled(o.FeatureAvailabilityFlags.WebAccessVersionControlPullRequestsMentions,!1)?i.Promise(function(n){r.using(["VersionControl/Scripts/Mentions/PullRequestMentionRenderer"],function(t){n(t.createRenderer())},function(t){u.logError(t);n(null)})}):i.resolve(null)}return n.getDefault=function(){return n._defaultInstance||(n._defaultInstance=new n),n._defaultInstance},n.prototype.registerProvider=function(n){var i,u,t,r,f;if(this._renderers){for(i=n(),u=i.getArtifactType(),t=0,r=this._renderers;t<r.length;t++)if(f=r[t],f.getArtifactType()===u)throw new Error("Cannot register additional providers of same artifact type after initialization.");this._renderers.push(i)}else this._rendererFactories.push(n)},n.prototype.getRenderer=function(n){var t=this;return this._vcRendererPromise.then(function(i){return t._renderers||(t._renderers=$.map(t._rendererFactories,function(n){return n()}),i&&t._renderers.push(i)),f.first(t._renderers,function(t){return n.ArtifactType===t.getArtifactType()})})},n.prototype.renderMention=function(n,t){return this.getRenderer(t).then(function(i){if(i)return i.renderMention(t,function(t){var i=$(t);return i.appendTo(n),i});throw new Error("No rendering provider found for artifact type");})},n.prototype.getTelemetryMentionSummary=function(n){return this.getRenderer(n).then(function(t){return t?t.getTelemetryMentionSummary(n):null})},n}();t.MentionsRenderer=c;v=function(){function n(n,t,i){this._artifactsLoader=n;this._queueWaitMSec=t;this._maxBatchSize=i;this._cache={};this._queue=[];this._keyPoppedFromQueue={}}return n.prototype.getArtifactPromise=function(n){var t,r;return typeof this._cache[n]!="undefined"?t=this._cache[n]:(r=i.defer(),t=r.promise,this._cache[n]=t,this._queue.push({key:n,deferred:r}),this._keyPoppedFromQueue[n]=!1,this._delayProcessQueue(n)),t},n.prototype._delayProcessQueue=function(n){var t=this;setTimeout(function(){return t._processQueue(n)},this._queueWaitMSec)},n.prototype._processQueue=function(n){var t,i,r;if(!this._keyPoppedFromQueue[n])while(this._queue.length>0){for(i=this._maxBatchSize,this._queue.length<=i?(t=this._queue,this._queue=[]):(t=this._queue.slice(0,i),this._queue=this._queue.slice(i)),r=0;r<t.length;r++)this._keyPoppedFromQueue[t[r].key]=!0;this._processBatch(t)}},n.prototype._processBatch=function(n){var i=n.map(function(n){return n.key}),t=this._artifactsLoader(i);n.forEach(function(n){if(t.hasOwnProperty(n.key)){var i=t[n.key];i.then(function(t){n.deferred.resolve(t)},function(){n.deferred.reject.apply(n.deferred,arguments)})}else n.deferred.reject(new Error("Artifact was missing from results of batch load."))})},n}();t.ArtifactsCache=v});

define("Presentation/Scripts/TFS/TFS.Host.TfsContext",["require","exports","VSS/VSS","VSS/Context","VSS/Diag","VSS/Common/Contracts/Platform","VSS/Contributions/LocalPageData"],function(n,t,i,r,u,f,e){function l(){h=Date.now()}var h,s,a,o,c;Object.defineProperty(t,"__esModule",{value:!0});t.TfsContext=t.TeamFoundationHostType=t.NavigationContextLevels=t.Configuration=t.setImageTimestamp=void 0;t.setImageTimestamp=l;s=function(){function n(n){this._options=n||{}}return n.prototype.getRootPath=function(){return this._options.rootPath||"/"},n.prototype.getTheme=function(){return this._options.theme||"Default"},n.prototype.getResourcesPath=function(){return this._options.resourcesPath||this.getRootPath()+"_content/"},n.prototype.getResourcesFile=function(n){return this.getResourcesPath()+encodeURIComponent(n)},n.prototype.getTfsStaticRootPath=function(){return this._options.staticRootTfs||"/tfs/_static/tfs/12/"},n.prototype.get3rdPartyStaticRootPath=function(){return this._options.staticRoot3rdParty||"/tfs/_static/3rdParty/"},n.prototype.getThemedFile=function(n){return this.getTfsStaticRootPath()+"App_Themes/"+encodeURIComponent(this.getTheme())+"/"+encodeURIComponent(n)},n.prototype.getWebApiVersion=function(){return this._options.webApiVersion||"1"},n.prototype.getMailSettings=function(){return this._options.mailSettings},n}();t.Configuration=s,function(n){n[n.None=0]="None";n[n.Deployment=1]="Deployment";n[n.Application=2]="Application";n[n.Collection=4]="Collection";n[n.Project=8]="Project";n[n.Team=16]="Team";n[n.ApplicationAll=15]="ApplicationAll";n[n.All=31]="All"}(a=t.NavigationContextLevels||(t.NavigationContextLevels={})),function(n){n[n.Parent=-1]="Parent";n[n.Unknown=0]="Unknown";n[n.Deployment=1]="Deployment";n[n.Application=2]="Application";n[n.ProjectCollection=4]="ProjectCollection"}(o=t.TeamFoundationHostType||(t.TeamFoundationHostType={}));c=function(){function n(t){n._addedFpsCallback||(n._addedFpsCallback=!0,document.body.addEventListener("legacyFpsComplete",function(){n._defaultTfsContext=undefined}));this.initialize(t)}return n.getContextOrDefault=function(t){var i=r.parseWebContext(t);return i?new n(i):n.getDefault()},n.getDefault=function(){if(!n._defaultTfsContext){var t=r.getDefaultWebContext();if(!t)throw new Error("Default context information is missing.");n.setDefaultContext(t)}return n._defaultTfsContext},n.tryGetDefaultContext=function(){if(typeof n._defaultTfsContext=="undefined"){var t=r.getDefaultWebContext();t?n.setDefaultContext(t):n._defaultTfsContext=null}return n._defaultTfsContext},n.setDefaultContext=function(t){n._previousTfsContext?(n._previousTfsContext.initialize(t),n._defaultTfsContext=n._previousTfsContext):(n._defaultTfsContext=new n(t),n._previousTfsContext=n._defaultTfsContext)},n.prototype.initialize=function(t){this.contextData=t;var i=r.getPageContext();this.navigation={applicationServiceHost:n.createServiceHost(t.account,f.ContextHostType.Application,t,i.webAccessConfiguration.paths.rootPath),area:i.navigation.area,areaPrefix:i.webAccessConfiguration.api.areaPrefix,collection:n.createServiceHost(t.collection,f.ContextHostType.ProjectCollection,t,i.webAccessConfiguration.paths.rootPath),controllerPrefix:i.webAccessConfiguration.api.controllerPrefix,currentAction:i.navigation.currentAction,currentController:i.navigation.currentController,currentParameters:i.navigation.currentParameters,project:null,projectId:null,publicAccessPoint:{authority:t.host.authority,scheme:t.host.scheme,uri:t.account?t.account.uri:t.host.uri},serviceHost:n.createServiceHost(t.host,t.host.hostType,t,i.webAccessConfiguration.paths.rootPath),topMostLevel:i.navigation.topMostLevel,team:null,teamId:null};this.navigation.publicAccessPoint.uri[this.navigation.publicAccessPoint.uri.length-1]!=="/"&&(this.navigation.publicAccessPoint.uri+="/");t.project&&(this.navigation.project=t.project.name,this.navigation.projectId=t.project.id);t.team&&i.navigation.topMostLevel===f.NavigationContextLevels.Team&&(this.navigation.team=t.team.name,this.navigation.teamId=t.team.id);this.configuration=new s({mailSettings:i.webAccessConfiguration.mailSettings,resourcesPath:i.webAccessConfiguration.paths.resourcesPath,rootPath:i.webAccessConfiguration.paths.rootPath,staticRoot3rdParty:i.webAccessConfiguration.paths.staticRoot3rdParty,staticRootTfs:i.webAccessConfiguration.paths.staticRootTfs,theme:i.globalization.theme,webApiVersion:i.webAccessConfiguration.api.webApiVersion});this.isHosted=!!i.webAccessConfiguration.isHosted;this.allowStatsCollection=!!i.diagnostics.allowStatsCollection;this.activityId=i.diagnostics.activityId;this.sessionId=i.diagnostics.sessionId;this.isAADAccount=!!t.host.isAADAccount;this.isSameHost=window.self==window.top;t.user&&(this.currentUser=t.user.name,this.standardAccessMode=!t.user.limitedAccess,this.currentIdentity={displayName:t.user.name,email:t.user.email,id:t.user.id,isActive:!0,isContainer:!1,uniqueName:t.user.uniqueName});t.team&&(this.currentTeam={name:t.team.name,identity:{displayName:t.team.name,id:t.team.id,isActive:!0,isContainer:!0,email:null,uniqueName:null}})},n.createServiceHost=function(n,t,i,r){return n?{hostType:t,name:n.name,instanceId:n.id,uri:n.uri,relVDir:this.trimVirtualPath(n.relativeUri,r),vDir:n.relativeUri}:null},n.trimVirtualPath=function(n,t){if(!n||n.length===0)return n;for(n.toLowerCase().indexOf(t.toLowerCase())===0&&(n=n.substr(t.length));n.length>0&&n[0]==="/";)n=n.substr(1);while(n.length>0&&n[n.length-1]==="/")n=n.substr(0,n.length-1);return n},n.prototype.getSessionId=function(){var t,r,i,u,n;for(t=this.sessionId,r=document.cookie?document.cookie.split("; "):[],i=0,u=r.length;i<u;i++)if(n=r[i].split("="),n&&n.length===2&&n[0]==="Tfs-SessionId"){t=n[1];break}return this.sessionId=t,t},n.prototype.getHostUrl=function(){return this.navigation.publicAccessPoint.scheme+"://"+this.navigation.publicAccessPoint.authority},n.prototype.getServiceHostUrl=function(){return this.navigation.serviceHost.vDir},n.prototype.getPublicActionUrl=function(n,t,i){var r=this._constructActionUrl(n,t,i);return this.getHostUrl()+this.configuration.getRootPath()+r},n.prototype.getActionUrl=function(n,t,i){if(!this.isSameHost)return this.getPublicActionUrl(n,t,i);var r=this._constructActionUrl(n,t,i);return this.configuration.getRootPath()+r},n.prototype.getCollectionActionUrl=function(n,t,i,r){var u=this._getCollectionTfsContext(n);return u.getActionUrl(t,i,r)},n.prototype.getCollectionTfsContext=function(n){var t=$.extend(!0,{},this);return t.navigation.serviceHost=n,t.navigation.collection=n,t.contextData=$.extend(!0,{},t.contextData),t.contextData.host.id=n.instanceId,t.contextData.host.name=n.name,t.contextData.host.uri=n.uri,t.contextData.host.relativeUri=n.vDir,t.contextData.host.hostType=f.ContextHostType.ProjectCollection,t.contextData.collection=t.contextData.host,t},n.prototype._getCollectionTfsContext=function(n){if(this.navigation.serviceHost.hostType===o.ProjectCollection&&this.navigation.serviceHost.name.toLowerCase()===n.toLowerCase())return this;var t={instanceId:"",name:n,hostType:o.ProjectCollection,vDir:"",relVDir:n};return this.getCollectionTfsContext(t)},n.prototype.getPermalinkUrl=function(n,t,i){var r=this._constructPermalinkUrl(n,t,i);return this.configuration.getRootPath()+r},n.prototype.getIdentityImageUrl=function(t,i){var r=e.getSharedData("_identityDetails"),u={area:n._API,project:"",id:t,t:r&&r[t]?r[t].identityImageId:h};return this.getActionUrl("IdentityImage","common",$.extend(u,i))},n.prototype.isEmbedded=function(){return!!this.getClientHost()},n.prototype.getClientHost=function(){return r.getPageContext().webAccessConfiguration.clientHost},n.prototype._constructActionUrl=function(t,r,u){var h=this.navigation,e=[],c,a,v,f,l,w,b,d,s,k,y,p;if(b=h.areaPrefix||"",d=h.controllerPrefix||"",f=$.extend({},u),s=f.area,typeof s=="undefined"&&(s=h.area),delete f.area,c=f.serviceHost,typeof c=="undefined"&&(c=h.serviceHost),c&&(c.relVDir&&e.push(encodeURI(c.relVDir)),c.hostType===o.ProjectCollection&&(k=this._shouldBuildApiUrl(s,f),a=f.project,typeof a=="undefined"&&(a=k?h.projectId:h.project),a&&(e.push(encodeURIComponent(a)),v=f.team,(typeof f.includeTeam=="undefined"||f.includeTeam===null)&&(f.includeTeam=!0),f.includeTeam&&(typeof v=="undefined"&&(v=k?h.teamId:h.team),v&&e.push(encodeURIComponent(v)))))),delete f.serviceHost,delete f.project,delete f.team,delete f.includeTeam,s)if(Array.isArray(s))for(y=s,y.length>0&&e.push(encodeURIComponent(b+y[0])),p=1;p<y.length;p++)e.push(encodeURIComponent(y[p]));else e.push(encodeURIComponent(b+s));return r||(r=f.controller),delete f.controller,t||(t=f.action),delete f.action,l=f.parameters,delete f.parameters,l&&(r||(r=n._DEFAULT_CONTROLLER_NAME),t||(t=n._DEFAULT_ACTION_NAME)),r&&(e.push(encodeURIComponent(d+r)),t&&(e.push(encodeURIComponent(t)),l&&(Array.isArray(l)?e.push.apply(e,$.map(l,encodeURIComponent)):e.push(encodeURIComponent(l))))),(f.includeVersion||s===n._API)&&(f[n._VERSION]=this.configuration.getWebApiVersion()),f.includeLanguage&&i.uiCulture&&(f[n._LANGUAGE]=i.uiCulture),delete f.includeVersion,f.area!==n._API&&this.getClientHost()&&(f[n._CLIENTHOST]=this.getClientHost()),w=$.param(f),e.join("/")+(w?"?"+w:"")},n.prototype._constructPermalinkUrl=function(t,i,r){var s=this.navigation,u=[],f=$.extend({},r),o,h=s.controllerPrefix||"",c=i||f.controller||n._DEFAULT_CONTROLLER_NAME,l=t||f.action||n._DEFAULT_ACTION_NAME,e=f.parameters;return u.push(n._PERMALINK_PREFIX),u.push(encodeURIComponent(h+c)),u.push(encodeURIComponent(l)),delete f.controller,delete f.action,delete f.parameters,e&&(Array.isArray(e)?u.push.apply(u,$.map(e,encodeURIComponent)):u.push(encodeURIComponent(e))),o=$.param(f),u.join("/")+(o?"?"+o:"")},n.prototype._shouldBuildApiUrl=function(t,i){var r;return t&&(r=Array.isArray(t)?t[0]:t),i.useApiUrl||r===n._API&&(typeof i.useApiUrl=="undefined"||i.useApiUrl)},n._DEFAULT_CONTROLLER_NAME="home",n._DEFAULT_ACTION_NAME="index",n._CLIENTHOST="clientHost",n._VERSION="__v",n._LANGUAGE="__loc",n._PERMALINK_PREFIX="_permalink",n._API="api",n.ControlExtensions={initializeEnhancementOptions:function(t,i){return $.extend({},i,{tfsContext:n.getContextOrDefault(t)})}},n}();t.TfsContext=c});

/*!
 * jQuery UI Autocomplete 1.13.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
!function(e){"use strict";"function"==typeof define&&define.amd?define("jQueryUI/autocomplete",["jquery","./menu","./keycode","./position","./safe-active-element","./version","./widget"],e):e(jQuery)}(function(e){"use strict";return e.widget("ui.autocomplete",{version:"1.13.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,liveRegionTimer:null,_create:function(){var t,i,s,n=this.element[0].nodeName.toLowerCase(),o="textarea"===n,u="input"===n;this.isMultiLine=o||!u&&this._isContentEditable(this.element),this.valueMethod=this.element[o||u?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return t=!0,s=!0,void(i=!0);t=!1,s=!1,i=!1;var o=e.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:t=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:t=!0,this._move("nextPage",n);break;case o.UP:t=!0,this._keyEvent("previous",n);break;case o.DOWN:t=!0,this._keyEvent("next",n);break;case o.ENTER:this.menu.active&&(t=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(t)return t=!1,void(this.isMultiLine&&!this.menu.element.is(":visible")||s.preventDefault());if(!i){var n=e.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(e){if(s)return s=!1,void e.preventDefault();this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().attr({unselectable:"on"}).menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault()},menufocus:function(t,i){var s,n;if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),void this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)});n=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",t,{item:n})&&t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(n.value),(s=i.item.attr("aria-label")||n.value)&&String.prototype.trim.call(s).length&&(clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(e("<div>").text(s))},100))},menuselect:function(t,i){var s=i.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==e.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=s})),!1!==this._trigger("select",t,{item:s})&&this._value(s.value),this.term=this._value(),this.close(t),this.selectedItem=s}}),this.liveRegion=e("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this._appendTo()),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var i=this.menu.element[0];return t.target===this.element[0]||t.target===i||e.contains(i,t.target)},_closeOnClickOutside:function(e){this._isEventTargetInWidget(e)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_initSource:function(){var t,i,s=this;Array.isArray(this.options.source)?(t=this.options.source,this.source=function(i,s){s(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,n){s.xhr&&s.xhr.abort(),s.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){n(e)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),i=this.menu.element.is(":visible"),s=e.altKey||e.ctrlKey||e.metaKey||e.shiftKey;t&&(!t||i||s)||(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):!1!==this._trigger("search",t)?this._search(e):void 0},_search:function(e){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=++this.requestIndex;return function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")}.bind(this)},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var i=this.menu.element.empty();this._renderMenu(i,t),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var s=this;e.each(i,function(e,i){s._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<div>").text(i.label)).appendTo(t)},_move:function(e,t){if(this.menu.element.is(":visible"))return this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[e](t);this.search(null,t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){this.isMultiLine&&!this.menu.element.is(":visible")||(this._move(e,t),t.preventDefault())},_isContentEditable:function(e){if(!e.length)return!1;var t=e.prop("contentEditable");return"inherit"===t?this._isContentEditable(e.parent()):"true"===t}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var s=new RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return s.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(e("<div>").text(i))},100))}}),e.ui.autocomplete});

// Copyright (C) Microsoft Corporation. All rights reserved.
define("Mention/Scripts/TFS.Mention.Helpers",["require","exports","VSS/Utils/Core","Presentation/Scripts/TFS/TFS.Host.TfsContext","VSS/Utils/String","jQueryUI/autocomplete"],function(n,t,i,r,u){function c(n,t,i){var e,c,o,l,s,r,u,h;for(t.sort(function(n,t){return t.length-n.length}),n=n.toUpperCase(),t=t.map(function(n){return n.toUpperCase()}),e=[],c=[],o=0,l=t;o<l.length;o++)for(s=l[o],r=0;;){if(r=n.indexOf(s,r),r<0||i===f.Prefix&&r>0)break;if(u={start:r,end:r+s.length},r+=s.length,e[u.start]||e[u.end])break;for(h=u.start;h<u.end;h++)e[h]=!0;c.push(u)}return c}function l(n){for(var h,f,t,e,c,i=[],o=0,r=0,s=n;r<s.length;r++)if(h=s[r],f=u.htmlEncode(h),f.length===1)i[o++]=!0;else for(t=0,e=f;t<e.length;t++)c=e[t],i[o++]=!1;return i}function a(n,t){return n.filter(function(n){var i=n.start,r=n.end;return t[i]||t[r]})}function v(n,t,i){function c(t){var u=t.start,f=t.end,r=n.substr(u,f-u);return o[r]||(o[r]=i.replace("$&",r)),o[r]}var o={},r,u,e,s,f,h;for(t.sort(function(n,t){return t.end-n.end}),r="",u=n.length,e=0,s=t;e<s.length;e++)f=s[e],h=c(f),r=h+n.substr(f.end,u-f.end)+r,u=f.start;return u>0&&(r=n.substr(0,u)+r),r}function y(n,t,i,r,f){var o=f?u.htmlEncode(n):n,e=c(o,t,i),s;return f&&(s=l(n),e=a(e,s)),v(o,e,r)}function p(n,t,i){var r,o,u,s,e,h;for(n=n.toUpperCase(),r={},o=!1,u=0,s=t;u<s.length;u++)e=s[u],h=n.indexOf(e.toUpperCase()),i===f.Contains&&h>=0||i===f.Prefix&&h===0?(r[e]=!0,o=!0):r[e]=!1;return{found:r,atLeastOneMatch:o}}function w(n,t,i,r,f){if(typeof n=="undefined"||n===null||t===null||!t.length)return{found:{},highlightedSource:n};t=t.slice(0,o);var s=p(n,t,i),h=s.found,c=s.atLeastOneMatch,e=n;return c&&r?e=y(n,t,i,r,f):f&&(e=u.htmlEncode(n)),{found:h,highlightedSource:e}}function s(){return window.parent!==window}function h(){try{if(s()&&window.parent.TfsMentionHelpers)return window.parent.TfsMentionHelpers.getDefaultTfsContext()}catch(n){}return e.getDefaultTfsContext()}function b(){var n;try{n=h()}catch(t){n=null}return!!n}function k(n,t){return i.delegate(n,t)}function d(n,t,r){var u,f=i.throttledDelegate(n,t,function(){var t=u;u=null;r.apply(n,t)});return function(){return u=arguments,f()}}function g(){return window.location}function nt(n){return $("<div/>").html(n).text()}function tt(n){if(!n)return null;var t=n.ownerDocument;return t?t.defaultView||t.parentWindow:null}function it(n){return n.charCode?!0:!1}var o,f,e;Object.defineProperty(t,"__esModule",{value:!0});t.eventHasPrintableCharacter=t.TfsMentionHelpers=t.getWindow=t.convertHtmlToText=t.getWindowLocation=t.throttledDelegate=t.delegate=t.environmentIsSupported=t.getMainTfsContext=t.hasParentWindow=t.searchString=t.SearchBehavior=void 0;o=10,function(n){n[n.Contains=0]="Contains";n[n.Prefix=1]="Prefix"}(f=t.SearchBehavior||(t.SearchBehavior={}));t.searchString=w;t.hasParentWindow=s;t.getMainTfsContext=h;t.environmentIsSupported=b;t.delegate=k;t.throttledDelegate=d;t.getWindowLocation=g;t.convertHtmlToText=nt;t.getWindow=tt,function(n){function t(){return r.TfsContext.getDefault()}n.getDefaultTfsContext=t}(e=t.TfsMentionHelpers||(t.TfsMentionHelpers={}));t.eventHasPrintableCharacter=it;window.TfsMentionHelpers=e});

define("Mention/Scripts/Resources/TFS.Resources.Mention",["require","exports"],function(require,exports){var e=exports;e.PullRequestText="Pull Request {0}";e.MentionPR="Mention a pull request";e.AutocompleteSearchButtonText="Search";e.WorkItemMentionOptionSelected="{0}. Selected";e.AutocompleteServerError="Error loading suggestions";e.DiscussionMentionWorkItemTip="workitems (#)";e.AutocompleteSuggestionsPlural="Showing {0} suggestions";e.AutocompleteSuggestionsSingular="Showing 1 suggestion";e.AutocompleteTermsOverLimit="Search only supports up to {0} keywords. Refine your criteria.";e.MentionMaterializeErrorDialogTitle="Error";e.AutocompleteNoSuggestions="No suggestions found";e.MentionWorkItem="Mention a work item";e.DiscussionShowMoreRetrievalError="Unable to show more comments";e.GitPullRequestMentionWorkItemDiscussionMessageFormat="Mentioned in {0}";e.AutocompleteLoading="Loading suggestions";e.DiscussionStateTextFormat="({0} of {1})";e.WorkItemStateLabel="State of the work item is {0}";e.DiscussionMentionPersonTip="people (@)";e.DiscussionUserCommentedTextFormat="commented {0}";e.AtMention="Mention";e.MentionSomeone="Mention someone";e.DiscussionShowMoreLinkText="Show more";e.MentionMaterializeIdentityFailError="The identity \u003cspan class=\u0027{0}\u0027\u003e@{1}\u003c/span\u003e could not be added to VSTS and will not receive the e-mail notification.\u003cbr\u003ePlease remove the user and retry the mention.";});

// Copyright (C) Microsoft Corporation. All rights reserved.
define("Mention/Scripts/TFS.Mention.Autocomplete.JQueryAutocomplete",["require","exports","VSS/Utils/Accessibility","VSS/Diag","VSS/Utils/UI","VSS/Utils/String","Mention/Scripts/TFS.Mention.Helpers","Mention/Scripts/Resources/TFS.Resources.Mention","VSS/Utils/Core","jQueryUI/autocomplete"],function(n,t,i,r,u,f,e,o,s){var l,c,h,a;Object.defineProperty(t,"__esModule",{value:!0});t.JQueryAutocompletePlugin=t.CssClasses=void 0,function(n){function t(n,i){var r=null,u;return n&&(u=/^key(down|up|press)$/i.test(n.type),u?r=n:n.originalEvent&&i&&i>0&&(r=t(n.originalEvent,i-1))),r}function i(n){return n.textBeforeSelection+n.textInSelection+n.textAfterSelection}n.tryGetKeyboardEvent=t;n.getStringFromInputText=i}(l||(l={})),function(n){n.AUTOCOMPLETE_CONTAINER="mention-autocomplete-container";n.AUTOCOMPLETE_FOOTER="mention-autocomplete-footer";n.AUTOCOMPLETE_FOOTER_CONTENTS="mention-autocomplete-footer-contents";n.HIGHLIGHT="mention-autocomplete-highlight";n.AUTOCOMPLETE_NO_ITEMS_FOUND="mention-autocomplete-no-items";n.AUTOCOMPLETE_FOOTER_LOADING="mention-autocomplete-loading"}(c=t.CssClasses||(t.CssClasses={})),function(n){n[n.Suggestion=0]="Suggestion";n[n.Error=1]="Error";n[n.Empty=2]="Empty";n[n.Loading=3]="Loading"}(h||(h={}));a=function(){function n(n){this._isOpen=!1;this._options=n}return n.prototype.initialize=function(){var t=this,n;this._$inputElement=$("<input>").autocomplete({appendTo:this._getMenuContainer(),autoFocus:!0,source:e.delegate(this,this._autocompleteOnSource),select:e.delegate(this,this._autocompleteOnSelect),focus:e.delegate(this,this._autocompleteOnFocus),open:e.delegate(this,this._autocompleteOnOpen),close:e.delegate(this,this._autocompleteOnClose),messages:{noResults:"",results:function(){return""}}});this._$inputElement.on("keydown keypress",function(n){e.eventHasPrintableCharacter(n)||(n.keyCode===u.KeyCode.UP||n.keyCode===u.KeyCode.DOWN||n.keyCode===u.KeyCode.PAGE_UP||n.keyCode===u.KeyCode.PAGE_DOWN)&&t._handleAutocompleteReset(n)});this._$menuContainer.on("mousewheel",function(n){n.stopPropagation()});n=this._getAutocompleteInstance();n._resizeMenu=e.delegate(this,this._autocompleteResizeMenu);n._renderMenu=e.delegate(this,this._autocompleteRenderMenu);n._renderItem=e.delegate(this,this._autocompleteRenderItem)},n.prototype.__test=function(){return{_$footer:this._$footer}},n.prototype.prefetch=function(){},n.prototype.getPluginName=function(){throw new Error("Not implemented");},n.prototype.canOpen=function(){throw new Error("Not implemented");},n.prototype.getSuggestions=function(){throw new Error("Not Implemented");},n.prototype.renderSuggestion=function(){throw new Error("Not Implemented");},n.prototype.getReplacementText=function(){throw new Error("Not Implemented");},n.prototype.getReplacementHtml=function(){throw new Error("Not Implemented");},n.prototype.afterRender=function(){},n.prototype.onClose=function(){},n.prototype.dispose=function(){this._$inputElement&&(this._$inputElement.autocomplete("destroy"),this._$inputElement.remove(),this._$inputElement=null);this._$menuContainer&&(this._$menuContainer.remove(),this._$menuContainer=null);this._options=null},n.prototype.getOptions=function(){return this._options},n.prototype.open=function(n,t){this._inputText=t;this._isOpen=!0},n.prototype.suggest=function(n,t){var i=$.Deferred();return this._inputText=t,this._$inputElement.val(l.getStringFromInputText(t)),this._$inputElement.autocomplete("search",i,n),i},n.prototype.close=function(n,t){this._inputText=t;this._$inputElement.autocomplete("close",n);this._isOpen=!1},n.prototype.handle=function(n){this._$inputElement.trigger(n)},n.prototype.isOpen=function(){return this._isOpen},n.prototype._getMenuContainer=function(){if(!this._$menuContainer){var n=this._options.menuContainer().length?this._options.menuContainer():$(document.body);this._$menuContainer=$("<div/>").addClass(c.AUTOCOMPLETE_CONTAINER).appendTo(n)}return this._$menuContainer},n.prototype._getMenuMaxHeight=function(){return this._options.menuMaxHeight||n.DEFAULT_MENU_MAX_HEIGHT},n.prototype._getAutocompleteInstance=function(){return this._$inputElement.data("ui-autocomplete")},n.prototype._applySuggestionToTextBox=function(n,t,i){var f=this,e={selectionIndex:"".concat(t.index)},r=this.getReplacementText(this._inputText,t.suggestion,i),u;this._$inputElement.val(l.getStringFromInputText(r));u={getPlainText:function(){return r},getHtml:function(){return f.getReplacementHtml(t.suggestion)}};i?this._options.focus&&this._options.focus(n,u):(this._inputText=r,this._options.select&&this._options.select(n,u,e))},n.prototype._handleAutocompleteReset=function(n){var r=l.getStringFromInputText(this._inputText),u=this._$inputElement.val(),t,i;u===r&&this._options.focus&&(t=this._inputText,i={getPlainText:function(){return t},getHtml:function(){return""}},this._options.focus(n,i))},n.prototype._getMentionTextArea=function(){return this._options.textElement?this._options.textElement():null},n.prototype._autocompleteResizeMenu=function(){var r=this,t=$(this._getAutocompleteInstance().menu.element),i=this._options.positioningElement?typeof this._options.positioningElement=="function"?this._options.positioningElement():this._options.positioningElement:this._getMenuContainer(),w=this._options.isMenuWidthOverridable&&this._options.menuWidth?this._options.menuWidth:i.innerWidth(),f,e,h;t.width(w);f=$(">:visible",t).first();e=Math.max(u.Positioning.getZIndex(i)*1+1,n.MIN_MENU_ZINDEX);t.css("z-index",e);var c=i.offset(),l=c.top-$(window).scrollTop(),b=$(window).height()-l-i.outerHeight(!1)-n.MENU_FOOTER_HEIGHT,o=l>this._getMenuMaxHeight()&&this._getMenuMaxHeight()>b,s=0;if(this._options.allowHorizontalShift){var k=c.left-$(window).scrollLeft(),a=$(window).width()-k,v=t.outerWidth();s=v<a?0:v-a}if(h=function(u){$(this).css(u);r._$footer.css("z-index",e);r._$footer.width(t.width());r._$footer.height(n.MENU_FOOTER_HEIGHT);r._$footer.show();f.length>0?r._$footer.position({my:"left top-1",at:"left bottom",collision:"none",of:t}):r._$footer.position({my:"left ".concat(o?"bottom":"top"),at:"left ".concat(o?"top":"bottom"),collision:"none",of:i})},o?this._$inputElement.autocomplete({position:{my:"left bottom",at:"left-".concat(s," top-").concat(n.MENU_FOOTER_HEIGHT),collision:"none",of:i,using:h}}):this._$inputElement.autocomplete({position:{my:"left top",at:"left-".concat(s," bottom"),collision:"none",of:i,using:h}}),f.length>0){var d=f.position().top,y=$(">:visible",t).last(),g=y.position().top+y.outerHeight(),p=g-d,nt=p<=this._getMenuMaxHeight()?p:this._getMenuMaxHeight();t.height(nt);this.afterRender(t);t.css("max-height","").css("overflow","")}else t.css("max-height",0).css("overflow","hidden")},n.prototype._renderFooter=function(n,t){return this._$footer||(this._$footer=$("<div/>").addClass(c.AUTOCOMPLETE_FOOTER),t&&this._$footer.addClass(t),this._$footer.appendTo(this._$menuContainer).hide()),this._$footer.attr("class",c.AUTOCOMPLETE_FOOTER),t&&this._$footer.addClass(t),i.announce(n,!0),this._$footer.text(n)},n.prototype._autocompleteRenderMenu=function(n,t){var i=this._getAutocompleteInstance();n.addClass("mention-autocomplete-menu").attr("role","listbox");t[0].type===h.Suggestion?(t.forEach(function(t){i._renderItemData(n,t)}),this._renderFooter(this._getFooterItemsCountString(t.length),c.AUTOCOMPLETE_FOOTER_CONTENTS)):(this._addFakeAnchor(n,t[0]),t[0].type===h.Loading?this._renderFooter(o.AutocompleteLoading,c.AUTOCOMPLETE_FOOTER_LOADING):t[0].type===h.Empty?this._renderFooter(o.AutocompleteNoSuggestions,c.AUTOCOMPLETE_NO_ITEMS_FOUND):t[0].type===h.Error&&this._renderFooter(o.AutocompleteServerError))},n.prototype._getFooterItemsCountString=function(n){if(n===0)return o.AutocompleteNoSuggestions;var t=n===1?o.AutocompleteSuggestionsSingular:o.AutocompleteSuggestionsPlural;return f.format(t,n)},n.prototype._addFakeAnchor=function(n,t){var i=$("<li/>").hide().appendTo(n).data("ui-autocomplete-item",t);$("<a>.<\/a>").appendTo(i)},n.prototype._autocompleteRenderItem=function(n,t){return this.renderSuggestion(n,t.suggestion).addClass("mention-autocomplete-item").attr("role","option").attr("aria-selected","false")},n.prototype._autocompleteOnSource=function(t,i){var r=t.term,u;if(r&&r.resolve||(r=null),!this._isOpen){this._getAutocompleteInstance().close();i(null);return}u=!1;this.getSuggestions(this._inputText).done(function(n){var f,t;u=!0;n?(f=n.result&&n.result.length?n.result.map(function(n,t){return{type:h.Suggestion,index:t,suggestion:n,error:null}}):[{type:h.Empty,index:null,suggestion:null,error:null}],r&&r.resolve(n),i(f)):(t=new Error("Suggestions is Null"),r&&r.reject(t),i([{type:h.Error,index:null,suggestion:null,error:t}]))}).fail(function(n){u=!0;r&&r.reject(n);i([{type:h.Error,index:null,suggestion:null,error:n}])});setTimeout(function(){u||i([{type:h.Loading,index:null,suggestion:null,error:null}])},n.LOADING_DELAY_TIME)},n.prototype._autocompleteOnFocus=function(n,t){var f=this,i,r,u;return t.item&&t.item.type===h.Suggestion&&(this._applySuggestionToTextBox(n,t.item,!0),t.item.value=this._$inputElement.val(),$(".ui-helper-hidden-accessible").hide().attr("aria-live","off")),i=this._$menuContainer.find("ul"),i&&i.length&&(r=this._getMentionTextArea(),u=i.find(".mention-autocomplete-item"),u.each(function(n,t){var i=$(t);i.children(".ui-menu-item-wrapper").hasClass("ui-state-active")?(i.attr("aria-selected","true"),r&&s.delay(f,0,function(){r.attr("aria-activedescendant",i.attr("id"))})):i.attr("aria-selected","false")})),!1},n.prototype._autocompleteOnSelect=function(n,t){return t.item.type===h.Suggestion&&this._applySuggestionToTextBox(n,t.item,!1),!1},n.prototype._autocompleteOnOpen=function(){var n=this._getMentionTextArea(),t=$(this._getAutocompleteInstance().menu.element),i;n&&t&&t.length&&(i=n.length&&n[0].tagName==="DIV",n.attr({"aria-owns":t[0].id,"aria-expanded":i?null:"true","aria-autocomplete":"list"}))},n.prototype._autocompleteOnClose=function(n){var r=$(this._getAutocompleteInstance().menu.element),i,t,f;if(r)this.onClose(r);this._$footer.hide();i=l.tryGetKeyboardEvent(n,5);i&&i.keyCode===u.KeyCode.ESCAPE&&this._handleAutocompleteReset(n);this._options.close&&this._options.close(n,this._inputText);t=this._getMentionTextArea();t&&(f=t.length&&t[0].tagName==="DIV",t.attr({"aria-owns":null,"aria-autocomplete":null,"aria-activedescendant":null,"aria-expanded":f?null:"false"}))},n.MENU_FOOTER_HEIGHT=20,n.DEFAULT_MENU_MAX_HEIGHT=200,n.LOADING_DELAY_TIME=100,n.MIN_MENU_ZINDEX=1000001,n}();t.JQueryAutocompletePlugin=a});

define("TFS/Core/Contracts",["require","exports"],function(n,t){"use strict";var i,r,u,f,e,o;Object.defineProperty(t,"__esModule",{value:!0});t.TypeInfo=t.SourceControlTypes=t.ProjectVisibility=t.ProjectChangeType=t.ProcessType=t.ProcessCustomizationType=t.ConnectedServiceKind=void 0,function(n){n[n.Custom=0]="Custom";n[n.AzureSubscription=1]="AzureSubscription";n[n.Chef=2]="Chef";n[n.Generic=3]="Generic"}(i=t.ConnectedServiceKind||(t.ConnectedServiceKind={})),function(n){n[n.Unknown=-1]="Unknown";n[n.Xml=0]="Xml";n[n.Inherited=1]="Inherited"}(r=t.ProcessCustomizationType||(t.ProcessCustomizationType={})),function(n){n[n.System=0]="System";n[n.Custom=1]="Custom";n[n.Inherited=2]="Inherited"}(u=t.ProcessType||(t.ProcessType={})),function(n){n[n.Modified=0]="Modified";n[n.Deleted=1]="Deleted";n[n.Added=2]="Added"}(f=t.ProjectChangeType||(t.ProjectChangeType={})),function(n){n[n.Unchanged=-1]="Unchanged";n[n.Private=0]="Private";n[n.Organization=1]="Organization";n[n.Public=2]="Public";n[n.SystemPrivate=3]="SystemPrivate"}(e=t.ProjectVisibility||(t.ProjectVisibility={})),function(n){n[n.Tfvc=1]="Tfvc";n[n.Git=2]="Git"}(o=t.SourceControlTypes||(t.SourceControlTypes={}));t.TypeInfo={ConnectedServiceKind:{enumValues:{custom:0,azureSubscription:1,chef:2,generic:3}},Process:{},ProcessCustomizationType:{enumValues:{unknown:-1,xml:0,inherited:1}},ProcessType:{enumValues:{system:0,custom:1,inherited:2}},ProjectChangeType:{enumValues:{modified:0,deleted:1,added:2}},ProjectInfo:{},ProjectMessage:{},ProjectVisibility:{enumValues:{unchanged:-1,"private":0,organization:1,"public":2,systemPrivate:3}},SourceControlTypes:{enumValues:{tfvc:1,git:2}},TeamProject:{},TeamProjectCollection:{},TeamProjectReference:{},TemporaryDataCreatedDTO:{},WebApiConnectedService:{},WebApiConnectedServiceDetails:{},WebApiProject:{}};t.TypeInfo.Process.fields={type:{enumType:t.TypeInfo.ProcessType}};t.TypeInfo.ProjectInfo.fields={lastUpdateTime:{isDate:!0},visibility:{enumType:t.TypeInfo.ProjectVisibility}};t.TypeInfo.ProjectMessage.fields={project:{typeInfo:t.TypeInfo.ProjectInfo},projectChangeType:{enumType:t.TypeInfo.ProjectChangeType}};t.TypeInfo.TeamProject.fields={lastUpdateTime:{isDate:!0},visibility:{enumType:t.TypeInfo.ProjectVisibility}};t.TypeInfo.TeamProjectCollection.fields={processCustomizationType:{enumType:t.TypeInfo.ProcessCustomizationType}};t.TypeInfo.TeamProjectReference.fields={lastUpdateTime:{isDate:!0},visibility:{enumType:t.TypeInfo.ProjectVisibility}};t.TypeInfo.TemporaryDataCreatedDTO.fields={expirationDate:{isDate:!0}};t.TypeInfo.WebApiConnectedService.fields={project:{typeInfo:t.TypeInfo.TeamProjectReference}};t.TypeInfo.WebApiConnectedServiceDetails.fields={connectedServiceMetaData:{typeInfo:t.TypeInfo.WebApiConnectedService}};t.TypeInfo.WebApiProject.fields={lastUpdateTime:{isDate:!0},visibility:{enumType:t.TypeInfo.ProjectVisibility}}});

define("TFS/VersionControl/TFS.Policy.Contracts",["require","exports"],function(n,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.TypeInfo=t.PolicyEvaluationStatus=void 0;var i;(function(n){n[n.Queued=0]="Queued";n[n.Running=1]="Running";n[n.Approved=2]="Approved";n[n.Rejected=3]="Rejected";n[n.NotApplicable=4]="NotApplicable";n[n.Broken=5]="Broken"})(i=t.PolicyEvaluationStatus||(t.PolicyEvaluationStatus={}));t.TypeInfo={PolicyConfiguration:{},PolicyEvaluationRecord:{},PolicyEvaluationStatus:{enumValues:{queued:0,running:1,approved:2,rejected:3,notApplicable:4,broken:5}}};t.TypeInfo.PolicyConfiguration.fields={createdDate:{isDate:!0}};t.TypeInfo.PolicyEvaluationRecord.fields={completedDate:{isDate:!0},configuration:{typeInfo:t.TypeInfo.PolicyConfiguration},startedDate:{isDate:!0},status:{enumType:t.TypeInfo.PolicyEvaluationStatus}}});

define("TFS/VersionControl/Contracts",["require","exports","TFS/Core/Contracts","TFS/VersionControl/TFS.Policy.Contracts"],function(n,t,i,r){"use strict";var u,f,e,o,s,h,c,l,a,v,y,p,w,b,k,d,g,nt,tt,it,rt,ut,ft,et,ot,st,ht,ct,lt,at,vt,yt,pt,wt,bt,kt,dt;Object.defineProperty(t,"__esModule",{value:!0});t.TypeInfo=t.VersionControlRecursionType=t.VersionControlChangeType=t.TfvcVersionType=t.TfvcVersionOption=t.SupportedIdeType=t.RefFavoriteType=t.PullRequestTimeRangeType=t.PullRequestStatus=t.PullRequestMergeFailureType=t.PullRequestAsyncStatus=t.LineDiffBlockChangeType=t.IterationReason=t.ItemContentType=t.GitVersionType=t.GitVersionOptions=t.GitStatusState=t.GitResolutionWhichAction=t.GitResolutionStatus=t.GitResolutionRename1to2Action=t.GitResolutionPathConflictAction=t.GitResolutionMergeType=t.GitResolutionError=t.GitRefUpdateStatus=t.GitRefUpdateMode=t.GitRefSearchType=t.GitPullRequestReviewFileType=t.GitPullRequestQueryType=t.GitPullRequestMergeStrategy=t.GitPathActions=t.GitObjectType=t.GitHistoryMode=t.GitConflictUpdateStatus=t.GitConflictType=t.GitAsyncRefOperationFailureStatus=t.GitAsyncOperationStatus=t.CommentType=t.CommentThreadStatus=void 0,function(n){n[n.Unknown=0]="Unknown";n[n.Active=1]="Active";n[n.Fixed=2]="Fixed";n[n.WontFix=3]="WontFix";n[n.Closed=4]="Closed";n[n.ByDesign=5]="ByDesign";n[n.Pending=6]="Pending"}(u=t.CommentThreadStatus||(t.CommentThreadStatus={})),function(n){n[n.Unknown=0]="Unknown";n[n.Text=1]="Text";n[n.CodeChange=2]="CodeChange";n[n.System=3]="System"}(f=t.CommentType||(t.CommentType={})),function(n){n[n.Queued=1]="Queued";n[n.InProgress=2]="InProgress";n[n.Completed=3]="Completed";n[n.Failed=4]="Failed";n[n.Abandoned=5]="Abandoned"}(e=t.GitAsyncOperationStatus||(t.GitAsyncOperationStatus={})),function(n){n[n.None=0]="None";n[n.InvalidRefName=1]="InvalidRefName";n[n.RefNameConflict=2]="RefNameConflict";n[n.CreateBranchPermissionRequired=3]="CreateBranchPermissionRequired";n[n.WritePermissionRequired=4]="WritePermissionRequired";n[n.TargetBranchDeleted=5]="TargetBranchDeleted";n[n.GitObjectTooLarge=6]="GitObjectTooLarge";n[n.OperationIndentityNotFound=7]="OperationIndentityNotFound";n[n.AsyncOperationNotFound=8]="AsyncOperationNotFound";n[n.Other=9]="Other";n[n.EmptyCommitterSignature=10]="EmptyCommitterSignature"}(o=t.GitAsyncRefOperationFailureStatus||(t.GitAsyncRefOperationFailureStatus={})),function(n){n[n.None=0]="None";n[n.AddAdd=1]="AddAdd";n[n.AddRename=2]="AddRename";n[n.DeleteEdit=3]="DeleteEdit";n[n.DeleteRename=4]="DeleteRename";n[n.DirectoryFile=5]="DirectoryFile";n[n.DirectoryChild=6]="DirectoryChild";n[n.EditDelete=7]="EditDelete";n[n.EditEdit=8]="EditEdit";n[n.FileDirectory=9]="FileDirectory";n[n.Rename1to2=10]="Rename1to2";n[n.Rename2to1=11]="Rename2to1";n[n.RenameAdd=12]="RenameAdd";n[n.RenameDelete=13]="RenameDelete";n[n.RenameRename=14]="RenameRename"}(s=t.GitConflictType||(t.GitConflictType={})),function(n){n[n.Succeeded=0]="Succeeded";n[n.BadRequest=1]="BadRequest";n[n.InvalidResolution=2]="InvalidResolution";n[n.UnsupportedConflictType=3]="UnsupportedConflictType";n[n.NotFound=4]="NotFound"}(h=t.GitConflictUpdateStatus||(t.GitConflictUpdateStatus={})),function(n){n[n.SimplifiedHistory=0]="SimplifiedHistory";n[n.FirstParent=1]="FirstParent";n[n.FullHistory=2]="FullHistory";n[n.FullHistorySimplifyMerges=3]="FullHistorySimplifyMerges"}(c=t.GitHistoryMode||(t.GitHistoryMode={})),function(n){n[n.Bad=0]="Bad";n[n.Commit=1]="Commit";n[n.Tree=2]="Tree";n[n.Blob=3]="Blob";n[n.Tag=4]="Tag";n[n.Ext2=5]="Ext2";n[n.OfsDelta=6]="OfsDelta";n[n.RefDelta=7]="RefDelta"}(l=t.GitObjectType||(t.GitObjectType={})),function(n){n[n.None=0]="None";n[n.Edit=1]="Edit";n[n.Delete=2]="Delete";n[n.Add=3]="Add";n[n.Rename=4]="Rename"}(a=t.GitPathActions||(t.GitPathActions={})),function(n){n[n.NoFastForward=1]="NoFastForward";n[n.Squash=2]="Squash";n[n.Rebase=3]="Rebase";n[n.RebaseMerge=4]="RebaseMerge"}(v=t.GitPullRequestMergeStrategy||(t.GitPullRequestMergeStrategy={})),function(n){n[n.NotSet=0]="NotSet";n[n.LastMergeCommit=1]="LastMergeCommit";n[n.Commit=2]="Commit"}(y=t.GitPullRequestQueryType||(t.GitPullRequestQueryType={})),function(n){n[n.ChangeEntry=0]="ChangeEntry";n[n.Attachment=1]="Attachment"}(p=t.GitPullRequestReviewFileType||(t.GitPullRequestReviewFileType={})),function(n){n[n.Exact=0]="Exact";n[n.StartsWith=1]="StartsWith";n[n.Contains=2]="Contains"}(w=t.GitRefSearchType||(t.GitRefSearchType={})),function(n){n[n.BestEffort=0]="BestEffort";n[n.AllOrNone=1]="AllOrNone"}(b=t.GitRefUpdateMode||(t.GitRefUpdateMode={})),function(n){n[n.Succeeded=0]="Succeeded";n[n.ForcePushRequired=1]="ForcePushRequired";n[n.StaleOldObjectId=2]="StaleOldObjectId";n[n.InvalidRefName=3]="InvalidRefName";n[n.Unprocessed=4]="Unprocessed";n[n.UnresolvableToCommit=5]="UnresolvableToCommit";n[n.WritePermissionRequired=6]="WritePermissionRequired";n[n.ManageNotePermissionRequired=7]="ManageNotePermissionRequired";n[n.CreateBranchPermissionRequired=8]="CreateBranchPermissionRequired";n[n.CreateTagPermissionRequired=9]="CreateTagPermissionRequired";n[n.RejectedByPlugin=10]="RejectedByPlugin";n[n.Locked=11]="Locked";n[n.RefNameConflict=12]="RefNameConflict";n[n.RejectedByPolicy=13]="RejectedByPolicy";n[n.SucceededNonExistentRef=14]="SucceededNonExistentRef";n[n.SucceededCorruptRef=15]="SucceededCorruptRef"}(k=t.GitRefUpdateStatus||(t.GitRefUpdateStatus={})),function(n){n[n.None=0]="None";n[n.MergeContentNotFound=1]="MergeContentNotFound";n[n.PathInUse=2]="PathInUse";n[n.InvalidPath=3]="InvalidPath";n[n.UnknownAction=4]="UnknownAction";n[n.UnknownMergeType=5]="UnknownMergeType";n[n.OtherError=255]="OtherError"}(d=t.GitResolutionError||(t.GitResolutionError={})),function(n){n[n.Undecided=0]="Undecided";n[n.TakeSourceContent=1]="TakeSourceContent";n[n.TakeTargetContent=2]="TakeTargetContent";n[n.AutoMerged=3]="AutoMerged";n[n.UserMerged=4]="UserMerged"}(g=t.GitResolutionMergeType||(t.GitResolutionMergeType={})),function(n){n[n.Undecided=0]="Undecided";n[n.KeepSourceRenameTarget=1]="KeepSourceRenameTarget";n[n.KeepSourceDeleteTarget=2]="KeepSourceDeleteTarget";n[n.KeepTargetRenameSource=3]="KeepTargetRenameSource";n[n.KeepTargetDeleteSource=4]="KeepTargetDeleteSource"}(nt=t.GitResolutionPathConflictAction||(t.GitResolutionPathConflictAction={})),function(n){n[n.Undecided=0]="Undecided";n[n.KeepSourcePath=1]="KeepSourcePath";n[n.KeepTargetPath=2]="KeepTargetPath";n[n.KeepBothFiles=3]="KeepBothFiles"}(tt=t.GitResolutionRename1to2Action||(t.GitResolutionRename1to2Action={})),function(n){n[n.Unresolved=0]="Unresolved";n[n.PartiallyResolved=1]="PartiallyResolved";n[n.Resolved=2]="Resolved"}(it=t.GitResolutionStatus||(t.GitResolutionStatus={})),function(n){n[n.Undecided=0]="Undecided";n[n.PickSourceAction=1]="PickSourceAction";n[n.PickTargetAction=2]="PickTargetAction"}(rt=t.GitResolutionWhichAction||(t.GitResolutionWhichAction={})),function(n){n[n.NotSet=0]="NotSet";n[n.Pending=1]="Pending";n[n.Succeeded=2]="Succeeded";n[n.Failed=3]="Failed";n[n.Error=4]="Error";n[n.NotApplicable=5]="NotApplicable"}(ut=t.GitStatusState||(t.GitStatusState={})),function(n){n[n.None=0]="None";n[n.PreviousChange=1]="PreviousChange";n[n.FirstParent=2]="FirstParent"}(ft=t.GitVersionOptions||(t.GitVersionOptions={})),function(n){n[n.Branch=0]="Branch";n[n.Tag=1]="Tag";n[n.Commit=2]="Commit"}(et=t.GitVersionType||(t.GitVersionType={})),function(n){n[n.RawText=0]="RawText";n[n.Base64Encoded=1]="Base64Encoded"}(ot=t.ItemContentType||(t.ItemContentType={})),function(n){n[n.Push=0]="Push";n[n.ForcePush=1]="ForcePush";n[n.Create=2]="Create";n[n.Rebase=4]="Rebase";n[n.Unknown=8]="Unknown";n[n.Retarget=16]="Retarget";n[n.ResolveConflicts=32]="ResolveConflicts"}(st=t.IterationReason||(t.IterationReason={})),function(n){n[n.None=0]="None";n[n.Add=1]="Add";n[n.Delete=2]="Delete";n[n.Edit=3]="Edit"}(ht=t.LineDiffBlockChangeType||(t.LineDiffBlockChangeType={})),function(n){n[n.NotSet=0]="NotSet";n[n.Queued=1]="Queued";n[n.Conflicts=2]="Conflicts";n[n.Succeeded=3]="Succeeded";n[n.RejectedByPolicy=4]="RejectedByPolicy";n[n.Failure=5]="Failure"}(ct=t.PullRequestAsyncStatus||(t.PullRequestAsyncStatus={})),function(n){n[n.None=0]="None";n[n.Unknown=1]="Unknown";n[n.CaseSensitive=2]="CaseSensitive";n[n.ObjectTooLarge=3]="ObjectTooLarge"}(lt=t.PullRequestMergeFailureType||(t.PullRequestMergeFailureType={})),function(n){n[n.NotSet=0]="NotSet";n[n.Active=1]="Active";n[n.Abandoned=2]="Abandoned";n[n.Completed=3]="Completed";n[n.All=4]="All"}(at=t.PullRequestStatus||(t.PullRequestStatus={})),function(n){n[n.Created=1]="Created";n[n.Closed=2]="Closed"}(vt=t.PullRequestTimeRangeType||(t.PullRequestTimeRangeType={})),function(n){n[n.Invalid=0]="Invalid";n[n.Folder=1]="Folder";n[n.Ref=2]="Ref"}(yt=t.RefFavoriteType||(t.RefFavoriteType={})),function(n){n[n.Unknown=0]="Unknown";n[n.AndroidStudio=1]="AndroidStudio";n[n.AppCode=2]="AppCode";n[n.CLion=3]="CLion";n[n.DataGrip=4]="DataGrip";n[n.Eclipse=13]="Eclipse";n[n.IntelliJ=5]="IntelliJ";n[n.MPS=6]="MPS";n[n.PhpStorm=7]="PhpStorm";n[n.PyCharm=8]="PyCharm";n[n.RubyMine=9]="RubyMine";n[n.Tower=10]="Tower";n[n.VisualStudio=11]="VisualStudio";n[n.VSCode=14]="VSCode";n[n.WebStorm=12]="WebStorm"}(pt=t.SupportedIdeType||(t.SupportedIdeType={})),function(n){n[n.None=0]="None";n[n.Previous=1]="Previous";n[n.UseRename=2]="UseRename"}(wt=t.TfvcVersionOption||(t.TfvcVersionOption={})),function(n){n[n.None=0]="None";n[n.Changeset=1]="Changeset";n[n.Shelveset=2]="Shelveset";n[n.Change=3]="Change";n[n.Date=4]="Date";n[n.Latest=5]="Latest";n[n.Tip=6]="Tip";n[n.MergeSource=7]="MergeSource"}(bt=t.TfvcVersionType||(t.TfvcVersionType={})),function(n){n[n.None=0]="None";n[n.Add=1]="Add";n[n.Edit=2]="Edit";n[n.Encoding=4]="Encoding";n[n.Rename=8]="Rename";n[n.Delete=16]="Delete";n[n.Undelete=32]="Undelete";n[n.Branch=64]="Branch";n[n.Merge=128]="Merge";n[n.Lock=256]="Lock";n[n.Rollback=512]="Rollback";n[n.SourceRename=1024]="SourceRename";n[n.TargetRename=2048]="TargetRename";n[n.Property=4096]="Property";n[n.All=8191]="All"}(kt=t.VersionControlChangeType||(t.VersionControlChangeType={})),function(n){n[n.None=0]="None";n[n.OneLevel=1]="OneLevel";n[n.OneLevelPlusNestedEmptyFolders=4]="OneLevelPlusNestedEmptyFolders";n[n.Full=120]="Full"}(dt=t.VersionControlRecursionType||(t.VersionControlRecursionType={}));t.TypeInfo={AdvSecEnablementStatus:{},Attachment:{},BillableCommitterDetail:{},Change:{},ChangeList:{},Comment:{},CommentThread:{},CommentThreadStatus:{enumValues:{unknown:0,active:1,fixed:2,wontFix:3,closed:4,byDesign:5,pending:6}},CommentType:{enumValues:{unknown:0,text:1,codeChange:2,system:3}},FileDiff:{},GitAnnotatedTag:{},GitAsyncOperationStatus:{enumValues:{queued:1,inProgress:2,completed:3,failed:4,abandoned:5}},GitAsyncRefOperation:{},GitAsyncRefOperationDetail:{},GitAsyncRefOperationFailureStatus:{enumValues:{none:0,invalidRefName:1,refNameConflict:2,createBranchPermissionRequired:3,writePermissionRequired:4,targetBranchDeleted:5,gitObjectTooLarge:6,operationIndentityNotFound:7,asyncOperationNotFound:8,other:9,emptyCommitterSignature:10}},GitAsyncRefOperationParameters:{},GitAsyncRefOperationSource:{},GitBaseVersionDescriptor:{},GitBranchStats:{},GitChange:{},GitCherryPick:{},GitCommit:{},GitCommitChanges:{},GitCommitDiffs:{},GitCommitRef:{},GitCommitToCreate:{},GitConflict:{},GitConflictAddAdd:{},GitConflictAddRename:{},GitConflictDeleteEdit:{},GitConflictDeleteRename:{},GitConflictDirectoryFile:{},GitConflictEditDelete:{},GitConflictEditEdit:{},GitConflictFileDirectory:{},GitConflictRename1to2:{},GitConflictRename2to1:{},GitConflictRenameAdd:{},GitConflictRenameDelete:{},GitConflictRenameRename:{},GitConflictType:{enumValues:{none:0,addAdd:1,addRename:2,deleteEdit:3,deleteRename:4,directoryFile:5,directoryChild:6,editDelete:7,editEdit:8,fileDirectory:9,rename1to2:10,rename2to1:11,renameAdd:12,renameDelete:13,renameRename:14}},GitConflictUpdateResult:{},GitConflictUpdateStatus:{enumValues:{succeeded:0,badRequest:1,invalidResolution:2,unsupportedConflictType:3,notFound:4}},GitDeletedRepository:{},GitForkRef:{},GitForkSyncRequest:{},GitForkTeamProjectReference:{},GitHistoryMode:{enumValues:{simplifiedHistory:0,firstParent:1,fullHistory:2,fullHistorySimplifyMerges:3}},GitImportFailedEvent:{},GitImportRequest:{},GitImportSucceededEvent:{},GitItem:{},GitItemDescriptor:{},GitItemRequestData:{},GitLastChangeTreeItems:{},GitMerge:{},GitObject:{},GitObjectType:{enumValues:{bad:0,commit:1,tree:2,blob:3,tag:4,ext2:5,ofsDelta:6,refDelta:7}},GitPathAction:{},GitPathActions:{enumValues:{none:0,edit:1,"delete":2,add:3,rename:4}},GitPathToItemsCollection:{},GitPolicyConfigurationResponse:{},GitPullRequest:{},GitPullRequestChange:{},GitPullRequestCommentThread:{},GitPullRequestCompletionOptions:{},GitPullRequestIteration:{},GitPullRequestIterationChanges:{},GitPullRequestMergeStrategy:{enumValues:{noFastForward:1,squash:2,rebase:3,rebaseMerge:4}},GitPullRequestQuery:{},GitPullRequestQueryInput:{},GitPullRequestQueryType:{enumValues:{notSet:0,lastMergeCommit:1,commit:2}},GitPullRequestReviewFileType:{enumValues:{changeEntry:0,attachment:1}},GitPullRequestSearchCriteria:{},GitPullRequestStatus:{},GitPush:{},GitPushEventData:{},GitPushRef:{},GitPushSearchCriteria:{},GitQueryBranchStatsCriteria:{},GitQueryCommitsCriteria:{},GitQueryRefsCriteria:{},GitRef:{},GitRefFavorite:{},GitRefSearchType:{enumValues:{exact:0,startsWith:1,contains:2}},GitRefUpdateMode:{enumValues:{bestEffort:0,allOrNone:1}},GitRefUpdateResult:{},GitRefUpdateStatus:{enumValues:{succeeded:0,forcePushRequired:1,staleOldObjectId:2,invalidRefName:3,unprocessed:4,unresolvableToCommit:5,writePermissionRequired:6,manageNotePermissionRequired:7,createBranchPermissionRequired:8,createTagPermissionRequired:9,rejectedByPlugin:10,locked:11,refNameConflict:12,rejectedByPolicy:13,succeededNonExistentRef:14,succeededCorruptRef:15}},GitRepository:{},GitRepositoryCreateOptions:{},GitRepositoryRef:{},GitResolutionError:{enumValues:{none:0,mergeContentNotFound:1,pathInUse:2,invalidPath:3,unknownAction:4,unknownMergeType:5,otherError:255}},GitResolutionMergeContent:{},GitResolutionMergeType:{enumValues:{undecided:0,takeSourceContent:1,takeTargetContent:2,autoMerged:3,userMerged:4}},GitResolutionPathConflict:{},GitResolutionPathConflictAction:{enumValues:{undecided:0,keepSourceRenameTarget:1,keepSourceDeleteTarget:2,keepTargetRenameSource:3,keepTargetDeleteSource:4}},GitResolutionPickOneAction:{},GitResolutionRename1to2:{},GitResolutionRename1to2Action:{enumValues:{undecided:0,keepSourcePath:1,keepTargetPath:2,keepBothFiles:3}},GitResolutionStatus:{enumValues:{unresolved:0,partiallyResolved:1,resolved:2}},GitResolutionWhichAction:{enumValues:{undecided:0,pickSourceAction:1,pickTargetAction:2}},GitRevert:{},GitStatus:{},GitStatusState:{enumValues:{notSet:0,pending:1,succeeded:2,failed:3,error:4,notApplicable:5}},GitTargetVersionDescriptor:{},GitTreeDiff:{},GitTreeDiffEntry:{},GitTreeDiffResponse:{},GitTreeEntryRef:{},GitTreeRef:{},GitUserDate:{},GitVersionDescriptor:{},GitVersionOptions:{enumValues:{none:0,previousChange:1,firstParent:2}},GitVersionType:{enumValues:{branch:0,tag:1,commit:2}},HistoryEntry:{},IncludedGitCommit:{},ItemContent:{},ItemContentType:{enumValues:{rawText:0,base64Encoded:1}},ItemDetailsOptions:{},IterationReason:{enumValues:{push:0,forcePush:1,create:2,rebase:4,unknown:8,retarget:16,resolveConflicts:32}},LineDiffBlock:{},LineDiffBlockChangeType:{enumValues:{none:0,add:1,"delete":2,edit:3}},PullRequestAsyncStatus:{enumValues:{notSet:0,queued:1,conflicts:2,succeeded:3,rejectedByPolicy:4,failure:5}},PullRequestMergeFailureType:{enumValues:{none:0,unknown:1,caseSensitive:2,objectTooLarge:3}},PullRequestStatus:{enumValues:{notSet:0,active:1,abandoned:2,completed:3,all:4}},PullRequestTimeRangeType:{enumValues:{created:1,closed:2}},RefFavoriteType:{enumValues:{invalid:0,folder:1,ref:2}},SupportedIde:{},SupportedIdeType:{enumValues:{unknown:0,androidStudio:1,appCode:2,cLion:3,dataGrip:4,eclipse:13,intelliJ:5,mps:6,phpStorm:7,pyCharm:8,rubyMine:9,tower:10,visualStudio:11,vsCode:14,webStorm:12}},TfvcBranch:{},TfvcBranchRef:{},TfvcChange:{},TfvcChangeset:{},TfvcChangesetRef:{},TfvcCheckinEventData:{},TfvcHistoryEntry:{},TfvcItem:{},TfvcItemDescriptor:{},TfvcItemPreviousHash:{},TfvcItemRequestData:{},TfvcLabel:{},TfvcLabelRef:{},TfvcShelveset:{},TfvcShelvesetRef:{},TfvcVersionDescriptor:{},TfvcVersionOption:{enumValues:{none:0,previous:1,useRename:2}},TfvcVersionType:{enumValues:{none:0,changeset:1,shelveset:2,change:3,date:4,latest:5,tip:6,mergeSource:7}},UpdateRefsRequest:{},VersionControlChangeType:{enumValues:{none:0,add:1,edit:2,encoding:4,rename:8,"delete":16,undelete:32,branch:64,merge:128,lock:256,rollback:512,sourceRename:1024,targetRename:2048,property:4096,all:8191}},VersionControlProjectInfo:{},VersionControlRecursionType:{enumValues:{none:0,oneLevel:1,oneLevelPlusNestedEmptyFolders:4,full:120}}};t.TypeInfo.AdvSecEnablementStatus.fields={changedOnDate:{isDate:!0},enabledChangedOnDate:{isDate:!0}};t.TypeInfo.Attachment.fields={createdDate:{isDate:!0}};t.TypeInfo.BillableCommitterDetail.fields={commitTime:{isDate:!0},pushedTime:{isDate:!0}};t.TypeInfo.Change.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},newContent:{typeInfo:t.TypeInfo.ItemContent}};t.TypeInfo.ChangeList.fields={changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},creationDate:{isDate:!0},sortDate:{isDate:!0}};t.TypeInfo.Comment.fields={commentType:{enumType:t.TypeInfo.CommentType},lastContentUpdatedDate:{isDate:!0},lastUpdatedDate:{isDate:!0},publishedDate:{isDate:!0}};t.TypeInfo.CommentThread.fields={comments:{isArray:!0,typeInfo:t.TypeInfo.Comment},lastUpdatedDate:{isDate:!0},publishedDate:{isDate:!0},status:{enumType:t.TypeInfo.CommentThreadStatus}};t.TypeInfo.FileDiff.fields={lineDiffBlocks:{isArray:!0,typeInfo:t.TypeInfo.LineDiffBlock}};t.TypeInfo.GitAnnotatedTag.fields={taggedBy:{typeInfo:t.TypeInfo.GitUserDate},taggedObject:{typeInfo:t.TypeInfo.GitObject}};t.TypeInfo.GitAsyncRefOperation.fields={detailedStatus:{typeInfo:t.TypeInfo.GitAsyncRefOperationDetail},parameters:{typeInfo:t.TypeInfo.GitAsyncRefOperationParameters},status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitAsyncRefOperationDetail.fields={status:{enumType:t.TypeInfo.GitAsyncRefOperationFailureStatus}};t.TypeInfo.GitAsyncRefOperationParameters.fields={repository:{typeInfo:t.TypeInfo.GitRepository},source:{typeInfo:t.TypeInfo.GitAsyncRefOperationSource}};t.TypeInfo.GitAsyncRefOperationSource.fields={commitList:{isArray:!0,typeInfo:t.TypeInfo.GitCommitRef}};t.TypeInfo.GitBaseVersionDescriptor.fields={baseVersionOptions:{enumType:t.TypeInfo.GitVersionOptions},baseVersionType:{enumType:t.TypeInfo.GitVersionType},versionOptions:{enumType:t.TypeInfo.GitVersionOptions},versionType:{enumType:t.TypeInfo.GitVersionType}};t.TypeInfo.GitBranchStats.fields={commit:{typeInfo:t.TypeInfo.GitCommitRef}};t.TypeInfo.GitChange.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},newContent:{typeInfo:t.TypeInfo.ItemContent}};t.TypeInfo.GitCherryPick.fields={detailedStatus:{typeInfo:t.TypeInfo.GitAsyncRefOperationDetail},parameters:{typeInfo:t.TypeInfo.GitAsyncRefOperationParameters},status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitCommit.fields={author:{typeInfo:t.TypeInfo.GitUserDate},changes:{isArray:!0,typeInfo:t.TypeInfo.GitChange},committer:{typeInfo:t.TypeInfo.GitUserDate},push:{typeInfo:t.TypeInfo.GitPushRef},statuses:{isArray:!0,typeInfo:t.TypeInfo.GitStatus}};t.TypeInfo.GitCommitChanges.fields={changes:{isArray:!0,typeInfo:t.TypeInfo.GitChange}};t.TypeInfo.GitCommitDiffs.fields={changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},changes:{isArray:!0,typeInfo:t.TypeInfo.GitChange}};t.TypeInfo.GitCommitRef.fields={author:{typeInfo:t.TypeInfo.GitUserDate},changes:{isArray:!0,typeInfo:t.TypeInfo.GitChange},committer:{typeInfo:t.TypeInfo.GitUserDate},push:{typeInfo:t.TypeInfo.GitPushRef},statuses:{isArray:!0,typeInfo:t.TypeInfo.GitStatus}};t.TypeInfo.GitCommitToCreate.fields={baseRef:{typeInfo:t.TypeInfo.GitRef},pathActions:{isArray:!0,typeInfo:t.TypeInfo.GitPathAction}};t.TypeInfo.GitConflict.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictAddAdd.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionMergeContent},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictAddRename.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPathConflict},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictDeleteEdit.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPickOneAction},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictDeleteRename.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPickOneAction},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictDirectoryFile.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPathConflict},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0},sourceTree:{typeInfo:t.TypeInfo.GitTreeRef}};t.TypeInfo.GitConflictEditDelete.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPickOneAction},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictEditEdit.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionMergeContent},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictFileDirectory.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPathConflict},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0},targetTree:{typeInfo:t.TypeInfo.GitTreeRef}};t.TypeInfo.GitConflictRename1to2.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionRename1to2},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictRename2to1.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPathConflict},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictRenameAdd.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPathConflict},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictRenameDelete.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionPickOneAction},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictRenameRename.fields={conflictType:{enumType:t.TypeInfo.GitConflictType},mergeBaseCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},resolution:{typeInfo:t.TypeInfo.GitResolutionMergeContent},resolutionError:{enumType:t.TypeInfo.GitResolutionError},resolutionStatus:{enumType:t.TypeInfo.GitResolutionStatus},resolvedDate:{isDate:!0}};t.TypeInfo.GitConflictUpdateResult.fields={updatedConflict:{typeInfo:t.TypeInfo.GitConflict},updateStatus:{enumType:t.TypeInfo.GitConflictUpdateStatus}};t.TypeInfo.GitDeletedRepository.fields={createdDate:{isDate:!0},deletedDate:{isDate:!0},project:{typeInfo:i.TypeInfo.TeamProjectReference}};t.TypeInfo.GitForkRef.fields={repository:{typeInfo:t.TypeInfo.GitRepository},statuses:{isArray:!0,typeInfo:t.TypeInfo.GitStatus}};t.TypeInfo.GitForkSyncRequest.fields={status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitForkTeamProjectReference.fields={lastUpdateTime:{isDate:!0},visibility:{enumType:i.TypeInfo.ProjectVisibility}};t.TypeInfo.GitImportFailedEvent.fields={targetRepository:{typeInfo:t.TypeInfo.GitRepository}};t.TypeInfo.GitImportRequest.fields={repository:{typeInfo:t.TypeInfo.GitRepository},status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitImportSucceededEvent.fields={targetRepository:{typeInfo:t.TypeInfo.GitRepository}};t.TypeInfo.GitItem.fields={gitObjectType:{enumType:t.TypeInfo.GitObjectType},latestProcessedChange:{typeInfo:t.TypeInfo.GitCommitRef}};t.TypeInfo.GitItemDescriptor.fields={recursionLevel:{enumType:t.TypeInfo.VersionControlRecursionType},versionOptions:{enumType:t.TypeInfo.GitVersionOptions},versionType:{enumType:t.TypeInfo.GitVersionType}};t.TypeInfo.GitItemRequestData.fields={itemDescriptors:{isArray:!0,typeInfo:t.TypeInfo.GitItemDescriptor}};t.TypeInfo.GitLastChangeTreeItems.fields={commits:{isArray:!0,typeInfo:t.TypeInfo.GitCommitRef},lastExploredTime:{isDate:!0}};t.TypeInfo.GitMerge.fields={status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitObject.fields={objectType:{enumType:t.TypeInfo.GitObjectType}};t.TypeInfo.GitPathAction.fields={action:{enumType:t.TypeInfo.GitPathActions}};t.TypeInfo.GitPathToItemsCollection.fields={items:{isDictionary:!0,dictionaryValueFieldInfo:{isArray:!0,typeInfo:t.TypeInfo.GitItem}}};t.TypeInfo.GitPolicyConfigurationResponse.fields={policyConfigurations:{isArray:!0,typeInfo:r.TypeInfo.PolicyConfiguration}};t.TypeInfo.GitPullRequest.fields={closedDate:{isDate:!0},commits:{isArray:!0,typeInfo:t.TypeInfo.GitCommitRef},completionOptions:{typeInfo:t.TypeInfo.GitPullRequestCompletionOptions},completionQueueTime:{isDate:!0},creationDate:{isDate:!0},forkSource:{typeInfo:t.TypeInfo.GitForkRef},lastMergeCommit:{typeInfo:t.TypeInfo.GitCommitRef},lastMergeSourceCommit:{typeInfo:t.TypeInfo.GitCommitRef},lastMergeTargetCommit:{typeInfo:t.TypeInfo.GitCommitRef},mergeFailureType:{enumType:t.TypeInfo.PullRequestMergeFailureType},mergeStatus:{enumType:t.TypeInfo.PullRequestAsyncStatus},repository:{typeInfo:t.TypeInfo.GitRepository},status:{enumType:t.TypeInfo.PullRequestStatus}};t.TypeInfo.GitPullRequestChange.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},newContent:{typeInfo:t.TypeInfo.ItemContent}};t.TypeInfo.GitPullRequestCommentThread.fields={comments:{isArray:!0,typeInfo:t.TypeInfo.Comment},lastUpdatedDate:{isDate:!0},publishedDate:{isDate:!0},status:{enumType:t.TypeInfo.CommentThreadStatus}};t.TypeInfo.GitPullRequestCompletionOptions.fields={mergeStrategy:{enumType:t.TypeInfo.GitPullRequestMergeStrategy}};t.TypeInfo.GitPullRequestIteration.fields={changeList:{isArray:!0,typeInfo:t.TypeInfo.GitPullRequestChange},commits:{isArray:!0,typeInfo:t.TypeInfo.GitCommitRef},commonRefCommit:{typeInfo:t.TypeInfo.GitCommitRef},createdDate:{isDate:!0},push:{typeInfo:t.TypeInfo.GitPushRef},reason:{enumType:t.TypeInfo.IterationReason},sourceRefCommit:{typeInfo:t.TypeInfo.GitCommitRef},targetRefCommit:{typeInfo:t.TypeInfo.GitCommitRef},updatedDate:{isDate:!0}};t.TypeInfo.GitPullRequestIterationChanges.fields={changeEntries:{isArray:!0,typeInfo:t.TypeInfo.GitPullRequestChange}};t.TypeInfo.GitPullRequestQuery.fields={queries:{isArray:!0,typeInfo:t.TypeInfo.GitPullRequestQueryInput}};t.TypeInfo.GitPullRequestQueryInput.fields={type:{enumType:t.TypeInfo.GitPullRequestQueryType}};t.TypeInfo.GitPullRequestSearchCriteria.fields={maxTime:{isDate:!0},minTime:{isDate:!0},queryTimeRangeType:{enumType:t.TypeInfo.PullRequestTimeRangeType},status:{enumType:t.TypeInfo.PullRequestStatus}};t.TypeInfo.GitPullRequestStatus.fields={creationDate:{isDate:!0},state:{enumType:t.TypeInfo.GitStatusState},updatedDate:{isDate:!0}};t.TypeInfo.GitPush.fields={commits:{isArray:!0,typeInfo:t.TypeInfo.GitCommitRef},date:{isDate:!0},repository:{typeInfo:t.TypeInfo.GitRepository}};t.TypeInfo.GitPushEventData.fields={commits:{isArray:!0,typeInfo:t.TypeInfo.GitCommit},repository:{typeInfo:t.TypeInfo.GitRepository}};t.TypeInfo.GitPushRef.fields={date:{isDate:!0}};t.TypeInfo.GitPushSearchCriteria.fields={fromDate:{isDate:!0},toDate:{isDate:!0}};t.TypeInfo.GitQueryBranchStatsCriteria.fields={baseCommit:{typeInfo:t.TypeInfo.GitVersionDescriptor},targetCommits:{isArray:!0,typeInfo:t.TypeInfo.GitVersionDescriptor}};t.TypeInfo.GitQueryCommitsCriteria.fields={compareVersion:{typeInfo:t.TypeInfo.GitVersionDescriptor},historyMode:{enumType:t.TypeInfo.GitHistoryMode},itemVersion:{typeInfo:t.TypeInfo.GitVersionDescriptor}};t.TypeInfo.GitQueryRefsCriteria.fields={searchType:{enumType:t.TypeInfo.GitRefSearchType}};t.TypeInfo.GitRef.fields={statuses:{isArray:!0,typeInfo:t.TypeInfo.GitStatus}};t.TypeInfo.GitRefFavorite.fields={type:{enumType:t.TypeInfo.RefFavoriteType}};t.TypeInfo.GitRefUpdateResult.fields={updateStatus:{enumType:t.TypeInfo.GitRefUpdateStatus}};t.TypeInfo.GitRepository.fields={parentRepository:{typeInfo:t.TypeInfo.GitRepositoryRef},project:{typeInfo:i.TypeInfo.TeamProjectReference}};t.TypeInfo.GitRepositoryCreateOptions.fields={parentRepository:{typeInfo:t.TypeInfo.GitRepositoryRef},project:{typeInfo:i.TypeInfo.TeamProjectReference}};t.TypeInfo.GitRepositoryRef.fields={project:{typeInfo:i.TypeInfo.TeamProjectReference}};t.TypeInfo.GitResolutionMergeContent.fields={mergeType:{enumType:t.TypeInfo.GitResolutionMergeType}};t.TypeInfo.GitResolutionPathConflict.fields={action:{enumType:t.TypeInfo.GitResolutionPathConflictAction}};t.TypeInfo.GitResolutionPickOneAction.fields={action:{enumType:t.TypeInfo.GitResolutionWhichAction}};t.TypeInfo.GitResolutionRename1to2.fields={action:{enumType:t.TypeInfo.GitResolutionRename1to2Action},mergeType:{enumType:t.TypeInfo.GitResolutionMergeType}};t.TypeInfo.GitRevert.fields={detailedStatus:{typeInfo:t.TypeInfo.GitAsyncRefOperationDetail},parameters:{typeInfo:t.TypeInfo.GitAsyncRefOperationParameters},status:{enumType:t.TypeInfo.GitAsyncOperationStatus}};t.TypeInfo.GitStatus.fields={creationDate:{isDate:!0},state:{enumType:t.TypeInfo.GitStatusState},updatedDate:{isDate:!0}};t.TypeInfo.GitTargetVersionDescriptor.fields={targetVersionOptions:{enumType:t.TypeInfo.GitVersionOptions},targetVersionType:{enumType:t.TypeInfo.GitVersionType},versionOptions:{enumType:t.TypeInfo.GitVersionOptions},versionType:{enumType:t.TypeInfo.GitVersionType}};t.TypeInfo.GitTreeDiff.fields={diffEntries:{isArray:!0,typeInfo:t.TypeInfo.GitTreeDiffEntry}};t.TypeInfo.GitTreeDiffEntry.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},objectType:{enumType:t.TypeInfo.GitObjectType}};t.TypeInfo.GitTreeDiffResponse.fields={treeDiff:{typeInfo:t.TypeInfo.GitTreeDiff}};t.TypeInfo.GitTreeEntryRef.fields={gitObjectType:{enumType:t.TypeInfo.GitObjectType}};t.TypeInfo.GitTreeRef.fields={treeEntries:{isArray:!0,typeInfo:t.TypeInfo.GitTreeEntryRef}};t.TypeInfo.GitUserDate.fields={date:{isDate:!0}};t.TypeInfo.GitVersionDescriptor.fields={versionOptions:{enumType:t.TypeInfo.GitVersionOptions},versionType:{enumType:t.TypeInfo.GitVersionType}};t.TypeInfo.HistoryEntry.fields={itemChangeType:{enumType:t.TypeInfo.VersionControlChangeType}};t.TypeInfo.IncludedGitCommit.fields={commitTime:{isDate:!0}};t.TypeInfo.ItemContent.fields={contentType:{enumType:t.TypeInfo.ItemContentType}};t.TypeInfo.ItemDetailsOptions.fields={recursionLevel:{enumType:t.TypeInfo.VersionControlRecursionType}};t.TypeInfo.LineDiffBlock.fields={changeType:{enumType:t.TypeInfo.LineDiffBlockChangeType}};t.TypeInfo.SupportedIde.fields={ideType:{enumType:t.TypeInfo.SupportedIdeType}};t.TypeInfo.TfvcBranch.fields={children:{isArray:!0,typeInfo:t.TypeInfo.TfvcBranch},createdDate:{isDate:!0}};t.TypeInfo.TfvcBranchRef.fields={createdDate:{isDate:!0}};t.TypeInfo.TfvcChange.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},newContent:{typeInfo:t.TypeInfo.ItemContent}};t.TypeInfo.TfvcChangeset.fields={changes:{isArray:!0,typeInfo:t.TypeInfo.TfvcChange},createdDate:{isDate:!0}};t.TypeInfo.TfvcChangesetRef.fields={createdDate:{isDate:!0}};t.TypeInfo.TfvcCheckinEventData.fields={changeset:{typeInfo:t.TypeInfo.TfvcChangeset},project:{typeInfo:i.TypeInfo.TeamProjectReference}};t.TypeInfo.TfvcHistoryEntry.fields={itemChangeType:{enumType:t.TypeInfo.VersionControlChangeType}};t.TypeInfo.TfvcItem.fields={changeDate:{isDate:!0}};t.TypeInfo.TfvcItemDescriptor.fields={recursionLevel:{enumType:t.TypeInfo.VersionControlRecursionType},versionOption:{enumType:t.TypeInfo.TfvcVersionOption},versionType:{enumType:t.TypeInfo.TfvcVersionType}};t.TypeInfo.TfvcItemPreviousHash.fields={changeDate:{isDate:!0}};t.TypeInfo.TfvcItemRequestData.fields={itemDescriptors:{isArray:!0,typeInfo:t.TypeInfo.TfvcItemDescriptor}};t.TypeInfo.TfvcLabel.fields={items:{isArray:!0,typeInfo:t.TypeInfo.TfvcItem},modifiedDate:{isDate:!0}};t.TypeInfo.TfvcLabelRef.fields={modifiedDate:{isDate:!0}};t.TypeInfo.TfvcShelveset.fields={changes:{isArray:!0,typeInfo:t.TypeInfo.TfvcChange},createdDate:{isDate:!0}};t.TypeInfo.TfvcShelvesetRef.fields={createdDate:{isDate:!0}};t.TypeInfo.TfvcVersionDescriptor.fields={versionOption:{enumType:t.TypeInfo.TfvcVersionOption},versionType:{enumType:t.TypeInfo.TfvcVersionType}};t.TypeInfo.UpdateRefsRequest.fields={updateMode:{enumType:t.TypeInfo.GitRefUpdateMode}};t.TypeInfo.VersionControlProjectInfo.fields={defaultSourceControlType:{enumType:i.TypeInfo.SourceControlTypes},project:{typeInfo:i.TypeInfo.TeamProjectReference}}});

var __extends=this&&this.__extends||function(){var n=function(t,i){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])},n(t,i)};return function(t,i){function r(){this.constructor=t}if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");n(t,i);t.prototype=i===null?Object.create(i):(r.prototype=i.prototype,new r)}}();define("TFS/VersionControl/GitRestClient",["require","exports","TFS/VersionControl/Contracts","TFS/VersionControl/TFS.Policy.Contracts","VSS/Service","VSS/WebApi/RestClient","VSS/WebApi/Constants"],function(n,t,i,r,u,f,e){"use strict";function pt(n){return window.VSS&&window.VSS.VssSDKRestVersion&&vt[window.VSS.VssSDKRestVersion]?u.getClient(vt[window.VSS.VssSDKRestVersion],undefined,undefined,undefined,n):u.getClient(k,undefined,undefined,undefined,n)}var l,a,h,v,c,y,p,o,s,w,b,k,d,g,nt,tt,it,rt,ut,ft,et,ot,st,ht,ct,lt,at,yt,vt;Object.defineProperty(t,"__esModule",{value:!0});t.getClient=t.GitHttpClient=t.GitHttpClient2=t.GitHttpClient2_1=t.GitHttpClient2_2=t.GitHttpClient2_3=t.GitHttpClient3=t.GitHttpClient3_1=t.GitHttpClient3_2=t.GitHttpClient4=t.GitHttpClient4_1=t.GitHttpClient5=t.GitHttpClient5_1=t.GitHttpClient5_2=t.GitHttpClient6=t.GitHttpClient6_1=t.GitHttpClient7=t.GitHttpClient7_1=t.GitHttpClient7_2=t.CommonMethods7_1To7_2=t.CommonMethods6To7_2=t.CommonMethods5To7_2=t.CommonMethods4_1To7_2=t.CommonMethods4To7_2=t.CommonMethods3_1To7_2=t.CommonMethods3To7_2=t.CommonMethods2_2To7_2=t.CommonMethods2_1To7_2=t.CommonMethods2To7_2=void 0;l=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getTreeZip=function(n,t,i,r,u,f){var e={projectId:r,recursive:u,fileName:f};return this._beginRequest({httpMethod:"GET",httpResponseType:"application/zip",area:"git",locationId:"729f6437-6f92-44ec-8bee-273a7111063c",resource:"Trees",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e,apiVersion:this.treesApiVersion})},t.prototype.getTree=function(n,t,r,u,f,e){var o={projectId:u,recursive:f,fileName:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"729f6437-6f92-44ec-8bee-273a7111063c",resource:"Trees",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",responseType:i.TypeInfo.GitTreeRef,routeValues:{project:r,repositoryId:n,sha1:t},queryParams:o,apiVersion:this.treesApiVersion})},t.prototype.updateRepository=function(n,t,r){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",requestType:i.TypeInfo.GitRepository,responseType:i.TypeInfo.GitRepository,routeValues:{project:r,repositoryId:t},apiVersion:this.repositoriesApiVersion,data:n})},t.prototype.getRepositoryWithParent=function(n,t,r){var u={includeParent:t};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",responseType:i.TypeInfo.GitRepository,routeValues:{project:r,repositoryId:n},queryParams:u,apiVersion:this.repositoriesApiVersion})},t.prototype.getRepository=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",responseType:i.TypeInfo.GitRepository,routeValues:{project:t,repositoryId:n},apiVersion:this.repositoriesApiVersion})},t.prototype.getRepositories=function(n,t,r,u){var f={includeLinks:t,includeAllUrls:r,includeHidden:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",responseType:i.TypeInfo.GitRepository,responseIsCollection:!0,routeValues:{project:n},queryParams:f,apiVersion:this.repositoriesApiVersion})},t.prototype.deleteRepository=function(n,t){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",routeValues:{project:t,repositoryId:n},apiVersion:this.repositoriesApiVersion})},t.prototype.createRepository=function(n,t,r){var u={sourceRef:r};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"225f7195-f9c7-4d14-ab28-a83f7ff77e1f",resource:"Repositories",routeTemplate:"{project}/_apis/{area}/{resource}/{repositoryId}",requestType:i.TypeInfo.GitRepositoryCreateOptions,responseType:i.TypeInfo.GitRepository,routeValues:{project:t},queryParams:u,apiVersion:this.repositoriesApiVersion,data:n})},t.prototype.updateRefs=function(n,t,r,u){var f={projectId:u};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"2d874a60-a811-4f62-9c9f-963a6ea0a55b",resource:"refs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*filter}",responseType:i.TypeInfo.GitRefUpdateResult,responseIsCollection:!0,routeValues:{project:r,repositoryId:t},queryParams:f,apiVersion:this.refsApiVersion,data:n})},t.prototype.updateRef=function(n,t,r,u,f){var e={filter:r,projectId:f};return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"2d874a60-a811-4f62-9c9f-963a6ea0a55b",resource:"refs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*filter}",responseType:i.TypeInfo.GitRef,routeValues:{project:u,repositoryId:t},queryParams:e,apiVersion:this.refsApiVersion,data:n})},t.prototype.getRefs=function(n,t,r,u,f,e,o,s,h){var c={filter:r,includeLinks:u,includeStatuses:f,includeMyBranches:e,latestStatusesOnly:o,peelTags:s,filterContains:h};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"2d874a60-a811-4f62-9c9f-963a6ea0a55b",resource:"refs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*filter}",responseType:i.TypeInfo.GitRef,responseIsCollection:!0,routeValues:{project:t,repositoryId:n},queryParams:c,apiVersion:this.refsApiVersion})},t.prototype.getPushes=function(n,t,r,u,f){var e={$skip:r,$top:u,searchCriteria:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"ea98d07b-3c87-4971-8ede-a613694ffb55",resource:"pushes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pushId}",responseType:i.TypeInfo.GitPush,responseIsCollection:!0,routeValues:{project:t,repositoryId:n},queryParams:e,apiVersion:this.pushesApiVersion})},t.prototype.getPush=function(n,t,r,u,f){var e={includeCommits:u,includeRefUpdates:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"ea98d07b-3c87-4971-8ede-a613694ffb55",resource:"pushes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pushId}",responseType:i.TypeInfo.GitPush,routeValues:{project:r,repositoryId:n,pushId:t},queryParams:e,apiVersion:this.pushesApiVersion})},t.prototype.createPush=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"ea98d07b-3c87-4971-8ede-a613694ffb55",resource:"pushes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pushId}",requestType:i.TypeInfo.GitPush,responseType:i.TypeInfo.GitPush,routeValues:{project:r,repositoryId:t},apiVersion:this.pushesApiVersion,data:n})},t.prototype.getPullRequestWorkItemRefs=function(n,t,i){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"0a637fcc-5370-4ce8-b0e8-98091f5f9482",resource:"PullRequestWorkItems",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/workitems",responseIsCollection:!0,routeValues:{project:i,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestWorkItemsApiVersion})},t.prototype.updatePullRequestReviewers=function(n,t,i,r){return this._beginRequest({httpMethod:"PATCH",httpResponseType:"html",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestReviewersApiVersion,data:n})},t.prototype.updatePullRequestReviewer=function(n,t,i,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,reviewerId:r},apiVersion:this.pullRequestReviewersApiVersion,data:n})},t.prototype.getPullRequestReviewers=function(n,t,i){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",responseIsCollection:!0,routeValues:{project:i,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestReviewersApiVersion})},t.prototype.getPullRequestReviewer=function(n,t,i,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,reviewerId:i},apiVersion:this.pullRequestReviewersApiVersion})},t.prototype.deletePullRequestReviewer=function(n,t,i,r){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,reviewerId:i},apiVersion:this.pullRequestReviewersApiVersion})},t.prototype.createUnmaterializedPullRequestReviewer=function(n,t,i,r){return this._beginRequest({httpMethod:"PUT",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestReviewersApiVersion,data:n})},t.prototype.createPullRequestReviewers=function(n,t,i,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",responseIsCollection:!0,routeValues:{project:r,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestReviewersApiVersion,data:n})},t.prototype.createPullRequestReviewer=function(n,t,i,r,u){return this._beginRequest({httpMethod:"PUT",area:"git",locationId:"4b6702c7-aa35-4b89-9c96-b9abf6d3e540",resource:"PullRequestReviewers",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,reviewerId:r},apiVersion:this.pullRequestReviewersApiVersion,data:n})},t.prototype.getItemsBatch=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"630fd2e4-fb88-4f85-ad21-13f3fd1fbca9",resource:"ItemsBatch",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}",requestType:i.TypeInfo.GitItemRequestData,responseType:i.TypeInfo.GitItem,responseIsCollection:!0,routeValues:{project:r,repositoryId:t},apiVersion:this.itemsBatchApiVersion,data:n})},t.prototype.getItemZip=function(n,t,i,r,u,f,e,o,s,h,c,l){var a={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c,sanitize:l};return this._beginRequest({httpMethod:"GET",httpResponseType:"application/zip",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",routeValues:{project:i,repositoryId:n},queryParams:a,apiVersion:this.itemsApiVersion})},t.prototype.getItemText=function(n,t,i,r,u,f,e,o,s,h,c,l){var a={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c,sanitize:l};return this._beginRequest({httpMethod:"GET",httpResponseType:"text/plain",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",routeValues:{project:i,repositoryId:n},queryParams:a,apiVersion:this.itemsApiVersion})},t.prototype.getItems=function(n,t,r,u,f,e,o,s,h,c){var l={scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,includeLinks:s,versionDescriptor:h,zipForUnix:c};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",responseType:i.TypeInfo.GitItem,responseIsCollection:!0,routeValues:{project:t,repositoryId:n},queryParams:l,apiVersion:this.itemsApiVersion})},t.prototype.getItemContent=function(n,t,i,r,u,f,e,o,s,h,c,l){var a={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c,sanitize:l};return this._beginRequest({httpMethod:"GET",httpResponseType:"application/octet-stream",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",routeValues:{project:i,repositoryId:n},queryParams:a,apiVersion:this.itemsApiVersion})},t.prototype.getItem=function(n,t,r,u,f,e,o,s,h,c,l,a){var v={path:t,scopePath:u,recursionLevel:f,includeContentMetadata:e,latestProcessedChange:o,download:s,versionDescriptor:h,includeContent:c,resolveLfs:l,sanitize:a};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",responseType:i.TypeInfo.GitItem,routeValues:{project:r,repositoryId:n},queryParams:v,apiVersion:this.itemsApiVersion})},t.prototype.getCommitsBatch=function(n,t,r,u,f,e){var o={$skip:u,$top:f,includeStatuses:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"6400dfb2-0bcb-462b-b992-5a57f8f1416c",resource:"CommitsBatch",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}",requestType:i.TypeInfo.GitQueryCommitsCriteria,responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:this.commitsBatchApiVersion,data:n})},t.prototype.getPushCommits=function(n,t,r,u,f,e){var o={pushId:t,top:u,skip:f,includeLinks:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"c2570c3b-5b3f-41b8-98bf-5407bfde8d58",resource:"Commits",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{commitId}",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:this.commitsApiVersion})},t.prototype.getCommits=function(n,t,r,u,f){var e={searchCriteria:t,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"c2570c3b-5b3f-41b8-98bf-5407bfde8d58",resource:"Commits",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{commitId}",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:e,apiVersion:this.commitsApiVersion})},t.prototype.getCommit=function(n,t,r,u){var f={changeCount:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"c2570c3b-5b3f-41b8-98bf-5407bfde8d58",resource:"Commits",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{commitId}",responseType:i.TypeInfo.GitCommit,routeValues:{project:r,commitId:n,repositoryId:t},queryParams:f,apiVersion:this.commitsApiVersion})},t.prototype.getCommitDiffs=function(n,t,r,u,f,e,o){var s={diffCommonCommit:r,$top:u,$skip:f};return e&&(s.baseVersionType=e.versionType,s.baseVersion=e.version,s.baseVersionOptions=e.versionOptions),o&&(s.targetVersionType=o.versionType,s.targetVersion=o.version,s.targetVersionOptions=o.versionOptions),this._beginRequest({httpMethod:"GET",area:"git",locationId:"615588d5-c0c7-4b88-88f8-e625306446e8",resource:"CommitDiffs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/diffs/commits",responseType:i.TypeInfo.GitCommitDiffs,routeValues:{project:t,repositoryId:n},queryParams:s,apiVersion:this.commitDiffsApiVersion})},t.prototype.getChanges=function(n,t,r,u,f){var e={top:u,skip:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5bf884f5-3e07-42e9-afb8-1b872267bf16",resource:"Changes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/commits/{commitId}/{resource}",responseType:i.TypeInfo.GitCommitChanges,routeValues:{project:r,commitId:n,repositoryId:t},queryParams:e,apiVersion:this.changesApiVersion})},t.prototype.getBranchStatsBatch=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"d5b216de-d8d5-4d32-ae76-51df755b16d3",resource:"BranchStats",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/stats/branches",requestType:i.TypeInfo.GitQueryBranchStatsCriteria,responseType:i.TypeInfo.GitBranchStats,responseIsCollection:!0,routeValues:{project:r,repositoryId:t},apiVersion:this.branchStatsApiVersion,data:n})},t.prototype.getBranches=function(n,t,r){var u={baseVersionDescriptor:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d5b216de-d8d5-4d32-ae76-51df755b16d3",resource:"BranchStats",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/stats/branches",responseType:i.TypeInfo.GitBranchStats,responseIsCollection:!0,routeValues:{project:t,repositoryId:n},queryParams:u,apiVersion:this.branchStatsApiVersion})},t.prototype.getBranch=function(n,t,r,u){var f={name:t,baseVersionDescriptor:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d5b216de-d8d5-4d32-ae76-51df755b16d3",resource:"BranchStats",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/stats/branches",responseType:i.TypeInfo.GitBranchStats,routeValues:{project:r,repositoryId:n},queryParams:f,apiVersion:this.branchStatsApiVersion})},t.prototype.getBlobZip=function(n,t,i,r,u,f){var e={download:r,fileName:u,resolveLfs:f};return this._beginRequest({httpMethod:"GET",httpResponseType:"application/zip",area:"git",locationId:"7b28e929-2c99-405d-9c5c-6167a06e6816",resource:"Blobs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e,apiVersion:this.blobsApiVersion})},t.prototype.getBlobsZip=function(n,t,i,r){var u={filename:r};return this._beginRequest({httpMethod:"POST",httpResponseType:"application/zip",area:"git",locationId:"7b28e929-2c99-405d-9c5c-6167a06e6816",resource:"Blobs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",routeValues:{project:i,repositoryId:t},queryParams:u,apiVersion:this.blobsApiVersion,data:n})},t.prototype.getBlobContent=function(n,t,i,r,u,f){var e={download:r,fileName:u,resolveLfs:f};return this._beginRequest({httpMethod:"GET",httpResponseType:"application/octet-stream",area:"git",locationId:"7b28e929-2c99-405d-9c5c-6167a06e6816",resource:"Blobs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e,apiVersion:this.blobsApiVersion})},t.prototype.getBlob=function(n,t,i,r,u,f){var e={download:r,fileName:u,resolveLfs:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"7b28e929-2c99-405d-9c5c-6167a06e6816",resource:"Blobs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e,apiVersion:this.blobsApiVersion})},t.serviceInstanceId=e.ServiceInstanceTypes.TFS,t}(f.VssHttpClient);t.CommonMethods2To7_2=l;a=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getStatuses=function(n,t,r,u,f,e){var o={top:u,skip:f,latestOnly:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"428dd4fb-fda5-4722-af02-9313b80305da",resource:"Statuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/commits/{commitId}/{resource}",responseType:i.TypeInfo.GitStatus,responseIsCollection:!0,routeValues:{project:r,commitId:n,repositoryId:t},queryParams:o,apiVersion:this.statusesApiVersion})},t.prototype.createCommitStatus=function(n,t,r,u){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"428dd4fb-fda5-4722-af02-9313b80305da",resource:"Statuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/commits/{commitId}/{resource}",requestType:i.TypeInfo.GitStatus,responseType:i.TypeInfo.GitStatus,routeValues:{project:u,commitId:t,repositoryId:r},apiVersion:this.statusesApiVersion,data:n})},t.prototype.getPullRequestCommits=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"52823034-34a8-4576-922c-8d8b77e9e4c4",resource:"PullRequestCommits",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/commits",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestCommitsApiVersion})},t}(l);t.CommonMethods2_1To7_2=a;h=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getSuggestions=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9393b4fb-4445-4919-972b-9ad16f442d83",resource:"Suggestions",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/suggestions",responseIsCollection:!0,routeValues:{project:t,repositoryId:n},apiVersion:this.suggestionsApiVersion})},t.prototype.getDeletedRepositories=function(n){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"2b6869c4-cb25-42b5-b7a3-0d3e6be0a11a",resource:"DeletedRepositories",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitDeletedRepository,responseIsCollection:!0,routeValues:{project:n},apiVersion:this.deletedRepositoriesApiVersion})},t}(a);t.CommonMethods2_2To7_2=h;v=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getTreeDiffs=function(n,t,r,u,f,e){var o={baseId:r,targetId:u,$top:f,continuationToken:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"e264ef02-4e92-4cfc-a4b1-5e71894d7b31",resource:"TreeDiffs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/diffs/trees",responseType:i.TypeInfo.GitTreeDiff,routeValues:{project:n,repositoryId:t},queryParams:o,apiVersion:this.treeDiffsApiVersion},!0).then(function(n){var i=n[0],u=n[1],r=n[2],t=r.getResponseHeader("x-ms-continuationtoken");return{treeDiff:i,continuationToken:t?t.split(","):[]}})},t.prototype.getTemplateList=function(n,t){var i={type:t};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"f88d498e-52c3-422a-a5f2-994f4265a25b",resource:"templates",routeTemplate:"{project}/_apis/{area}/{resource}",responseIsCollection:!0,routeValues:{project:n},queryParams:i,apiVersion:this.templatesApiVersion})},t.prototype.getRevertForRefName=function(n,t,r){var u={refName:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"bc866058-5449-4715-9cf1-a510b6ff193c",resource:"Reverts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}",responseType:i.TypeInfo.GitRevert,routeValues:{project:n,repositoryId:t},queryParams:u,apiVersion:this.revertsApiVersion})},t.prototype.getRevert=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"bc866058-5449-4715-9cf1-a510b6ff193c",resource:"Reverts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}",responseType:i.TypeInfo.GitRevert,routeValues:{project:n,revertId:t,repositoryId:r},apiVersion:this.revertsApiVersion})},t.prototype.createRevert=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"bc866058-5449-4715-9cf1-a510b6ff193c",resource:"Reverts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}",requestType:i.TypeInfo.GitAsyncRefOperationParameters,responseType:i.TypeInfo.GitRevert,routeValues:{project:t,repositoryId:r},apiVersion:this.revertsApiVersion,data:n})},t.prototype.getStats=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"616a5255-74b3-40f5-ae1d-bbae2eec8db5",resource:"RepositoryStats",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/stats",routeValues:{project:n,repositoryId:t},apiVersion:this.repositoryStatsApiVersion})},t.prototype.getRefFavorites=function(n,t,r){var u={repositoryId:t,identityId:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"876f70af-5792-485a-a1c7-d0a7b2f42bbb",resource:"refsFavorites",routeTemplate:"{project}/_apis/{area}/favorites/refs/{favoriteId}",responseType:i.TypeInfo.GitRefFavorite,responseIsCollection:!0,routeValues:{project:n},queryParams:u,apiVersion:this.refsFavoritesApiVersion})},t.prototype.getRefFavorite=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"876f70af-5792-485a-a1c7-d0a7b2f42bbb",resource:"refsFavorites",routeTemplate:"{project}/_apis/{area}/favorites/refs/{favoriteId}",responseType:i.TypeInfo.GitRefFavorite,routeValues:{project:n,favoriteId:t},apiVersion:this.refsFavoritesApiVersion})},t.prototype.deleteRefFavorite=function(n,t){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"876f70af-5792-485a-a1c7-d0a7b2f42bbb",resource:"refsFavorites",routeTemplate:"{project}/_apis/{area}/favorites/refs/{favoriteId}",routeValues:{project:n,favoriteId:t},apiVersion:this.refsFavoritesApiVersion})},t.prototype.createFavorite=function(n,t){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"876f70af-5792-485a-a1c7-d0a7b2f42bbb",resource:"refsFavorites",routeTemplate:"{project}/_apis/{area}/favorites/refs/{favoriteId}",requestType:i.TypeInfo.GitRefFavorite,responseType:i.TypeInfo.GitRefFavorite,routeValues:{project:t},apiVersion:this.refsFavoritesApiVersion,data:n})},t.prototype.updateThread=function(n,t,r,u,f){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",resource:"PullRequestThreads",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",requestType:i.TypeInfo.GitPullRequestCommentThread,responseType:i.TypeInfo.GitPullRequestCommentThread,routeValues:{project:f,repositoryId:t,pullRequestId:r,threadId:u},apiVersion:this.pullRequestThreadsApiVersion,data:n})},t.prototype.getThreads=function(n,t,r,u,f){var e={$iteration:u,$baseIteration:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",resource:"PullRequestThreads",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",responseType:i.TypeInfo.GitPullRequestCommentThread,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:e,apiVersion:this.pullRequestThreadsApiVersion})},t.prototype.getPullRequestThread=function(n,t,r,u,f,e){var o={$iteration:f,$baseIteration:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",resource:"PullRequestThreads",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",responseType:i.TypeInfo.GitPullRequestCommentThread,routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:r},queryParams:o,apiVersion:this.pullRequestThreadsApiVersion})},t.prototype.createThread=function(n,t,r,u){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",resource:"PullRequestThreads",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",requestType:i.TypeInfo.GitPullRequestCommentThread,responseType:i.TypeInfo.GitPullRequestCommentThread,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:this.pullRequestThreadsApiVersion,data:n})},t.prototype.updateComment=function(n,t,r,u,f,e){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",resource:"PullRequestThreadComments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",requestType:i.TypeInfo.Comment,responseType:i.TypeInfo.Comment,routeValues:{project:e,repositoryId:t,pullRequestId:r,threadId:u,commentId:f},apiVersion:this.pullRequestThreadCommentsApiVersion,data:n})},t.prototype.getComments=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",resource:"PullRequestThreadComments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",responseType:i.TypeInfo.Comment,responseIsCollection:!0,routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:r},apiVersion:this.pullRequestThreadCommentsApiVersion})},t.prototype.getComment=function(n,t,r,u,f){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",resource:"PullRequestThreadComments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",responseType:i.TypeInfo.Comment,routeValues:{project:f,repositoryId:n,pullRequestId:t,threadId:r,commentId:u},apiVersion:this.pullRequestThreadCommentsApiVersion})},t.prototype.deleteComment=function(n,t,i,r,u){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",resource:"PullRequestThreadComments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r},apiVersion:this.pullRequestThreadCommentsApiVersion})},t.prototype.createComment=function(n,t,r,u,f){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",resource:"PullRequestThreadComments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",requestType:i.TypeInfo.Comment,responseType:i.TypeInfo.Comment,routeValues:{project:f,repositoryId:t,pullRequestId:r,threadId:u},apiVersion:this.pullRequestThreadCommentsApiVersion,data:n})},t.prototype.updatePullRequestStatuses=function(n,t,i,r){return this._beginRequest({httpMethod:"PATCH",httpResponseType:"html",area:"git",locationId:"b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",resource:"PullRequestStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},customHeaders:{"Content-Type":"application/json-patch+json"},apiVersion:this.pullRequestStatusesApiVersion,data:n})},t.prototype.getPullRequestStatuses=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",resource:"PullRequestStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",responseType:i.TypeInfo.GitPullRequestStatus,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestStatusesApiVersion})},t.prototype.getPullRequestStatus=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",resource:"PullRequestStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",responseType:i.TypeInfo.GitPullRequestStatus,routeValues:{project:u,repositoryId:n,pullRequestId:t,statusId:r},apiVersion:this.pullRequestStatusesApiVersion})},t.prototype.deletePullRequestStatus=function(n,t,i,r){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",resource:"PullRequestStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,statusId:i},apiVersion:this.pullRequestStatusesApiVersion})},t.prototype.createPullRequestStatus=function(n,t,r,u){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",resource:"PullRequestStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",requestType:i.TypeInfo.GitPullRequestStatus,responseType:i.TypeInfo.GitPullRequestStatus,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:this.pullRequestStatusesApiVersion,data:n})},t.prototype.getPullRequestQuery=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"b3a6eebe-9cf0-49ea-b6cb-1a4c5f5007b0",resource:"PullRequestQuery",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}",requestType:i.TypeInfo.GitPullRequestQuery,responseType:i.TypeInfo.GitPullRequestQuery,routeValues:{project:r,repositoryId:t},apiVersion:this.pullRequestQueryApiVersion,data:n})},t.prototype.updatePullRequestIterationStatuses=function(n,t,i,r,u){return this._beginRequest({httpMethod:"PATCH",httpResponseType:"html",area:"git",locationId:"75cf11c5-979f-4038-a76e-058a06adf2bf",resource:"PullRequestIterationStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,iterationId:r},customHeaders:{"Content-Type":"application/json-patch+json"},apiVersion:this.pullRequestIterationStatusesApiVersion,data:n})},t.prototype.getPullRequestIterationStatuses=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"75cf11c5-979f-4038-a76e-058a06adf2bf",resource:"PullRequestIterationStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",responseType:i.TypeInfo.GitPullRequestStatus,responseIsCollection:!0,routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:r},apiVersion:this.pullRequestIterationStatusesApiVersion})},t.prototype.getPullRequestIterationStatus=function(n,t,r,u,f){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"75cf11c5-979f-4038-a76e-058a06adf2bf",resource:"PullRequestIterationStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",responseType:i.TypeInfo.GitPullRequestStatus,routeValues:{project:f,repositoryId:n,pullRequestId:t,iterationId:r,statusId:u},apiVersion:this.pullRequestIterationStatusesApiVersion})},t.prototype.deletePullRequestIterationStatus=function(n,t,i,r,u){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"75cf11c5-979f-4038-a76e-058a06adf2bf",resource:"PullRequestIterationStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:i,statusId:r},apiVersion:this.pullRequestIterationStatusesApiVersion})},t.prototype.createPullRequestIterationStatus=function(n,t,r,u,f){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"75cf11c5-979f-4038-a76e-058a06adf2bf",resource:"PullRequestIterationStatuses",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",requestType:i.TypeInfo.GitPullRequestStatus,responseType:i.TypeInfo.GitPullRequestStatus,routeValues:{project:f,repositoryId:t,pullRequestId:r,iterationId:u},apiVersion:this.pullRequestIterationStatusesApiVersion,data:n})},t.prototype.getPullRequestIterations=function(n,t,r,u){var f={includeCommits:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d43911ee-6958-46b0-a42b-8445b8a0d004",resource:"pullRequestIterations",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}",responseType:i.TypeInfo.GitPullRequestIteration,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:f,apiVersion:this.pullRequestIterationsApiVersion})},t.prototype.getPullRequestIteration=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d43911ee-6958-46b0-a42b-8445b8a0d004",resource:"pullRequestIterations",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}",responseType:i.TypeInfo.GitPullRequestIteration,routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:r},apiVersion:this.pullRequestIterationsApiVersion})},t.prototype.getPullRequestIterationChanges=function(n,t,r,u,f,e,o){var s={$top:f,$skip:e,$compareTo:o};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"4216bdcf-b6b1-4d59-8b82-c34cc183fc8b",resource:"PullRequestIterationChanges",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/changes",responseType:i.TypeInfo.GitPullRequestIterationChanges,routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:r},queryParams:s,apiVersion:this.pullRequestIterationChangesApiVersion})},t.prototype.updatePullRequestConflicts=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"d840fb74-bbef-42d3-b250-564604c054a4",resource:"PullRequestConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflictUpdateResult,responseIsCollection:!0,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:this.pullRequestConflictsApiVersion,data:n})},t.prototype.updatePullRequestConflict=function(n,t,r,u,f){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"d840fb74-bbef-42d3-b250-564604c054a4",resource:"PullRequestConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflict,routeValues:{project:f,repositoryId:t,pullRequestId:r,conflictId:u},apiVersion:this.pullRequestConflictsApiVersion,data:n})},t.prototype.getPullRequestConflicts=function(n,t,r,u,f,e,o,s){var h={$skip:u,$top:f,includeObsolete:e,excludeResolved:o,onlyResolved:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d840fb74-bbef-42d3-b250-564604c054a4",resource:"PullRequestConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:this.pullRequestConflictsApiVersion})},t.prototype.getPullRequestConflict=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"d840fb74-bbef-42d3-b250-564604c054a4",resource:"PullRequestConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,routeValues:{project:u,repositoryId:n,pullRequestId:t,conflictId:r},apiVersion:this.pullRequestConflictsApiVersion})},t.prototype.getPullRequestIterationCommits=function(n,t,r,u,f,e){var o={top:f,skip:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"e7ea0883-095f-4926-b5fb-f24691c26fb9",resource:"PullRequestCommits",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/commits",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:r},queryParams:o,apiVersion:this.pullRequestCommitsApiVersion_e7ea0883})},t.prototype.updateImportRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"01828ddc-3600-4a41-8633-99b3a73a0eb3",resource:"ImportRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/importRequests/{importRequestId}",requestType:i.TypeInfo.GitImportRequest,responseType:i.TypeInfo.GitImportRequest,routeValues:{project:t,repositoryId:r,importRequestId:u},apiVersion:this.importRequestsApiVersion,data:n})},t.prototype.queryImportRequests=function(n,t,r){var u={includeAbandoned:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"01828ddc-3600-4a41-8633-99b3a73a0eb3",resource:"ImportRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/importRequests/{importRequestId}",responseType:i.TypeInfo.GitImportRequest,responseIsCollection:!0,routeValues:{project:n,repositoryId:t},queryParams:u,apiVersion:this.importRequestsApiVersion})},t.prototype.getImportRequest=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"01828ddc-3600-4a41-8633-99b3a73a0eb3",resource:"ImportRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/importRequests/{importRequestId}",responseType:i.TypeInfo.GitImportRequest,routeValues:{project:n,repositoryId:t,importRequestId:r},apiVersion:this.importRequestsApiVersion})},t.prototype.createImportRequest=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"01828ddc-3600-4a41-8633-99b3a73a0eb3",resource:"ImportRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/importRequests/{importRequestId}",requestType:i.TypeInfo.GitImportRequest,responseType:i.TypeInfo.GitImportRequest,routeValues:{project:t,repositoryId:r},apiVersion:this.importRequestsApiVersion,data:n})},t.prototype.validateRemoteRepository=function(n,t){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"d8c00958-dedd-491f-93e6-73f3c06f5bba",resource:"ImportRepositoryValidations",routeTemplate:"{project}/_apis/{area}/import/{resource}",routeValues:{project:t},apiVersion:this.importRepositoryValidationsApiVersion,data:n})},t.prototype.getFilePaths=function(n,t,i,r){var u={scopePath:i,versionDescriptor:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"e74b530c-edfa-402b-88e2-8d04671134f7",resource:"FilePaths",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*scopepath}",routeValues:{project:n,repositoryId:t},queryParams:u,apiVersion:this.filePathsApiVersion})},t.prototype.getCherryPickForRefName=function(n,t,r){var u={refName:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"033bad68-9a14-43d1-90e0-59cb8856fef6",resource:"CherryPicks",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}",responseType:i.TypeInfo.GitCherryPick,routeValues:{project:n,repositoryId:t},queryParams:u,apiVersion:this.cherryPicksApiVersion})},t.prototype.getCherryPick=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"033bad68-9a14-43d1-90e0-59cb8856fef6",resource:"CherryPicks",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}",responseType:i.TypeInfo.GitCherryPick,routeValues:{project:n,cherryPickId:t,repositoryId:r},apiVersion:this.cherryPicksApiVersion})},t.prototype.createCherryPick=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"033bad68-9a14-43d1-90e0-59cb8856fef6",resource:"CherryPicks",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}",requestType:i.TypeInfo.GitAsyncRefOperationParameters,responseType:i.TypeInfo.GitCherryPick,routeValues:{project:t,repositoryId:r},apiVersion:this.cherryPicksApiVersion,data:n})},t}(h);t.CommonMethods3To7_2=v;c=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.sharePullRequest=function(n,t,i,r){return this._beginRequest({httpMethod:"POST",httpResponseType:"html",area:"git",locationId:"696f3a82-47c9-487f-9117-b9d00972ca84",resource:"PullRequestShare",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/share",routeValues:{project:r,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestShareApiVersion,data:n})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:this.pullRequestsApiVersion,data:n})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:this.pullRequestsApiVersion})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:this.pullRequestsApiVersion})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:this.pullRequestsApiVersion,data:n})},t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:this.pullRequestsApiVersion_a5d28130})},t.prototype.getPullRequestById=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"01a46dea-7d46-4d40-bc84-319e7c260d99",resource:"pullRequests",routeTemplate:"{project}/_apis/{area}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:t,pullRequestId:n},apiVersion:this.pullRequestsApiVersion_01a46dea})},t.prototype.getAttachmentZip=function(n,t,i,r){return this._beginRequest({httpMethod:"GET",httpResponseType:"application/zip",area:"git",locationId:"965d9361-878b-413b-a494-45d5b5fd8ab7",resource:"PullRequestAttachments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestAttachmentsApiVersion})},t.prototype.getAttachments=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"965d9361-878b-413b-a494-45d5b5fd8ab7",resource:"PullRequestAttachments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",responseType:i.TypeInfo.Attachment,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestAttachmentsApiVersion})},t.prototype.getAttachmentContent=function(n,t,i,r){return this._beginRequest({httpMethod:"GET",httpResponseType:"application/octet-stream",area:"git",locationId:"965d9361-878b-413b-a494-45d5b5fd8ab7",resource:"PullRequestAttachments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestAttachmentsApiVersion})},t.prototype.deleteAttachment=function(n,t,i,r){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"965d9361-878b-413b-a494-45d5b5fd8ab7",resource:"PullRequestAttachments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i},apiVersion:this.pullRequestAttachmentsApiVersion})},t.prototype.createAttachment=function(n,t,r,u,f){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"965d9361-878b-413b-a494-45d5b5fd8ab7",resource:"PullRequestAttachments",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",responseType:i.TypeInfo.Attachment,routeValues:{project:f,fileName:t,repositoryId:r,pullRequestId:u},customHeaders:{"Content-Type":"application/octet-stream"},apiVersion:this.pullRequestAttachmentsApiVersion,data:n,isRawData:!0})},t.prototype.getAnnotatedTag=function(n,t,r){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5e8a8081-3851-4626-b677-9891cc04102e",resource:"annotatedTags",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{objectId}",responseType:i.TypeInfo.GitAnnotatedTag,routeValues:{project:n,repositoryId:t,objectId:r},apiVersion:this.annotatedTagsApiVersion})},t.prototype.createAnnotatedTag=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"5e8a8081-3851-4626-b677-9891cc04102e",resource:"annotatedTags",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{objectId}",requestType:i.TypeInfo.GitAnnotatedTag,responseType:i.TypeInfo.GitAnnotatedTag,routeValues:{project:t,repositoryId:r},apiVersion:this.annotatedTagsApiVersion,data:n})},t}(v);t.CommonMethods3_1To7_2=c;y=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getPullRequestLabels=function(n,t,i,r){var u={projectId:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"f22387e3-984e-4c52-9c6d-fbb8f14c812d",resource:"PullRequestLabels",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",responseIsCollection:!0,routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:u,apiVersion:this.pullRequestLabelsApiVersion})},t.prototype.getPullRequestLabel=function(n,t,i,r,u){var f={projectId:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"f22387e3-984e-4c52-9c6d-fbb8f14c812d",resource:"PullRequestLabels",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:n,pullRequestId:t,labelIdOrName:i},queryParams:f,apiVersion:this.pullRequestLabelsApiVersion})},t.prototype.deletePullRequestLabels=function(n,t,i,r,u){var f={projectId:u};return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"f22387e3-984e-4c52-9c6d-fbb8f14c812d",resource:"PullRequestLabels",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:n,pullRequestId:t,labelIdOrName:i},queryParams:f,apiVersion:this.pullRequestLabelsApiVersion})},t.prototype.createPullRequestLabel=function(n,t,i,r,u){var f={projectId:u};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"f22387e3-984e-4c52-9c6d-fbb8f14c812d",resource:"PullRequestLabels",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:t,pullRequestId:i},queryParams:f,apiVersion:this.pullRequestLabelsApiVersion,data:n})},t.prototype.getLikes=function(n,t,i,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5f2e2851-1389-425b-a00b-fb2adb3ef31b",resource:"PullRequestCommentLikes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",responseIsCollection:!0,routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r},apiVersion:this.pullRequestCommentLikesApiVersion})},t.prototype.deleteLike=function(n,t,i,r,u){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"5f2e2851-1389-425b-a00b-fb2adb3ef31b",resource:"PullRequestCommentLikes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r},apiVersion:this.pullRequestCommentLikesApiVersion})},t.prototype.createLike=function(n,t,i,r,u){return this._beginRequest({httpMethod:"POST",httpResponseType:"html",area:"git",locationId:"5f2e2851-1389-425b-a00b-fb2adb3ef31b",resource:"PullRequestCommentLikes",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r},apiVersion:this.pullRequestCommentLikesApiVersion})},t.prototype.getForkSyncRequests=function(n,t,r,u){var f={includeAbandoned:r,includeLinks:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"1703f858-b9d1-46af-ab62-483e9e1055b5",resource:"forkSyncRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",responseType:i.TypeInfo.GitForkSyncRequest,responseIsCollection:!0,routeValues:{project:t,repositoryNameOrId:n},queryParams:f,apiVersion:this.forkSyncRequestsApiVersion})},t.prototype.getForkSyncRequest=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"1703f858-b9d1-46af-ab62-483e9e1055b5",resource:"forkSyncRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",responseType:i.TypeInfo.GitForkSyncRequest,routeValues:{project:r,repositoryNameOrId:n,forkSyncOperationId:t},queryParams:f,apiVersion:this.forkSyncRequestsApiVersion})},t.prototype.createForkSyncRequest=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"1703f858-b9d1-46af-ab62-483e9e1055b5",resource:"forkSyncRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",responseType:i.TypeInfo.GitForkSyncRequest,routeValues:{project:r,repositoryNameOrId:t},queryParams:f,apiVersion:this.forkSyncRequestsApiVersion,data:n})},t.prototype.getForks=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"158c0340-bf6f-489c-9625-d572a1480d57",resource:"forks",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/forks/{collectionId}",responseType:i.TypeInfo.GitRepositoryRef,responseIsCollection:!0,routeValues:{project:r,repositoryNameOrId:n,collectionId:t},queryParams:f,apiVersion:this.forksApiVersion})},t}(c);t.CommonMethods4To7_2=y;p=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.restoreRepositoryFromRecycleBin=function(n,t,r){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"a663da97-81db-4eb3-8b83-287670f63073",resource:"RecycleBinRepositories",routeTemplate:"{project}/_apis/{area}/recycleBin/repositories/{repositoryId}",responseType:i.TypeInfo.GitRepository,routeValues:{project:t,repositoryId:r},apiVersion:this.recycleBinRepositoriesApiVersion,data:n})},t.prototype.getRecycleBinRepositories=function(n){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a663da97-81db-4eb3-8b83-287670f63073",resource:"RecycleBinRepositories",routeTemplate:"{project}/_apis/{area}/recycleBin/repositories/{repositoryId}",responseType:i.TypeInfo.GitDeletedRepository,responseIsCollection:!0,routeValues:{project:n},apiVersion:this.recycleBinRepositoriesApiVersion})},t.prototype.deleteRepositoryFromRecycleBin=function(n,t){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"a663da97-81db-4eb3-8b83-287670f63073",resource:"RecycleBinRepositories",routeTemplate:"{project}/_apis/{area}/recycleBin/repositories/{repositoryId}",routeValues:{project:n,repositoryId:t},apiVersion:this.recycleBinRepositoriesApiVersion})},t.prototype.updatePullRequestProperties=function(n,t,i,r){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"48a52185-5b9e-4736-9dc1-bb1e2feac80b",resource:"PullRequestProperties",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",routeValues:{project:r,repositoryId:t,pullRequestId:i},customHeaders:{"Content-Type":"application/json-patch+json"},apiVersion:this.pullRequestPropertiesApiVersion,data:n})},t.prototype.getPullRequestProperties=function(n,t,i){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"48a52185-5b9e-4736-9dc1-bb1e2feac80b",resource:"PullRequestProperties",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",routeValues:{project:i,repositoryId:n,pullRequestId:t},apiVersion:this.pullRequestPropertiesApiVersion})},t.prototype.getMergeBases=function(n,t,r,u,f,e){var o={otherCommitId:r,otherCollectionId:f,otherRepositoryId:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"7cf2abb6-c964-4f7e-9872-f78c66e72e9c",resource:"mergeBases",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/commits/{commitId}/{resource}",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:u,repositoryNameOrId:n,commitId:t},queryParams:o,apiVersion:this.mergeBasesApiVersion})},t.prototype.getCherryPickRelationships=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"8af142a4-27c2-4168-9e82-46b8629aaa0d",resource:"cherryPickRelationships",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/{resource}/{commitId}",responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0,routeValues:{project:r,repositoryNameOrId:n,commitId:t},queryParams:f,apiVersion:this.cherryPickRelationshipsApiVersion})},t}(y);t.CommonMethods4_1To7_2=p;o=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getPolicyConfigurations=function(n,t,i,u,f,e){var o={repositoryId:t,refName:i,policyType:u,$top:f,continuationToken:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"2c420070-a0a2-49cc-9639-c9f271c5ff07",resource:"PolicyConfigurations",routeTemplate:"{project}/_apis/{area}/policy/configurations",responseType:r.TypeInfo.PolicyConfiguration,responseIsCollection:!0,routeValues:{project:n},queryParams:o,apiVersion:this.policyConfigurationsApiVersion},!0).then(function(n){var t=n[0],r=n[1],i=n[2];return{policyConfigurations:t,continuationToken:i.getResponseHeader("x-ms-continuationtoken")}})},t.prototype.getMergeRequest=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"985f7ae9-844f-4906-9897-7ef41516c0e2",resource:"merges",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/merges/{mergeOperationId}",responseType:i.TypeInfo.GitMerge,routeValues:{project:n,repositoryNameOrId:t,mergeOperationId:r},queryParams:f,apiVersion:this.mergesApiVersion})},t.prototype.createMergeRequest=function(n,t,r,u){var f={includeLinks:u};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"985f7ae9-844f-4906-9897-7ef41516c0e2",resource:"merges",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryNameOrId}/merges/{mergeOperationId}",responseType:i.TypeInfo.GitMerge,routeValues:{project:t,repositoryNameOrId:r},queryParams:f,apiVersion:this.mergesApiVersion,data:n})},t.prototype.getFileDiffs=function(n,t,r){return this._beginRequest({httpMethod:"POST",area:"git",locationId:"c4c5a7e6-e9f3-4730-a92b-84baacff694b",resource:"FileDiffs",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}",responseType:i.TypeInfo.FileDiff,responseIsCollection:!0,routeValues:{project:t,repositoryId:r},apiVersion:this.fileDiffsApiVersion,data:n})},t}(p);t.CommonMethods5To7_2=o;s=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.updateRevertConflicts=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"10d7ae6d-1050-446d-852a-bd5d99f834bf",resource:"RevertConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflictUpdateResult,responseIsCollection:!0,routeValues:{project:u,repositoryId:t,revertId:r},apiVersion:this.revertConflictsApiVersion,data:n})},t.prototype.updateRevertConflict=function(n,t,r,u,f){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"10d7ae6d-1050-446d-852a-bd5d99f834bf",resource:"RevertConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflict,routeValues:{project:f,repositoryId:t,revertId:r,conflictId:u},apiVersion:this.revertConflictsApiVersion,data:n})},t.prototype.getRevertConflicts=function(n,t,r,u,f,e,o,s){var h={continuationToken:u,$top:f,excludeResolved:e,onlyResolved:o,includeObsolete:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"10d7ae6d-1050-446d-852a-bd5d99f834bf",resource:"RevertConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,revertId:t},queryParams:h,apiVersion:this.revertConflictsApiVersion})},t.prototype.getRevertConflict=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"10d7ae6d-1050-446d-852a-bd5d99f834bf",resource:"RevertConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/reverts/{revertId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,routeValues:{project:u,repositoryId:n,revertId:t,conflictId:r},apiVersion:this.revertConflictsApiVersion})},t.prototype.updateCherryPickConflicts=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",resource:"CherryPickConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflictUpdateResult,responseIsCollection:!0,routeValues:{project:u,repositoryId:t,cherryPickId:r},apiVersion:this.cherryPickConflictsApiVersion,data:n})},t.prototype.updateCherryPickConflict=function(n,t,r,u,f){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",resource:"CherryPickConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}/conflicts/{conflictId}",requestType:i.TypeInfo.GitConflict,responseType:i.TypeInfo.GitConflict,routeValues:{project:f,repositoryId:t,cherryPickId:r,conflictId:u},apiVersion:this.cherryPickConflictsApiVersion,data:n})},t.prototype.getCherryPickConflicts=function(n,t,r,u,f,e,o,s){var h={continuationToken:u,$top:f,excludeResolved:e,onlyResolved:o,includeObsolete:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",resource:"CherryPickConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,responseIsCollection:!0,routeValues:{project:r,repositoryId:n,cherryPickId:t},queryParams:h,apiVersion:this.cherryPickConflictsApiVersion})},t.prototype.getCherryPickConflict=function(n,t,r,u){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",resource:"CherryPickConflicts",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/cherryPicks/{cherryPickId}/conflicts/{conflictId}",responseType:i.TypeInfo.GitConflict,routeValues:{project:u,repositoryId:n,cherryPickId:t,conflictId:r},apiVersion:this.cherryPickConflictsApiVersion})},t}(o);t.CommonMethods6To7_2=s;w=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t.prototype.getBillableCommittersDetail=function(n,t,r){var u={$includeDetails:t,$billingDate:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5c5e3ebc-37b0-4547-a957-945912d44922",resource:"billableCommitters",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.BillableCommitterDetail,responseIsCollection:!0,routeValues:{project:n},queryParams:u,apiVersion:this.billableCommittersApiVersion})},t.prototype.getBillableCommitters=function(n,t,i,r){var u={$billingDate:t,$skip:i,$take:r};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5c5e3ebc-37b0-4547-a957-945912d44922",resource:"billableCommitters",routeTemplate:"{project}/_apis/{area}/{resource}",responseIsCollection:!0,routeValues:{project:n},queryParams:u,apiVersion:this.billableCommittersApiVersion})},t.prototype.getPermission=function(n,t,i){var r={$projectName:n,$repositoryId:t,$permission:i};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"61b21a05-a60f-4910-a733-ba5347c2142d",resource:"advsecPermissions",routeTemplate:"_apis/{area}/{resource}",queryParams:r,apiVersion:this.advsecPermissionsApiVersion})},t.prototype.updateEnablementStatus=function(n){return this._beginRequest({httpMethod:"POST",httpResponseType:"html",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",apiVersion:this.advsecEnablementApiVersion,data:n})},t.prototype.setEnableOnCreateProject=function(n,t){var i={$enableOnCreateProjectId:n,$enableOnStatus:t};return this._beginRequest({httpMethod:"PUT",httpResponseType:"html",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",queryParams:i,apiVersion:this.advsecEnablementApiVersion})},t.prototype.setEnableOnCreateHost=function(n){var t={$enableOnCreateHost:n};return this._beginRequest({httpMethod:"PUT",httpResponseType:"html",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",queryParams:t,apiVersion:this.advsecEnablementApiVersion})},t.prototype.getEnableOnCreateProject=function(n){var t={$enableOnCreateProjectId:n};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",queryParams:t,apiVersion:this.advsecEnablementApiVersion})},t.prototype.getEnableOnCreateHost=function(n){var t={$enableOnCreateHost:n};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",queryParams:t,apiVersion:this.advsecEnablementApiVersion})},t.prototype.getEnablementStatus=function(n,t,r,u){var f={projectIds:n,$billingDate:t,$skip:r,$take:u};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",responseType:i.TypeInfo.AdvSecEnablementStatus,responseIsCollection:!0,queryParams:f,apiVersion:this.advsecEnablementApiVersion})},t.prototype.deleteEnablementStatus=function(n,t,i){var r={$allProjects:n,$includeBillableCommitters:t,projectIds:i};return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:"git",locationId:"b43dd56f-a1b4-47a5-a857-73fc1b6c700c",resource:"advsecEnablement",routeTemplate:"_apis/{area}/{resource}",queryParams:r,apiVersion:this.advsecEnablementApiVersion})},t}(s);t.CommonMethods7_1To7_2=w;b=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.advsecEnablementApiVersion=r.advsecPermissionsApiVersion=r.annotatedTagsApiVersion=r.billableCommittersApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickConflictsApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertConflictsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="7.2-preview.1",r.pullRequestIterationsApiVersion=r.pushesApiVersion="7.2-preview.2",r}return __extends(t,n),t.prototype.getEstimatedBillablePushersOrg=function(){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"2277ffbe-28d4-40d6-9c26-40baf26d1408",resource:"advsecEstimateOrg",routeTemplate:"_apis/{area}/advsecEstimate",responseIsCollection:!0,apiVersion:"7.2-preview.1"})},t.prototype.getEstimatedBillablePushersProject=function(n){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"1df7833e-1eed-447b-81a3-390c74923900",resource:"advsecEstimateProject",routeTemplate:"{project}/_apis/{area}/advsecEstimate",responseIsCollection:!0,routeValues:{project:n},apiVersion:"7.2-preview.1"})},t.prototype.getEstimatedBillableCommittersRepo=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"5dcec07b-a844-4efb-9fc1-968fd1f149db",resource:"advsecEstimateRepo",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/advsecEstimate",responseIsCollection:!0,routeValues:{project:n,repositoryId:t},apiVersion:"7.2-preview.1"})},t.prototype.getRefFavoritesForProject=function(n,t){var r={identityId:t};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"4720896c-594c-4a6d-b94c-12eddd80b34a",resource:"refsFavoritesForProject",routeTemplate:"{project}/_apis/{area}/favorites/refsForProject",responseType:i.TypeInfo.GitRefFavorite,responseIsCollection:!0,routeValues:{project:n},queryParams:r,apiVersion:"7.2-preview.1"})},t}(w);t.GitHttpClient7_2=b;k=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickConflictsApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertConflictsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="7.1",r.advsecEnablementApiVersion=r.advsecPermissionsApiVersion=r.billableCommittersApiVersion="7.1-preview.1",r}return __extends(t,n),t}(w);t.GitHttpClient7_1=k;d=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickConflictsApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertConflictsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="7.0",r}return __extends(t,n),t}(s);t.GitHttpClient7=d;g=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickConflictsApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertConflictsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="6.1",r}return __extends(t,n),t}(s);t.GitHttpClient6_1=g;nt=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickConflictsApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertConflictsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="6.0",r}return __extends(t,n),t}(s);t.GitHttpClient6=nt;tt=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="5.2",r}return __extends(t,n),t}(o);t.GitHttpClient5_2=tt;it=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="5.1",r}return __extends(t,n),t}(o);t.GitHttpClient5_1=it;rt=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.fileDiffsApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.mergesApiVersion=r.policyConfigurationsApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="5.0",r}return __extends(t,n),t}(o);t.GitHttpClient5=rt;ut=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPickRelationshipsApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.mergeBasesApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestPropertiesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.recycleBinRepositoriesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="4.1",r}return __extends(t,n),t}(p);t.GitHttpClient4_1=ut;ft=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.filePathsApiVersion=r.forksApiVersion=r.forkSyncRequestsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommentLikesApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestLabelsApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="4.0",r}return __extends(t,n),t}(y);t.GitHttpClient4=ft;et=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.filePathsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="3.2",r}return __extends(t,n),t}(c);t.GitHttpClient3_2=et;ot=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.annotatedTagsApiVersion=r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.filePathsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestAttachmentsApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestsApiVersion=r.pullRequestsApiVersion_a5d28130=r.pullRequestsApiVersion_01a46dea=r.pullRequestShareApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="3.1",r}return __extends(t,n),t}(c);t.GitHttpClient3_1=ot;st=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.cherryPicksApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.filePathsApiVersion=r.importRepositoryValidationsApiVersion=r.importRequestsApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestCommitsApiVersion_e7ea0883=r.pullRequestConflictsApiVersion=r.pullRequestIterationChangesApiVersion=r.pullRequestIterationsApiVersion=r.pullRequestIterationStatusesApiVersion=r.pullRequestQueryApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestStatusesApiVersion=r.pullRequestThreadCommentsApiVersion=r.pullRequestThreadsApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.refsFavoritesApiVersion=r.repositoriesApiVersion=r.repositoryStatsApiVersion=r.revertsApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.templatesApiVersion=r.treeDiffsApiVersion=r.treesApiVersion="3.0",r}return __extends(t,n),t.prototype.getPullRequestById=function(n,t){return this._beginRequest({httpMethod:"GET",area:"git",locationId:"01a46dea-7d46-4d40-bc84-319e7c260d99",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:t,pullRequestId:n},apiVersion:"3.0"})},t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:"3.0"})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:"3.0",data:n})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:"3.0"})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:"3.0"})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:"3.0",data:n})},t}(v);t.GitHttpClient3=st;ht=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.repositoriesApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.treesApiVersion="2.3",r}return __extends(t,n),t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:"2.3"})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:"2.3",data:n})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:"2.3"})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:"2.3"})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:"2.3",data:n})},t}(h);t.GitHttpClient2_3=ht;ct=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.deletedRepositoriesApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.repositoriesApiVersion=r.statusesApiVersion=r.suggestionsApiVersion=r.treesApiVersion="2.2",r}return __extends(t,n),t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:"2.2"})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:"2.2",data:n})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:"2.2"})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:"2.2"})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:"2.2",data:n})},t}(h);t.GitHttpClient2_2=ct;lt=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestCommitsApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.repositoriesApiVersion=r.statusesApiVersion=r.treesApiVersion="2.1",r}return __extends(t,n),t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:"2.1"})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:"2.1",data:n})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:"2.1"})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:"2.1"})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:"2.1",data:n})},t}(a);t.GitHttpClient2_1=lt;at=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.blobsApiVersion=r.branchStatsApiVersion=r.changesApiVersion=r.commitDiffsApiVersion=r.commitsApiVersion=r.commitsBatchApiVersion=r.itemsApiVersion=r.itemsBatchApiVersion=r.pullRequestReviewersApiVersion=r.pullRequestWorkItemsApiVersion=r.pushesApiVersion=r.refsApiVersion=r.repositoriesApiVersion=r.treesApiVersion="2.0",r}return __extends(t,n),t.prototype.getPullRequestsByProject=function(n,t,r,u,f){var e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"a5d28130-9cd2-40fa-9f08-902e7daa9efb",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/{resource}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:n},queryParams:e,apiVersion:"2.0"})},t.prototype.createPullRequest=function(n,t,r,u,f,e){var o={linkBranchWorkItems:u,linkCommitWorkItems:f,supportsIterations:e};return this._beginRequest({httpMethod:"POST",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:t},queryParams:o,apiVersion:"2.0",data:n})},t.prototype.getPullRequest=function(n,t,r,u,f,e,o,s){var h={maxCommentLength:u,$skip:f,$top:e,includeCommits:o,includeWorkItemRefs:s};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,routeValues:{project:r,repositoryId:n,pullRequestId:t},queryParams:h,apiVersion:"2.0"})},t.prototype.getPullRequests=function(n,t,r,u,f,e){var o={searchCriteria:t,maxCommentLength:u,$skip:f,$top:e};return this._beginRequest({httpMethod:"GET",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0,routeValues:{project:r,repositoryId:n},queryParams:o,apiVersion:"2.0"})},t.prototype.updatePullRequest=function(n,t,r,u){return this._beginRequest({httpMethod:"PATCH",area:"git",locationId:"9946fd70-0d40-406e-b686-b4744cbbcc37",resource:"PullRequests",routeTemplate:"{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{pullRequestId}",requestType:i.TypeInfo.GitPullRequest,responseType:i.TypeInfo.GitPullRequest,routeValues:{project:u,repositoryId:t,pullRequestId:r},apiVersion:"2.0",data:n})},t}(l);t.GitHttpClient2=at;yt=function(n){function t(t,i){return n.call(this,t,i)||this}return __extends(t,n),t}(b);t.GitHttpClient=yt;vt={"7.2":b,"7.1":k,"7.0":d,"6.1":g,"6.0":nt,"5.2":tt,"5.1":it,"5.0":rt,"4.1":ut,"4.0":ft,"3.2":et,"3.1":ot,"3.0":st,"2.3":ht,"2.2":ct,"2.1":lt,"2.0":at};t.getClient=pt});

define("VersionControl/Scenarios/History/HistoryPushesRoutes",["require","exports"],function(n,t){var i;Object.defineProperty(t,"__esModule",{value:!0});t.PushesHubRoutes=t.CommitsHubRoutes=void 0;i=function(){function n(){}return n.commitsRoute="commits",n.commitsSearchRouteParam="_search",n.contributionId="ms.vss-code-web.commits-hub",n}();t.CommitsHubRoutes=i;var r="ms.vss-code-web.pushes-hub",u="pushes",f=function(){function n(){}return n.pushesRoute=u,n.pushRoute=u,n.contributionId=r,n.pushViewHubId=r,n}();t.PushesHubRoutes=f});

define("VersionControl/Scripts/Controls/ControlsCommon",["require","exports","VSS/Navigation/Services"],function(n,t,i){function s(n,t,r,u){var e={},o=i.getHistoryService(),f=o.getCurrentState();return f&&(f.ss?e.ss=f.ss:f.cs?e.cs=f.cs:f.commitId&&(e.commitId=f.commitId),f.repository&&(e.repository=f.repository),f.fullScreen&&(e.fullScreen=f.fullScreen)),typeof t!="undefined"&&t!==null&&(e.path=t),typeof r!="undefined"&&r!==null&&(e.version=r),u&&(e=$.extend(e,u)),o.getFragmentActionLink(n,e)}function h(n){return n&&n.navigation?!!n.navigation.project:!1}var r,u,f,e,o;Object.defineProperty(t,"__esModule",{value:!0});t.hasProjectContext=t.getFragmentAction=t.DiscussionExtensionActionIds=t.ConfigurerExtensionActionIds=t.VersionControlExtensionActionIds=t.VersionControlExtensionEndPoints=t.VersionControlActionIds=void 0,function(n){function r(n,r){var u=r?i:t;return u.indexOf(n)>=0}function u(t){return t!==n.Compare&&t!==n.Annotate}function f(t){return t.toLowerCase().indexOf(n.DiffParent)===0}function e(t){return t===n.HighlightChanges||t===n.Compare}n.Commits="commits";n.CommitsRemoved="commitsremoved";n.Contents="contents";n.Compare="compare";n.Default="";n.History="history";n.Summary="summary";n.Updates="updates";n.DiffParent="diffparent";n.Annotate="annotate";n.Readme="readme";n.Preview="preview";n.HighlightChanges="diffedit";var t=[n.Contents,n.History,n.Compare,n.Annotate,n.Preview],i=[n.Contents,n.History,n.Readme];n.explorerSupports=r;n.supportsFolders=u;n.isDiffParentActionId=f;n.isCompareAction=e}(r=t.VersionControlActionIds||(t.VersionControlActionIds={})),function(n){n.FILE_VIEWER="tfs.source-control.file-viewer";n.DIFF_VIEWER="tfs.source-control.diff-viewer";n.VIEWER_CONFIGURER="tfs.source-control.viewer-configurer"}(u=t.VersionControlExtensionEndPoints||(t.VersionControlExtensionEndPoints={})),function(n){n.GET_FILE_CONTENT="vc-get-content";n.NEXT_DIFFERENCE="vc-next-diff";n.PREVIOUS_DIFFERENCE="vc-prev-diff";n.NAVIGATE_TO_POSITION="vc-navigate-to-position";n.UPDATE_DIFF_STATUS="vc-update-diff-status";n.UPDATE_DIFF_LINES="vc-update-diff-lines";n.GET_EDITOR_CONTENT="vc-get-editor-content";n.RESET_EDITOR_DIFF_CONTENT="vc-reset-editor-diff-content";n.EDITOR_CONTENT_CHANGED="vc-editor-content-changed";n.EDITOR_DIRTY_STATE_CHANGED="vc-editor-dirty-state-changed";n.GET_SCROLL_POSITION="vc-editor-get-scroll-position";n.SET_SCROLL_POSITION="vc-editor-set-scroll-position";n.SCROLL_POSITION_CHANGED="vc-editor-scroll-position-changed";n.GET_SELECTION="vc-editor-get-selection";n.SELECTION_CHANGED="vc-editor-selection-changed";n.REFRESH_LAYOUT="vc-editor-refresh-layout";n.DISCUSSION_THREAD_UPDATED="vc-discussion-thread-updated";n.EDITOR_KEY_PRESSED="vc-editor-key-pressed";n.EDITOR_CONTEXT_MENU_ITEM_CLICKED="vc-editor-context-menu-item-clicked";n.EDITOR_ADD_CONTEXT_MENU_ITEM="vc-editor-add-context-menu-item";n.EDITOR_CREATED="vc-editor-created";n.EDITOR_ESCAPE_EDIT="vc-editor-escape-edit";n.EDITOR_PREFERENCES_CHANGED="vc-editor-preferences-changed"}(f=t.VersionControlExtensionActionIds||(t.VersionControlExtensionActionIds={})),function(n){n.UPDATE_EDITOR_CONFIG="vc-configurer-update-editor-config"}(e=t.ConfigurerExtensionActionIds||(t.ConfigurerExtensionActionIds={})),function(n){n.CREATE_THREAD="discussion-create-thread";n.CREATE_COMMENT="discussion-create-comment";n.UPDATE_COMMENT="discussion-update-comment";n.SAVE_COMMENT="discussion-save-comment";n.DELETE_COMMENT="discussion-delete-comment";n.SET_SELECTED_THREAD="discussion-thread-selected";n.CREATE_WORK_ITEM="discussion-create-work-item";n.GET_WORK_ITEM_TYPES="discussion-get-work-item-types";n.UPDATE_DISCUSSION="discussion-update-discussion"}(o=t.DiscussionExtensionActionIds||(t.DiscussionExtensionActionIds={}));t.getFragmentAction=s;t.hasProjectContext=h});

define("VersionControl/Scripts/Generated/TFS.VersionControl.Legacy.Contracts",["require","exports"],function(n,t){"use strict";var i,r,u,f;Object.defineProperty(t,"__esModule",{value:!0});t.TypeInfo=t.VersionControlRecursionType=t.VersionControlChangeType=t.GitObjectType=t.FileDiffBlockChangeType=void 0,function(n){n[n.None=0]="None";n[n.Add=1]="Add";n[n.Delete=2]="Delete";n[n.Edit=3]="Edit"}(i=t.FileDiffBlockChangeType||(t.FileDiffBlockChangeType={})),function(n){n[n.Bad=0]="Bad";n[n.Commit=1]="Commit";n[n.Tree=2]="Tree";n[n.Blob=3]="Blob";n[n.Tag=4]="Tag";n[n.Ext2=5]="Ext2";n[n.OfsDelta=6]="OfsDelta";n[n.RefDelta=7]="RefDelta"}(r=t.GitObjectType||(t.GitObjectType={})),function(n){n[n.None=0]="None";n[n.Add=1]="Add";n[n.Edit=2]="Edit";n[n.Encoding=4]="Encoding";n[n.Rename=8]="Rename";n[n.Delete=16]="Delete";n[n.Undelete=32]="Undelete";n[n.Branch=64]="Branch";n[n.Merge=128]="Merge";n[n.Lock=256]="Lock";n[n.Rollback=512]="Rollback";n[n.SourceRename=1024]="SourceRename";n[n.TargetRename=2048]="TargetRename";n[n.Property=4096]="Property";n[n.All=8191]="All"}(u=t.VersionControlChangeType||(t.VersionControlChangeType={})),function(n){n[n.None=0]="None";n[n.OneLevel=1]="OneLevel";n[n.OneLevelPlusNestedEmptyFolders=4]="OneLevelPlusNestedEmptyFolders";n[n.Full=2]="Full"}(f=t.VersionControlRecursionType||(t.VersionControlRecursionType={}));t.TypeInfo={AuthorCounts:{},Change:{},ChangeList:{},ChangeQueryResults:{},FileCharDiffBlock:{},FileDiff:{},FileDiffBlock:{},FileDiffBlockChangeType:{enumValues:{none:0,add:1,"delete":2,edit:3}},GitAnnotateBatchResult:{},GitAnnotateResult:{},GitBranchDiff:{},GitChange:{},GitCommit:{},GitHistoryQueryResults:{},GitIdentityReference:{},GitItem:{},GitItemMetadata:{},GitObjectType:{enumValues:{bad:0,commit:1,tree:2,blob:3,tag:4,ext2:5,ofsDelta:6,refDelta:7}},GitSubmoduleItem:{},HistoryEntry:{},HistoryQueryResults:{},ItemDetailsOptions:{},ItemModel:{},TfsChange:{},TfsChangeList:{},TfsHistoryEntry:{},TfsItem:{},VersionControlChangeType:{enumValues:{none:0,add:1,edit:2,encoding:4,rename:8,"delete":16,undelete:32,branch:64,merge:128,lock:256,rollback:512,sourceRename:1024,targetRename:2048,property:4096,all:8191}},VersionControlRecursionType:{enumValues:{none:0,oneLevel:1,oneLevelPlusNestedEmptyFolders:4,full:2}}};t.TypeInfo.AuthorCounts.fields={lastChangeDate:{isDate:!0}};t.TypeInfo.Change.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},item:{typeInfo:t.TypeInfo.ItemModel}};t.TypeInfo.ChangeList.fields={changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},changes:{isArray:!0,typeInfo:t.TypeInfo.Change},creationDate:{isDate:!0},sortDate:{isDate:!0}};t.TypeInfo.ChangeQueryResults.fields={changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},results:{isArray:!0,typeInfo:t.TypeInfo.Change}};t.TypeInfo.FileCharDiffBlock.fields={charChange:{isArray:!0,typeInfo:t.TypeInfo.FileDiffBlock},lineChange:{typeInfo:t.TypeInfo.FileDiffBlock}};t.TypeInfo.FileDiff.fields={blocks:{isArray:!0,typeInfo:t.TypeInfo.FileDiffBlock},lineCharBlocks:{isArray:!0,typeInfo:t.TypeInfo.FileCharDiffBlock},modifiedFile:{typeInfo:t.TypeInfo.ItemModel},originalFile:{typeInfo:t.TypeInfo.ItemModel}};t.TypeInfo.FileDiffBlock.fields={changeType:{enumType:t.TypeInfo.FileDiffBlockChangeType}};t.TypeInfo.GitAnnotateBatchResult.fields={diffs:{isArray:!0,typeInfo:t.TypeInfo.GitAnnotateResult}};t.TypeInfo.GitAnnotateResult.fields={diff:{typeInfo:t.TypeInfo.FileDiff}};t.TypeInfo.GitBranchDiff.fields={commit:{typeInfo:t.TypeInfo.GitCommit}};t.TypeInfo.GitChange.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},item:{typeInfo:t.TypeInfo.ItemModel}};t.TypeInfo.GitCommit.fields={author:{typeInfo:t.TypeInfo.GitIdentityReference},changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},changes:{isArray:!0,typeInfo:t.TypeInfo.Change},committer:{typeInfo:t.TypeInfo.GitIdentityReference},commitTime:{isDate:!0},creationDate:{isDate:!0},pushTime:{isDate:!0},sortDate:{isDate:!0},tree:{typeInfo:t.TypeInfo.GitItem}};t.TypeInfo.GitHistoryQueryResults.fields={results:{isArray:!0,typeInfo:t.TypeInfo.HistoryEntry}};t.TypeInfo.GitIdentityReference.fields={date:{isDate:!0}};t.TypeInfo.GitItem.fields={changeDate:{isDate:!0},childItems:{isArray:!0,typeInfo:t.TypeInfo.ItemModel},gitObjectType:{enumType:t.TypeInfo.GitObjectType}};t.TypeInfo.GitItemMetadata.fields={item:{typeInfo:t.TypeInfo.GitItem}};t.TypeInfo.GitSubmoduleItem.fields={changeDate:{isDate:!0},childItems:{isArray:!0,typeInfo:t.TypeInfo.ItemModel},gitObjectType:{enumType:t.TypeInfo.GitObjectType}};t.TypeInfo.HistoryEntry.fields={changeList:{typeInfo:t.TypeInfo.ChangeList},itemChangeType:{enumType:t.TypeInfo.VersionControlChangeType}};t.TypeInfo.HistoryQueryResults.fields={results:{isArray:!0,typeInfo:t.TypeInfo.HistoryEntry}};t.TypeInfo.ItemDetailsOptions.fields={recursionLevel:{enumType:t.TypeInfo.VersionControlRecursionType}};t.TypeInfo.ItemModel.fields={changeDate:{isDate:!0},childItems:{isArray:!0,typeInfo:t.TypeInfo.ItemModel}};t.TypeInfo.TfsChange.fields={changeType:{enumType:t.TypeInfo.VersionControlChangeType},item:{typeInfo:t.TypeInfo.ItemModel}};t.TypeInfo.TfsChangeList.fields={changeCounts:{isDictionary:!0,dictionaryKeyEnumType:t.TypeInfo.VersionControlChangeType},changes:{isArray:!0,typeInfo:t.TypeInfo.Change},creationDate:{isDate:!0},sortDate:{isDate:!0}};t.TypeInfo.TfsHistoryEntry.fields={changeList:{typeInfo:t.TypeInfo.ChangeList},itemChangeType:{enumType:t.TypeInfo.VersionControlChangeType}};t.TypeInfo.TfsItem.fields={changeDate:{isDate:!0},childItems:{isArray:!0,typeInfo:t.TypeInfo.ItemModel}}});

define("VersionControl/Scripts/Resources/TFS.Resources.VersionControl",["require","exports"],function(require,exports){var e=exports;e.HistoryList_MessageColumnHeader="Message";e.NoDiscussionComments="No discussion comments";e.InlineDiffText="Inline diff";e.ModalDialogCreatingButton="Creating...";e.EmptyGitRepoGetStartedAndroidStudioLink="https://go.microsoft.com/fwlink/?LinkId=723132";e.Summary="Summary";e.PullRequest_CompleteMergeDialog_DeleteSourceCheckboxDefaultTooltip="Default branch cannot be deleted when merging a pull request";e.RepositoriesFilterWatermark="Filter repositories";e.PullRequest_IterationSelector_UpdateN="Update {0}";e.PullRequest_CompleteMergeDialog_DeleteSourceCheckboxLabelText="Delete {0} after merging";e.MergeCommit="Merge Commit";e.CreateBranchDialogInvalidCharacterMessage="A branch name cannot contain \u0027{0}\u0027.";e.PullRequest_ChangeExplorer_DiscussionThreadDeleted_Text="[comment was deleted]";e.PullRequest_ActivityFeed_OptionalReviewer_ManyReviewers_2Files="{0} and {1} others were added as reviewers for {2} and 1 other file";e.HistoryList_GraphColumnHeader="Graph";e.History_GraphToggleOffLabel="Show Graph";e.EmptyHistoryResultTitle="No results matched your filter criteria";e.BranchNameTooLong="Branch name too long.";e.PullRequest_QuickStart_Overview_Title="Welcome to the new pull request experience";e.KeyboardShortcutDescription_CreatePullRequest="Create pull request";e.PullRequestCreate_PivotsRegionLabel="File changes and commits associated with this pull request";e.AddGitIgnoreSelector_NoneValue="None";e.SearchBoxAriaLabel="Search Commit ID";e.PoliciesTab="Policies";e.MergeAnimation_Description_Merge="Image of pull request being completed using a no-fast-forward merge";e.AddFileDialogNewFileFormat="[+] {0}";e.ForkDialogForkNamePlaceholder="Enter a name for your repository";e.ChangeExplorerCommentsModeOff="Hide comments";e.PullRequest_CompleteMergeDropdown_Rebase_Details="Rebase source commits onto target and fast-forward";e.PullRequest_Retarget_Title="Change target branch";e.KeyboardShortcutDescription_History="History";e.GitAsyncOperation_EmptyNameOrEmail="Name or email cannot be empty to successfully complete the operation. Please set valid name and email in your profile.";e.RepoTypeGitName="Git";e.BranchUpdateListItemToggleButtonLabel="Commit list";e.DiscussionCommentLikeAriaLabelWithoutUsers="Toggle comment like";e.SearchExcludingBranch="\u0027{0}\u0027";e.TfvcWebEditEnabledOption="Enable web-editing for this TFVC repository.";e.FilterNoFilterApplied="No filter applied";e.PullRequest_Vote_ResetFeedback="Reset feedback";e.CommitOwnerDisplayNameFormat="{0} \u003c{1}\u003e";e.CreateBranchDialogBranchExistsMessage="The specified branch name already exists.";e.PullRequest_ApproveButtonLabel="Approve";e.RenameDialogTitle="Rename item";e.ChangeTypeUndelete="undelete";e.BranchSecurityTitleFormat="Security for {1} branch in {0}";e.PullRequest_DiscussionThreadCollapseWidget_SomeCollapsed="{0} other comments ({1})\r\nClick to expand all";e.ToggleFullScreenShortcutText="Toggle full screen";e.PathLengthText="Recommended minimum path length is {0}.";e.DisableAutoCompleteDialog_Text="This pull request will auto-complete when all policies succeed.  Do you want to disable auto-complete to ensure the author reviews your suggestions before the pull request is completed?";e.FilterExcludingPushedByText="Exclude pushes from";e.PullRequest_CompleteMergeDialog_PolicyOverride="Policy override options";e.FileListMoreThan="More than {0}";e.RetainedLowerCase="retained";e.RenameDialogFilenameLabel="Filename";e.PullRequest_CompleteMergeDialog_DescriptionTextTooLong="Exceeded the maximum encoded length ({0}/{1})";e.Fullscreen="Fullscreen";e.PullRequest_ResolvedDiscussionCountTooltip="{0} out of {1} comments are marked as resolved, won\u0027t fix, or closed";e.MergeCommitTitleAlternate="Showing: \u003cstrong\u003econtents of {0} (Changes made as you merged)\u003c/strong\u003e";e.PushPolicyUpdateFailedMessage="Policy failed to update.";e.EmptyRepo_PatUsernameCopyButtonTooltipAfterCopied="PAT username copied!";e.DiscussionInstructions="Drag \u0026 drop, paste, or select files to attach.";e.FileCountTooltipSingular="1 file affected";e.ChangesetListCreatedDate="Created date";e.PullRequestListFilterAriaLabel="Pull request list filters";e.KeyboardShortcutDescription_Explorer="Files";e.GitProjectPushPoliciesTitle="Policies for all Git repositories";e.HistoryListFormatToggleText="Toggle compact and traditional history list view";e.InitRepoWithDefaultFileMessage="Added {0} file";e.TagsPage_ListHeader_Tagger="Tagger";e.PullRequestAsDraftByDefaultOption="New pull requests will be created as draft by default for all repositories in this project";e.PullRequest_ActivityFeedFilterClearTooltip="Clear the current filter";e.PullRequest_RecentUpdate="Recent update";e.PullRequest_CardClosed="closed";e.ChangeExplorerDisplayModeTooltip="Change the display mode for the tree";e.PullRequest_DiscussionThreadCollapseWidget_CollapseDiscussion="Hide comment";e.Repositories="Repositories";e.TwoUpDiffTitleText="Two-up";e.EditFileCheckinToShelveset="Create shelveset...";e.PullRequest_CompleteMergeDialog_MergeDetailsTitle="Pull request details";e.PullRequest_Policy_BuildPolicyBroken="Unable to queue {0}";e.PullRequestStatus_StateLabel_Pending="Pending";e.AttachmentSizeValidationError="Attachments must be less than {0}MB.";e.CommitDetails_PullRequestCallout_FirstPRInDefaultBranch="First pull request in default branch";e.PullRequest_IterationSelector_SelectLatestIterationLabel="View all code updates";e.Revert_PullRequestDescriptionAppendMentionFormat="Revert {0}";e.AsyncGitOperationTracker_Close="Close";e.PullRequest_DiscussionThread_ScreenReaderCommentsSummary="1 comment";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesHideCommentsLong="Hide comments";e.LearnMoreAboutSshLinkText="Learn more about SSH";e.FailedToCreateGitCredentials="Failed to create Git credentials.";e.InlineDiffTitle="Showing \"inline\" diff mode. Click to switch to side-by-side mode.";e.ImagesAreSameMessage="The selected images are the same.";e.VersionSelectorPrefixSearchTagsText="Press Enter to search for all tags starting with \"{0}\"";e.ChangeTypeFileType="encoding";e.EmptyTagsResultMessage="Check the spelling of your search term or try another tag name.";e.LinesDeletedHeader="-{0}";e.EditFileDiffInline="Show diff inline";e.ProjectPickerFilterPlaceholder="Filter projects";e.PullRequest_Filter_ActiveComments="Active comments ({0})";e.SearchCommitDialogTagsNoResultsLabel="No tags found starting with \"{0}\"";e.AssociatedWorkItems_AriaDescription="Click to view work item details.";e.NextFile="Next file";e.PullRequset_ConflictDescription_Unknown="Unknown conflict";e.Navigation_ContributedTabError="Could not find specified extension: {0}";e.ExploreLatestVersionMenuText="Explore latest version";e.CommitQueuedGatedCheckin="Your check-in has been placed into shelveset {0} and was queued for validation by {1}.";e.CherryPick_FailureMessageTemplate="Failed to cherry-pick changes. {0}";e.SetDefaultBranchMenuItem="Set as default branch";e.PullRequest_RelatedWorkItemsTitle="Add work items";e.GitRepositorySelectorAriaDescribeActions="Contains additional repository actions.";e.ViewHistory="View history";e.LabelVersionDisplayText="Label \u0027{0}\u0027";e.CommentWithFileInfoFormat="{0}\r\n[{1}]";e.LinkDialogCommitIdTitle="Commit";e.PullRequest_Pivot_AllMine="Mine";e.PullRequest_QuickStart_Iterations_Title="See how the code is changing";e.Status_StatusMain_Success="Success";e.DeleteTagsDialog_DeleteTitle="Delete Tags";e.PullRequest_CallToAction_AutoComplete_SetBy="{0} set the pull request to automatically complete when all policies succeed.";e.DisableAutoCompleteDialog_KeepButton="Keep auto-complete";e.RepoNotFound_TitleWithName="{0} repository not found";e.RepoTypeTfvcName="TFVC";e.GitRepositoryDeleteDialogPrompt="This repository will be permanently deleted. This is a destructive operation. Please type the repository\u0027s name ({0}) to confirm.";e.NoRepositoryByIdError="No repository found in this project with ID \"{0}\".";e.GettingStarted_InitializingRepository="Initializing Repository";e.SearchCommitGitVersionSelectorActionsMenuItemBranchesLabel="Search in branches starting with \"{0}\"";e.PreviousDifference="Previous difference";e.PullRequest_CallToAction_CompletedWithRebase="{0} completed the pull request by rebasing on {1}.";e.TagFlyout_LightweightTagTitle="Tag Details (lightweight)";e.PullRequest_Required="Required";e.PullRequest_Policy_BuildPolicyNotRun="{0} not run";e.EditModeRevertToEditMode="Switch back to edit mode";e.PullRequest_CreateDefaultTemplate="default";e.PullRequest_EnabledLiveUpdates="Live Updates Enabled";e.PullRequest_ActivityFeed_VoteNoResponse="No response by {0}";e.PullRequest_Filter_ActiveComments_Short="Active ({0})";e.ChangeCountAdds="{0} adds";e.ChangeCountEdit="{0} edit";e.History_GraphToggleButtonAriaLabel="Graph Toggle";e.WorkItemDetailNotAssigned="Current state is {0}. Currently not assigned to anyone.";e.RepoPickerAllTabLabel="All repositories";e.RelatedArtifactRepositoryTitle="Repository";e.GitStatusStateSetupBuildCaption="Set up build";e.DeleteCommentAction="Delete comment";e.PullRequest_ChangeExplorer_TreeFilter_FullTreeLong="Full tree";e.CommitSuccessLinkFormat="{0}: {1}";e.DownloadRepositoryAsZip="Download the repository contents as of this commit";e.PullRequest_CompleteMergeDialog_OverrideText="Override \u0026 Complete";e.PullRequest_CallToAction_CompletedWithSquash="{0} completed the pull request with a squash merge on {1}.";e.ForkRepositoryCreating="Creating Fork";e.TagsPage_ListHeader_CreationDate="Creation Date";e.EditFileContextMenuText="Edit";e.FilterFromDateText="From date";e.SinglePullRequest_RelatedArtifactsDisplayString="1 Pull Request";e.PullRequestListTooManyPeopleLink="Customize";e.PullRequest_QuickStart_Overview_Cancel="I\u0027ll explore myself";e.PullRequest_ActivityFeed_VoteReset="{0} reset their vote";e.PullRequest_ForkRepositoryDeletedTooltip="This repository was deleted.";e.PullRequset_ConflictDescription_None="No conflict";e.GitCaseEnforcementDescription="Avoid case-sensitivity conflicts by blocking pushes that change name casing on files, folders, branches, and tags.";e.CreatePatButtonText="Generate Git credentials";e.PullRequest_TargetBranchDoesNotExist="The target branch does not exist. Please select a different branch.";e.SearchCommitDialogBranchesNoResultsLabel="No branches found starting with \"{0}\"";e.PullRequest_ChangeExplorer_DiscussionThread_NewDecoratorLabel="New";e.PullRequest_ActivityFeed_ResetMultipleVotesOneVote="{0}";e.GitToolsForWindowsLink="https://go.microsoft.com/fwlink/?LinkID=278817\u0026clcid=0x409";e.PersonalAccessTokenDescriptionText="Personal access tokens provide more security because they\u0027re individually revokable and auditable.";e.RevertDialog_Title_Commit="Revert commit {0}";e.PullRequest_Comment="{0} comment";e.PullRequest_CompleteMergeDialog_WorkItemTransitionWarningFormat="{0} {1}\r\n{2}";e.Revert_Dialog_Oktext="Revert";e.ParentCommitAnnotationFormat="Parent {0}";e.PullRequest_CreatePullRequestPasteCommitMessages="Add commit messages";e.PathExplorer_NavigateIconTooltip="Navigate";e.ImageTitle="{0} ({1})";e.CommitDetailsPushedOn="Pushed on {0}";e.Revert_FailureMessageTemplate="Failed to revert changes. {0}";e.TagsList_RemainingTagsHeader="+{0}";e.Folder="Folder";e.AddCommentButtonAriaLabel="Add comment";e.FileViewerClickToDownloadContentDisbled="Download file feature is disabled for this file item.";e.PushRefCreatedFormat="{0} created at {1}";e.GitRepositorySelectorGitRepository="Git repository";e.UserPasswordText="Password";e.GettingStarted_GitRemoteAddOriginCommand="git remote add origin {0}";e.ForkAction="Fork";e.PullRequest_Policies_NotApplicable="{0} is not applicable";e.EmptyRepo_HttpSshCopyButtonTooltipAfterCopied="Clone URL copied!";e.GitPathLengthPolicyExceedsInherited="Path length must be less than the inherited value of {0}.";e.PullRequest_ActivityFeed_ResetMultipleVotesNoInitiatorSingleVoteWithReason="Vote of {0} was reset: {1}";e.GettingStartedRegion_Label="Getting Started";e.PullRequest_CollapseDescription="Collapse description";e.AdminView_BranchesAdminBannerMessage="To manage the security and policies for a branch, go to the {0} page and select \"Branch security\" or \"Branch policies\" in the context menu.";e.PullRequest_Updated="Updated {0}";e.CreateRepoStatusEnded="Repository created successfully!";e.PullRequest_Edit_Description="Edit Description";e.PullRequest_DiscussionThreadCollapseWidget_CollapsedDiscussionPreview="{0}: \"{1}\"";e.CommitCommentLabel="Comment";e.PRFollowSuccess="You are now following this pull request";e.GettingStarted_BuildButtonText="Set up build";e.Delete="Delete";e.PullRequest_PolicyMergeStrategySquashRequired="Required by policy";e.FileViewerEditFileMenuText="Edit";e.PullRequest_ActivityFeed_VoteResetByOtherUser="{0} had a vote reset by {1}";e.DefaultExcludeBranchMessage="Default branch is always indexed and cannot be excluded";e.PullRequest_ClearIsDraft="Publish";e.PullRequestListCustomTitleLabel="Title";e.NewReposCreatedBranchesManagePermissionsEnabledOption="New repositories will be configured to allow users to manage permissions for their created branches";e.GitRepositorySelectorActionsAriaLabel="Repository actions menu";e.NoChangesInCommitMessage="This commit contains no changes.";e.PullRequestCreate_MarkdownInstructionsLabel="Navigate to markdown instructions page";e.CherryPick_Completed="Cherry-pick succeeded in creating the new branch {0}.";e.CommitsWithIdStartsWithTitleFormat="Commits with ID starting with \"{0}\"";e.PullRequest_ReviewersOverflowCountLabel="+{0} other reviewers";e.InitRepoWithReadMeError="Unable to initialize repo with README.md";e.Manage="Manage";e.AddFileDialogDefaultCommentMultipleFiles="Added {0} files to {1}";e.ShelvesetVersionDisplayText="Shelveset \u0027{0};{1}\u0027";e.NoFilesWithActiveDiscussionComments="No files with active discussion comments";e.PullRequest_CommitsTab_NoCommits="This pull request does not have any commits.";e.FilterPushedByText="Pushed by";e.PullRequest_FilterAnnouncement_MorePrefix="more than ";e.PullRequest_CompleteMergeDialog_AdvancedMergeTypesLearnMoreTitle="Learn about different types of pull request merges";e.PullRequest_Filter_AllPullRequests="All";e.PullRequest_UpdatesTab_NewBaseLabel="Based on commit {0}";e.ShowMoreCommentTooltip="Click to show the full comment";e.PullRequest_ShareDialog_CancelButton="Cancel";e.ShelvesetMoreItemsMessage="Only the first {0} items in this shelveset are included.";e.GitRefTag="tag";e.CommitDetails_PRdetailsNotFetchedErrorMessage="We’re having trouble loading associated pull requests. Please try again after sometime.";e.VersionControlCommitDetailsCopyShaToolTip="Copy full SHA to clipboard";e.ChangeTypeLock="lock";e.ChangeTypeNone="none";e.CloneAction="Clone";e.ChangeTypeEdit="edit";e.CommitDetails_PullRequestCallout_AdditionalPRs="Additional pull requests";e.GitRepositorySelectorDescribe="Repository selector";e.PullRequest_Description="Description";e.CreateTag_InvalidLeadCharacterMessage="A tag name cannot start with \u0027{0}\u0027.";e.PullRequest_IsDraft_Set="{0} marked the pull request as a draft";e.DiscussionAnnounceCommentLiked="Comment liked";e.DeleteRepositoryMenuItem="Delete repository";e.PendingCommitProcessingWarning="We are currently processing some of your commits.  This result set may not be complete.  Please try again later.";e.PRCardOnDate="on {0}";e.PullRequest_CreatePullRequestButtonCaption="New pull request";e.PullRequest_MergeConflicts_2ndOrder="Additional conflicts occurred after attempting to merge the PR with the existing conflict resolutions.";e.GravatarOptionTitle="Gravatar images";e.DisableAutoCompleteDialog_DisableButton="Cancel auto-complete";e.Browse="Browse";e.PullRequset_ConflictDescription_AddRename="Added in source, renamed in target";e.DiscussionAnnounceCommentSaved="Comment saved";e.OneAssociatedPullRequestBadgeText="1 associated pull request";e.CommitDetails_PullRequestCallout_FirstPR="First pull request";e.AndroidStudioName="Android Studio";e.SearchForkedRepoBranchConfigurationMessage="Forked repositories do not support code search.";e.InheritPullRequestCreationModeOption="When enabled, new pull request creation mode is inherited from project. When disabled, new pull request creation mode is set at the current level and may differ from project setting.";e.SearchCommitInBranchesDialog_RetryMessage="Retry";e.Cancel="Cancel";e.Status_Tooltip_Primary_Failure_Plural="Failures reported";e.AffectedFilesSingular="1 item affected";e.CloneInYourFavoriteIDE="Clone in your favorite IDE";e.WorkItems="Work items";e.Change="Change";e.ChangesetMoreItemsMessage="Only the first {0} items in this changeset are included.";e.PullRequest_ChangeExplorer_DiscussionThread_ReplyDecoratorPluralLabel="{0} replies";e.PullRequestCreate_TargetBranchLabel="Target branch selector";e.PullRequest_IterationSelector_NotSupported="Updates are not tracked for this pull request";e.IntelliJName="IntelliJ IDEA";e.PullRequest_FilterAnnouncement_Fetching="fetching pull requests";e.PullRequest_MentionWorkItems="#{0}";e.DiffMenusSeparatorTooltipFormat="Comparing {0};{1} to {2};{3}";e.HistoryList_DateColumnHeader="Authored Date";e.PullRequest_RetargetChanges="The target branch has been changed. Click here to view all updates.";e.PullRequest_MultipleComments_Tooltip="There are {0} comments in this pull request.";e.ViewMergeChanges="View merge changes";e.HistoryList_BuildTooltip="Pipeline status: {0}";e.PushPolicyUpdatedSuccessfullyMessage="Policy was updated successfully.";e.HistoryList_PullRequestColumnHeader="Pull Request";e.ClonePopup_CommandLineTitle="Command line";e.PullRequest_DeleteSourceBranch_Warning_Text="This will permanently delete the branch {0}. Are you sure?";e.TagsPage_ZeroDayExperience_Title="This repository has no tags yet";e.RelatedArtifactPullRequestTitle="Pull Request";e.EditFileDiscardChangesTitle="Discard changes";e.PullRequest_ShareDialog_Subtext="Send an email notification with a link to this pull request and an optional comment.";e.PullRequests_RelatedArtifacts_FailToDelete_NoWorkItemClient="Failed to delete the link. Could not load the work item service.";e.MaxFileSizeExceededGit="This file\u0027s content exceeds the maximum size allowed to be edited through the web. To change this file\u0027s content you will need to clone the repository and edit the file locally.";e.RelatedArtifactViewPullRequest="View pull request";e.PullRequest_ActivityFeed_ViewUpdates="View code updates";e.PullRequest_NoRelatedWorkItems="No related work items";e.CloneCommand="git clone";e.AttachmentInstructions="Learn more about attachments.";e.AsyncRef_Dialog_Cancel="Cancel";e.EmptyRepo_PushCommandsCopyButtonTooltipAfterCopied="Push commands copied!";e.PullRequest_CompleteMergeDropdown_RebaseMerge_Details="Rebase source commits onto target and create a two-parent merge";e.TooManyCommitsStartWithError="Multiple commits were found with commit ID starting with \"{0}\". Enter a more specific commit ID.";e.AddFileDialogDefaultCommentMultipleFilesWithEdits="Updated {0} files in {1}";e.PushRefDeletedShortFormat="Deleted";e.PathExplorerChangesetsAriaLabel="Type the file or folder name";e.PullRequest_Reviewers_Waiting="Reviewer(s) waiting for the author to respond";e.TfvcChangesetsFilterAriaLabel="Changesets Filters";e.SearchDialogCloseText="Cancel";e.PullRequest_CherryPick_CalloutButton="Cherry-pick";e.PullRequest_Push_Singular="{0} push";e.RebasedLowerCase="rebased";e.Someone="Someone";e.Status_Tooltip_Secondary_Failure_Singular="{0} failure";e.PullRequest_Policy_BuildPolicyQueued="{0} queued";e.EditFileCommitToNewBranchTitle="Commit changes to a new branch";e.DiscussionAnnounceThreadStatusChanged="Thread status changed";e.TagFlyout_TaggerDisplayNameFormat="{0} \u003c{1}\u003e";e.DeleteItemsDialogOKText="Delete";e.NextCommentTooltip="Go to next comment";e.OnText="On";e.DeleteItemMenuItem="Delete";e.DefaultDeleteCommentFormat="Deleted {0}";e.VersionSelectorNoBranches="There are no branches in this repository";e.PullRequestListCustomSectionCancel="Cancel";e.DefaultBranchNameTitle="Default branch name for new repositories";e.PullRequest_ActivityFeed_ResetMultipleVotesNoInitiatorSingleVoteNoReason="Vote of {0} was reset";e.PullRequset_ConflictDescription_Rename2to1="Two files renamed to same path in source and target";e.PullRequset_ConflictDescription_Rename1to2="File renamed to different paths in source and target";e.PullRequest_RequiredReviewer_AllApproved="Required reviewers have approved";e.CommitNewFolderNameLabel="New folder";e.RepoCreatedBranchesManagePermissionsEnabledTitle="Permissions management";e.AddFileDialogFolderNameLabel="New folder name";e.CommitDetails_FirstPRInDefaultBranchdetailsRow_AriaLabel="First Pull Request in Default branch: {0} requested Pull Request {1} into branch {2} at {3}.";e.ForkDialogRepoNameInputLabel="Repository name";e.PullRequest_FilterAnnouncement_ResultsPlural="{0}{1} pull requests found{2}";e.OrText="or";e.WitTransitionsStickyOption="Remember user preferences for completing work items with pull requests.";e.WitResolutionMentionsEnabledOption="Allow mentions in commit comments to close work items (e.g. \"{0}\").";e.ChangesetNotFound_Error="Changeset {0} was not found.";e.GitBlobSizeTitle="Maximum file size";e.PullRequest_New_Comment_Singular="{0} new comment";e.DiffFilesAreLargeBinaryFiles="The difference between files {0} and {1} could not be computed.";e.PullRequest_AutoCompleteMergeErrorName="Merge type";e.PullRequest_AutoCompleteMergeErrorText="{0} is forbidden by policy";e.PullRequestsList_ExpandButtonLabel="Expand";e.FileTreeSearchResults="{0} results.";e.SearchBranchName="branch";e.Status_Tooltip_Secondary_AllSuccess="All statuses are successful";e.SetAsCompareTagDialog="Set as compare tag";e.ViewInFileExplorerMenu="View in file explorer";e.ShelvesetPickerDialogTitle="Shelveset picker";e.CherryPick_Dialog_Description="Use the git cherry-pick operation to apply changes to another branch. A new topic branch will be created with the applied changes, and then you will be prompted to create a pull request to the target branch.";e.PullRequest_Abandoned="Abandoned {0}";e.PushRefUpdateFormat="{0} updated to {1}";e.GravatarEnabledNoLink="Show Gravatar images for users outside of your enterprise. This setting applies to all repositories in this project collection.";e.GitCredentials_StartedLoadingComponent="Loading";e.PullRequest_SystemRefUpdateSingleCommit="Commit {0} added to {1} branch";e.PullRequest_RequiredReviewer_NotAllApproved="Required reviewers have not approved";e.SearchBranchUXPermissionErrorMessage="You don\u0027t have permission to complete the operation.";e.PullRequest_UnsavedChanges_Content="Switching the source and target branches will reset this form. Any changes you’ve made so far will be lost.";e.PullRequestListCustomSectionTooManyPrs="More pull requests match your custom filter but only 50 can be shown.";e.PullRequset_ConflictDescription_EditEdit="Edited in both";e.PullRequsete_SystemMergeConflictsStatusDisplay="Conflicts prevent automatic merging";e.PullRequest_ShareDialog_IdentityPickerPlaceholderText="Search users and groups";e.CherryPick_CommitDescriptionAppendFormat="Cherry-picked from commit `{0}`.";e.PullRequest_Comment_Plural="{0} comments";e.PullRequest_Policy_FailedToLoad="Failed to load policies";e.LinkDialogVersionedItemTitle="Item";e.CreatePersonalAccessTokenText="Create a Personal access token";e.CommitDetails_ParentSelectorAriaDescription="Click to select parent commit";e.DiffParentCommitFormat="Diff Parent {0}";e.PullRequset_ConflictDescription_DeleteRename="Deleted in source, renamed in target";e.VersionSelectorCommitTabLabel="Commit";e.EditModeShowDiff="Show diff";e.DiffFilesAreIdentical="Identical Binary Content\r\n\r\nFiles {0} and {1} are identical in content.";e.AsyncRef_Dialog_OntoRefText="Target branch";e.CreateTag_TagNameTooLong="Tag name too long.";e.AddFileDialogNewItemLabel="Create and edit a new file";e.HideHistoryLinkText="Hide {0} history for {1}";e.PullRequset_ConflictDescription_RenameDelete="Renamed in source, deleted in target";e.LinkDialogSpecifyItemPath="Specify item path.";e.CreateBranchDialogWatermark="Enter your branch name";e.ClonePopup_Message="Clone Git repository using command line or IDE";e.GitHistoryFilterAriaLabel="Commits history filters";e.PullRequest_RelatedArtifactsRemoveAllConfirmation="Are you sure you want to remove all work items linked to this pull request? Removing links does not delete the work items.";e.PullRequest_IterationTruncated_ViewCommitHistory="View commit history";e.Branches="Branches";e.PullRequest_ActivityFeed_VoteApproveWithComment="Approved with suggestions by {0}";e.ExploreThisVersionMenuText="Explore as of this version";e.SearchIncludeBranch="Include branch";e.EmptyRepo_PushCommandsCopyButtonTooltipBeforeCopied="Copy push commands to clipboard";e.HideRenameHistoryFileName="Hide rename history for {0}";e.SearchBranchUxTitle="Configure branches for code search";e.PullRequest_CompleteMergeDialog_SquashRecommendDelete="Deleting the source branch when squashing is recommended";e.VersionSelectorNoMyBranches="You have not created or added any branches in this repository to your favorites";e.PullRequest_RebaseSourceBranch_NoPermission="You do not have permission to write to it";e.PushedByFormat="Pushed by {0}";e.AttachmentRetry="Retry";e.AddNewItem="New";e.AddNewFile="New file";e.PullRequest_Status_Abandoned="Abandoned";e.AttachmentError="Error uploading attachments.";e.FilterTooltipFormat="{0}: {1}";e.RepoStatsCommitsTitle="commits";e.PullRequest_ActivityFeed_CommentLoadMoreNotification="This file has not been loaded yet. Click \"Load more\" on the Files tab of this pull request.";e.FileListSearchInFullHistory="Search in full history";e.BrowseFiles="Browse files";e.PolicyPreventIndirectApprovalsReject="One or more iterations have been indirectly approved by its author";e.MergeType="Merge type";e.CherryPick_FailureMessage="Failed to cherry-pick changes.  This operation needs to be performed locally.";e.PullRequest_Pivot_Overview="Overview";e.PullRequest_ReviewerFullStatus="{0} with status {1}";e.PathExplorer_LoadingResultsFooterMessage="Loading results...";e.Status_Tooltip_Secondary_Failure_Plural="{0} failures";e.GitCredentialsPasswordNotStrong="Passwords must be 8 - 32 characters long and contain at least 3 of the following: uppercase letters, lowercase letters, numbers and symbols.";e.PullRequest_Follow="Follow";e.ClickForMoreChangesText="Click here to download more changes.";e.GitPathLengthPolicyOutOfRange="Path length must be between {0} and {1}.";e.PullRequest_ActivityFeed_RequiredReviewer_1Reviewer_1File="{0} was added as a required reviewer for {1}";e.WitMentionsEnabledOption="Automatically create links for work items mentioned in a commit comment.";e.PullRequest_QuickStart_Features_OverviewLink="Overview";e.ImageDimensions="({0}x{1})";e.ChangeTypeSourceRename="source rename";e.PullRequest_QuickStart_Overview_Name="Overview";e.PullRequest_QuickStart_Overview_Desc="The Overview shows you the latest status and changes to the pull request. It\u0027s easier than ever to add comments and reply to active discussions. New code and comments will appear immediately.";e.AutoComplete="Set auto-complete";e.PullRequest_ActivityFeed_Pushed="{0} pushed {1} commits";e.BranchesPageEmptyMessage="No changes between these branches.";e.PullRequest_DelegateReviewerThreePlusPeople="{0} and {1} others";e.CommitDetails_PullRequestCallout_DefaultBranchPR="Default branch pull request";e.PullRequest_AnActivePullRequestExisRetargetNotification="The pull request target branch could not be changed because an active pull request already exists between those branches.";e.PullRequest_AnActivePullRequestExistLink="View Pull Request {0}";e.PullRequest_ActivityFeed_PR_CompletedBy="{0} completed the pull request";e.LightweightTagsInfo="This is a lightweight tag.";e.ChangesetListChangesetNumber="Changeset number";e.CompareToPrev="Compare to previous version";e.DownloadFile="Download";e.CommitDetailsCommittedAriaLabel="{0} committed on {1}";e.PullRequest_CompleteMergeDialog_ByPassPolicyCheckboxLabelText="Override branch policies and enable merge";e.LinkDialogChangesetIdTitle="Changeset";e.PRAlreadyNotFollow="You are not following this pull request";e.PullRequest_Policy_ApproverApprovedByMultiple="{0} reviewers approved";e.HistoryList_PushesList_Merged="{0} merged {1}, {2}";e.ReturnToCommitsListString="Return to the repository history";e.PullRequest_ActivityFeed_Reviewer_Reviewer="reviewer";e.Status_Tooltip_Primary_Pending="Status pending";e.PathExplorer_FindFileAriaLabel="Find a file or folder";e.ForkRepositoryDefaultName="{0}.{1}";e.PullRequest_Filter_CreatedByMe="Created by me";e.CreateDraftPullRequest="Create Draft Pull Request";e.PullRequest_Status_Completed="Completed";e.RepoNotFound_Title="Repository not found";e.DiffSelectorItemSecondaryText="{0} - {1} by {2}";e.PullRequest_ActivityFeed_Reviewer_AddedOne="{0} added {1} as a reviewer";e.ElidedTextAtEnd="{0} …";e.PullRequest_Filter_HideComments="Hide comments";e.GitHistoryTab_Ls_Key_isFilterPanelVisible="GitHistoryTab_Ls_Key_isFilterPanelVisible";e.CherryPickButton_HistoryCommits="Cherry-pick...";e.NoBranchesInRepository="No branches in this repository.";e.DiscussionCommentLikeAriaLabelWithUsers="Toggle comment like. Users who like this comment: {0}.";e.PullRequest_Revert_Button="Revert";e.PullRequestTreeMarkAsPending="Mark as unreviewed";e.PullRequest_Status_Completed_Bypass_Description="Required branch policies were bypassed";e.PullRequest_CompleteMergeDropdown_Squash_Details="Linear history with only a single commit on the target";e.PullRequestCreate_TargetBranchPlaceholder="Select a target branch...";e.Status_Tooltip_Primary_Failure_Singular="Failure reported";e.RelatedArtifacts_FailedToFindPullRequest="Pull Request not found or no permission to access it.";e.PullRequest_StatusPolicies_Section_Title="Status";e.CommitDetails_ParentSelectorLink_AriaDescribedBy="View commit details of {0} - {1}";e.PullRequest_TitleLinkType="Pull Request";e.ViewContents="View";e.LockedBranchTooltipFormat="{0} (locked by {1})";e.PullRequest_ActivityFeed_Reviewer_RemovedOne="{0} removed {1} from the reviewers";e.CommitsAddedTabWithCountFormat="Commits added ({0})";e.ShelvesetListNoEntriesFound="No shelvesets found for the specified owner.";e.EmptyRepo_AliasCopyButtonTooltipBeforeCopied="Copy alias to clipboard";e.PullRequest_NewPullRequest="new pull request";e.PullRequest_ActivityFeed_VoteApprove="Approved by {0}";e.MyBranchesTabLabel="Mine";e.PullRequest_Vote_Approve="Approve";e.CollapseCodeExplorer="Collapse code explorer";e.PullRequest_UnsavedCommentsSingle="1 unsaved comment will be saved when voting";e.PullRequest_ListPageNavigate="Return to the pull request list page";e.MultiplePullRequests_RelatedArtifactsDisplayString="{0} Pull Requests";e.CreateBranchDialogCreateButton="Create branch";e.GitGraphMessage_Content_AuthorFiltered="You do not see the graph when the commits are filtered by author. You can clear the author filter to view the graph.";e.ChangeExplorerCommentsModeTooltip="Change how comments are displayed";e.PullRequest_Optional="Optional";e.PullRequset_ConflictDescription_DirectoryChild="Invalid path";e.GitFileNamePolicyDescription="Block pushes from introducing file paths that match the following patterns.";e.CreateBranchDialogExistingRefUsedAsFolder="The specified branch name cannot be nested on existing branch \u0027{0}\u0027.";e.PullRequest_ActivityFeed_OptionalReviewer_1Reviewer_1File="{0} was added as a reviewer for {1}";e.OpenInVisualStudioTooltip="Open in Visual Studio";e.BranchUpdateHistoryListLabel="Commit list: press right arrow key to browse";e.RevertButton_HistoryCommits="Revert...";e.GitGraphMessage_Content_RenameHistory="You do not see the graph for file rename commits.";e.RelatedArtifacts_FailedToFindCommit="Commit not found or no permission to access it.";e.PullRequest_ChangeExplorer_TreeFilter_FilesOnly="List";e.CreateBranchDialogNewRefIsExistingFolder="The specified branch name is used as a folder by existing branch \u0027{0}\u0027.";e.PullRequest_CompleteMergeDialog_TransitionWorkItemsHintCheckboxLabelText="These include work items that are linked to this pull request or that were mentioned as fixed in one of the commit messages (ex: \"{0}\").";e.RenameItemsDialogOKText="Rename";e.PullRequest_AutoCompleteMergeDialog_Title="Enable automatic completion";e.PullRequest_Filter_AssignedToTeam="Assigned to the team";e.AllCommits="All commits";e.PullRequest_Push_Plural="{0} pushes";e.PullRequest_DisabledLiveUpdates="Live Updates Disabled";e.MentionCommitLinkingOptionTitle="Commit mention linking";e.PushNewRefActionsHeader="Actions:";e.PullRequest_FetchingChanges="Loading...";e.PullRequest_ActivityFeed_RequiredReviewer_2Reviewers_ManyFiles="{0} and {1} were added as required reviewers for {2} and {3} other files";e.InvalidCommitId="Invalid commit ID. Valid characters are numbers from 0-9 and letters a-f.";e.PullRequest_ChangeExplorer_TreeFilter_FullTree="Tree";e.ChangesetSearchWatermark="Changeset ID";e.CodePolicyTitleFormat="{0} ({1}) Branch Policies";e.AddGitIgnoreSelector_PrefixText="Add a .gitignore: ";e.NoUniqueChangeInMergeCommitMsgFormat="This is a merge commit and contains no unique changes.\u003cbr\u003e\u003cbr\u003eClick the Diff Parent links below to view the cumulative changes that were merged in each case:\u003cbr\u003e";e.Reason="Reason: {0}";e.Readme="README";e.GitStatusTitle="Build";e.PullRequest_Retarget_SameAsSourceError="Source and target branch must be different";e.CommitDetails_PRdetailsRow_AriaLabel="{0} requested Pull Request {1} into branch {2} at {3}.";e.PullRequest_LearnMoreLink="https://go.microsoft.com/fwlink/?LinkId=800672";e.PullRequest_CreatePullRequestTitle="Create Pull Request";e.RebaseMergedLowerCase="rebased and merged";e.ContentLoadingText="Loading content.";e.PullRequest_ActivityFeed_Reviewers_RemovedBy="{0} was removed as a reviewer by {1}.";e.PullRequestListPeopleLengthError="You can only include {0} people";e.Status_Tooltip_Primary_Success="Success!";e.CreateTagButton_TagsPage="Create Tag";e.DialogClose="Close Dialog";e.FileSizeTooLarge="File size is too large to download.";e.ChangeCountDelete="{0} delete";e.PullRequest_PullRequestDetailsStatusCompleted="Completed";e.MyPullRequestsViewTitle="My pull requests";e.PullRequest_ShareDialog_SendButton="Send";e.CompareTagsDialog="Compare Tags";e.GitAsyncOperation_TargetBranchDeleted="Target branch {0} does not exist. It may have been deleted.";e.AddShelvesetOverallComment="Add an overall comment for this shelveset";e.PullRequest_ChangeExplorer_TreeFilter_FilesOnlyLong="List files";e.PullRequest_CallToAction_SystemMergeFailed="Pull request cannot be automatically merged.";e.PullRequest_ChangeExplorer_TreeFilter_Label="Change file tree view option";e.PullRequest_invalidID="Pull request IDs only consist of numbers.";e.InitializeButtonLabel="Initialize Repository";e.PullRequest_CommentOnFile="Comment on file {0}";e.DiscussionThreadStatusLabel="Status";e.PullRequest_RequiredReviewers="Required reviewers";e.ViewLatestInFileExplorerMenu="View latest version";e.HistoryModeSimplifiedText="Simple history (default)";e.PullRequest_NewChanges="Code updates were pushed to this pull request ({0} new). Click here to view all updates.";e.MergeCommitAnnotation="Changes made as you merged";e.PullRequest_CallToAction_Completed="{0} completed the pull request on {1}.";e.ChangeSets_NoChangeSetsFound="Try a different filter criteria to search changesets most relevant to you.";e.GitGraphMessage_Title_NoGraph="Why am I not seeing graph data?";e.PushDeletedRefActionsHeader="Actions:";e.PullRequestListCustomTitleLengthError="Title must be less than {0} characters";e.AnnotateUnprocessedHistoryWarningFormat="Warning: Commits are still be processed. Only showing annotation blocks for commits that have been fully processed.";e.TagVersionDisplayText="Tag {0}";e.GitRepositories="Repositories";e.PullRequest_EnableLiveUpdates="Enable live updates";e.Revert_FailureMessage="Failed to revert changes. This operation needs to be performed locally.";e.ModalDialogUpload="Upload";e.RenameItemMenuItem="Rename";e.TagsPage_ZeroDayExperience_Description1="Use tags to mark a point in history that is relevant to the repository.";e.PullRequest_CompleteMergeDropdown_PoliciesProhibit="Forbidden by policy";e.PullRequestStatus_ActivityFeedText="{0} {1} posted by {2}";e.CheckinComment="Checkin comment";e.PushBranchRefFormat="branch {0}";e.PathSearch_GlobalResultsDefaultMessage="Or, were you looking for...";e.PullRequest_Vote_ApproveWithComment="Approve with suggestions";e.EnterFullScreenModeTooltip="Enter full screen mode";e.CloneInAction="Clone in {0}";e.FilterClearFiltersTooltip="Clear filters";e.CherryPickDialog_Title_Commit="Cherry-pick commit {0}";e.Status_Tooltip_Secondary_Pending="{0} pending";e.PullRequest_SourceIntoTarget="{0} into {1}";e.PullRequset_ConflictDescription_FileDirectory="File in source, directory in target";e.PullRequest_ActivityFeed_RequiredReviewer_2Reviewers_0Files="{0} and {1} were added as required reviewers";e.ViewCommitDetailsTooltip="View commit details.";e.ForksOptionsGroup="Forks";e.GitVersionSelectorActionsAriaLabel="Git ref actions menu";e.PathExplorer_SearchWatermarkText="Type to find a file or folder...";e.CommitToNewBranchSuccessMessageHtml="Created branch {0} and committed ";e.CommitDetails_ParentSelectorAriaLabel="Parent commit picker";e.GettingStarted_GitPushAllCommand="git push -u origin --all";e.DefaultAddSingleFileIntoNewSubfolderCommentFormat="Added file {0} into new folder {1}";e.NewBranchTitle="Create a new branch...";e.PullRequest_DeleteSourceBranch_NoPermission="You do not have sufficient permissions to delete this branch.";e.Preview="Preview";e.GettingStarted_ImportRepository="or import a repository";e.EmptyGitRepoGetStartedWindowsLink="https://go.microsoft.com/fwlink/?LinkID=723024";e.AreYouSure="Are you sure?";e.ExplorerFolderContentTitle="Content of folder {0}";e.IsDisabled="Disable Repository";e.TfvcRangeSelectorLabel="Filter by range";e.PullRequest_Labels_Add_Label="Add label";e.PullRequest_CompleteMergeDialog_SquashRecommendMerge="Consider using a no-fast-forward merge if you plan to use the source branch for further work";e.CommitDetails_DefaultBranchPRdetailsRow_AriaLabel="Default branch Pull Request: {0} requested Pull Request {1} into branch {2} at {3}.";e.PullRequest_ReviewerDetails="Reviewer Details";e.PullRequest_ActivityFeed_RequiredReviewer_2Reviewers_2Files="{0} and {1} were added as required reviewers for {2} and 1 other file";e.RelatedArtifactCommitTitle="Commit";e.PullRequest_CompleteMergeDialog_SquashMergeLearnMoreText="Learn more about squash merging";e.PullRequestListCustomSectionConfigureDescription="Customize this view to show the pull requests that you care about most.";e.TagFlyout_AnnotatedTagTitle="Tag Details";e.PullRequest_EmptyListMessage_Primary="Currently, no pull requests need your attention";e.PullRequest_ActivityFeed_ResetMultipleVotesWithInitiatorWithReason="{0} reset the vote of {1}: {2}";e.PullRequest_ActivityFeed_VoteNotReady="Waiting for the author by {0}";e.HistoryModeFirstParentText="First parent";e.PullRequest_ActivityFeed_ResetMultipleVotesNoInitiatorMultipleVotesNoReason="Votes of {0} were reset";e.SecurityTab="Security";e.PullRequest_CompleteMergeDialog_WorkItemTransitionWarningOverflowPlural="({0} more work items will not be completed)";e.GitReservedNamesPolicyTitle="Reserved names";e.ChangesetDetailsTitle="Changeset {0}";e.DiffCommitTitleAlternateOneParentFormat="Showing: \u003cstrong\u003ediff to {0} ({1})\u003c/strong\u003e";e.RelatedArtifacts_FailedToFindBranch="Branch not found or no permission to access it.";e.LinkDialogCommitRepoTitle="Repository";e.PullRequest_ReviewersOverflowTooltipLabel="List of other reviewers";e.PreviousFileTooltip="Go to previous file";e.BranchesFilterWatermark="Filter branches";e.InvalidFileName="\u0027{0}\u0027 is not a valid name. The name cannot contain any of the following characters: \" / : \u003c \u003e \\ * ?";e.PullRequest_CompleteMergeDialog_OkText="Complete merge";e.UnsavedFileDiscard="Discard";e.PushRefDeletedFormat="{0} deleted";e.PullRequest_Created="Created {0}";e.PullRequest_SystemMergeSucceeded="Pull request can be automatically merged";e.ChangesetPending="Changeset pending";e.DownloadAsZip="Download as Zip";e.ProjectSecurityTitle="Security for {0}";e.HistoryChangesSearchFilterInvalidDateFormat="Invalid date format. Enter a valid date or choose from the date picker.";e.PullRequest_ResetVotesOnDraft_Warning_Title="Reset all votes";e.PullRequests_ResultHeader_CreatedByMe="Created by me";e.PullRequest_Filter_AllComments_Short="All ({0})";e.PullRequestTreeMarkAsViewed="Mark as reviewed";e.CodeReviewAutoCompleteSet="{0} set the pull request to automatically complete when all policies succeed.";e.PullRequest_AbandonPullRequest="Abandon";e.PolicyWarningsHeader="Checkin policy warnings";e.ItemCompareContentTrimmedSwitchTo="Displayed content is truncated due to maximum viewable content limit.  Please switch to {0} mode to view the full content.";e.GitVersionSelectorDescribe="Git ref selector";e.MyBranchesFilterWatermark="Filter my branches";e.VersionSelectorNoMatchingTags="No tags contain the filter text";e.PathSearch_FooterMessageResultsCount="Showing {0} results";e.PullRequest_Filter_AllComments="All comments ({0})";e.PullRequest_CompleteMergeDialog_TransitionWorkItemsCheckboxLabelText="Complete associated work items after merging";e.PullRequest_ForkRepositoryDeleted="\u003cdeleted\u003e";e.PullRequset_ConflictDescription_RenameAdd="Renamed in source, added in target";e.LinkDialogChangesetZeroNotExists="TF14019: The changeset 0 does not exist.";e.GitRepositoryCreateDialogWatermark="Enter your repository name";e.RepoStatsBranchesTitle="branches";e.FilterRangeText="Range";e.ChangeCountEdits="{0} edits";e.SuccessfullyCreatedGitCredentials="Successfully saved Git credentials!";e.GitRepositoryCreateDialogTitle="Create a Git repository";e.PullRequest_SourceBranch="Source branch: {0}";e.PullRequest_DeleteSourceBranch="Delete source branch";e.FileViewerDefaultCommitMessageForAdd="Added file {0}";e.AllChanges="All changes";e.FileListColumnLastChange="Last change";e.PullRequest_DiscussionThread_ScreenReaderCommentsSummaryPlural="{0} comments";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesAllCommentsLong="All comments";e.CreateRepoStatusFailed="Repository creation failed";e.ShelvesetDetailsTitle="Shelveset {0}";e.GitCredentials_CompletedLoadingComponent="Loading completed";e.PullRequest_CherryPick="Cherry-pick...";e.ShelvesetLinkText="Shelveset {0}";e.DiffPreviewOffTooltip="Show diff";e.SearchCommitInBranchesDialog_RefsPickerLabel="Choose a branch or tag to see if it contains this commit. You may check all branches whose name begin with a certain string by entering the string followed by an asterisk(*) in the filter field.";e.AddNewItemsDialogOKText="OK";e.PullRequestCreate_SearchReviewersPlaceholder="Search users and groups to add as reviewers";e.CommitDetails_BranchPRTooltip="Pull Request #{0}, brought this commit into the branch {1}. View PR details.";e.SelectCommitButtonLabel="Select commit";e.GitRepositoryRenameDialogTitle="Rename the {0} repository";e.SearchComminInBranchesDialog_StatusHeader="Status";e.AddPathDialogTitle="Select path";e.PullRequest_CannotComplete_MergeInProgress="Merge must finish before the pull request can be completed";e.RefDeletedFormat="{0} (previously at {1}) was deleted";e.Commits="Commits";e.PullRequest_Policies_Awaiting="Awaiting {0}";e.Compare="Compare";e.VersionSelectorPrefixSearchBranchesText="Press Enter to search for all branches starting with \"{0}\"";e.BranchVersionDisplayText="Branch {0}";e.ContextMenuCodeSearchToReferenceLabel="Search for references";e.GitAsyncOperation_InvalidRefName="Failed to create branch {0}. Branch name is invalid.";e.SearchNoOfConfiguredBranchesMessage="Default branch is always searchable. You can include up to {0} additional branches. {1} of {0} branches included.";e.GettingStarted_ProtocolButtonAriaLabel="Using {0}";e.CompareOriginalVersionPickerAriaLabel="Original version: {0}";e.PullRequest_ChangeExplorer_DiscussionThread_ReplyDecoratorSingularLabel="{0} reply";e.DefaultCreateFolderCommentFormat="Added folder {0}";e.PullRequest_CallToAction_CompletedWithRebaseMerge="{0} completed the pull request by rebasing and merging on {1}.";e.ImportRepositoryLinkText="Import repository";e.ChangesetListRange="Range";e.EditDisabledDialogPush="push";e.EditDisabledDialogText="Your administrator has disabled web-editing for the \u0027{0}\u0027 repository.  You cannot add, delete, rename, or edit files via the web.  Make your changes locally then {1}.";e.FindFileOrFolderMessage="Find a file or folder";e.ShelvesetExplorerText="Shelveset explorer";e.AssociatedWorkItemsFormat="{0} associated work items";e.ChangeExplorerDisplayModeTree="Full tree";e.ChangeExplorerDisplayModeFlat="Flat list of files";e.ExcludeBranchMessage="Exclude branch";e.PullRequest_DelegateReviewerVia="via ";e.GitOSCompatLearnMoreLink="https://aka.ms/git-platform-compat";e.ForkRepositoryDialogIncludeDefaultBranchNotSet="Only the default branch";e.PullRequest_Change_Singular="{0} new change";e.Overview="Overview";e.GettingStarted_CloneToComputerText="Clone to your computer";e.ChangesetsGroupTitle_Singular="{0} changeset";e.LinesAddedHeader="+{0}";e.PullRequest_ReviewerGroupFullStatus="{0} with status {1} via {2}";e.PullRequest_DiffViewer_FileModified="The comment could not be displayed because the file was modified.";e.CommitDetailsTitle="commit {0}";e.CommitsRemovedTabName="Commits removed";e.PullRequest_CommentsCount_MoreThanThreshold="{0}+";e.ImportRepositoryLearnMoreHyperlink="https://go.microsoft.com/fwlink/?linkid=836846";e.PullRequest_ActivityFeed_RequiredReviewer_2Reviewers_1File="{0} and {1} were added as required reviewers for {2}";e.AllItemsText="All";e.PullRequestsList_DefaultCustomTitle="Custom: Assigned to my team(s)";e.PullRequest_Activity_None="There are no activities to display";e.Pending="Pending";e.NoPermission_ContactAdministrator="Contact your administrator for necessary permissions.";e.CherryPick_Dialog_Title_PullRequest="Cherry-pick pull request {0}";e.PullRequest_Filter_ResolvedComments="Resolved comments ({0})";e.DiscussionCommentResetContextLabel="View latest diff";e.DiffFilesAreDifferent="Different Binary Content\r\n\r\nFiles {0} and {1} are different in content.";e.CommitsRemovedTabWithCountFormat="Commits removed ({0})";e.SearchCommitInBranchesDialog_DoesNotIncludeThisCommit="does not include this commit";e.PullRequest_FilterAnnouncement_MultipleSections=" in {0} sections";e.OptionUpdateFailedMessage="Option failed to update.";e.PullRequest_ActivityFeed_AriaLabel="Activity feed";e.UnsavedFileNavigateAwayTitle="Unsaved changes";e.GitPolicyEmailFilterTooltipText="You can specify exact emails or use wildcards. Multiple email patterns should use “;” as a separator. Email patterns prefixed with “!” are excluded. Order is important.";e.GitRemoteAddOrigin="git remote add origin {0}";e.PullRequest_NoCommitsToMergeNotification="There are no changes to merge between the selected branches.";e.TagsPage_Header_SearchBoxText="Search tag name";e.PullRequest_HideReviewerSearch="Hide reviewer search";e.ContentLoadedText="Content loaded.";e.CherryPick_Timeout="Cherry-pick timed out.  This operation needs to be performed locally.";e.PullRequest_PolicyWorkItemLinkingPolicySucceeded="Work items linked";e.ViewContentsMenu="View contents";e.PullRequestListCustomSectionSave="Save";e.MergedLowerCase="merged";e.StrictVoteModeOption="Enable Strict Vote Mode for repository which requires Contribute permission to vote in Pull Requests.";e.PullRequestList_NoPullRequestsText="No pull requests found";e.SideBySideDiffText="Side-by-side diff";e.ErrorWebPathTooLong="Error: The path entered is too long. This web browser does not support URLs longer than {0} characters in length.";e.PullRequest_Revert="Revert...";e.PullRequest_Reject="Rejected";e.PullRequest_ShareDialog_NoteLabel="Note";e.FileListColumnComments="Comments";e.ChangeTypeProperty="property";e.CommitTooltipMessage="View commit details";e.CherryPick_ProgressMessage="Cherry-picked commit {0}";e.Revert_Completed="Revert succeeded in creating the new branch {0}.";e.GitCredentialsLearnMoreLink="https://www.visualstudio.com/en-us/docs/git/auth-overview";e.PullRequestStatus_ActivityFeedTargetUrlTitle="{0} details";e.EmptyRepo_AliasCopyButtonTooltipAfterCopied="Alias copied!";e.PathSearch_FooterMessageNoResults="No results found for \"{0}\".";e.PreviewOffLabel="Contents";e.OtherComments="Other comments";e.ProjectSelectorItemAriaLabel="Project";e.AddFileDialogDefaultCommentMultipleFilesWithAddsAndEdits="Added and updated {0} files in {1}";e.PullRequest_UnsavedChanges_Cancel="Cancel";e.FilterToDateText="To date";e.PullRequest_Filter_AssignedToMe="Assigned to me";e.PullRequest_Policies_Approved="{0} approved";e.PullRequest_ActivityFeed_Reviewer_Removed="{0} removed {1} reviewers";e.FileViewerClickToDownloadContent="Click to download file to your computer.";e.PullRequest_PullRequestDetailsStatusAbandoned="Abandoned";e.GitRepositoryDeleteErrorTitle="Error deleting {0}";e.CreateAsDraft="Create as draft";e.HideRenameHistory="Hide rename history";e.ABFlipTitleText="A|B Flip";e.PullRequestCreate_EditFieldsRegionLabel="Pull request edit fields";e.UserDefaultBranchDeletedErrorMessage_WithoutVersionInUrl="Branch {0} was deleted so we’ve switched you to {1}, the default branch.";e.ItemCompareContentTrimmedSxS="Displayed content is truncated due to maximum viewable content limit.  Side-by-side diff view may show full content.";e.ChangesetLinkTextSimple="Changeset {0}";e.PullRequest_CompleteMergeDialog_Title="Complete pull request";e.PullRequest_Status_Completed_Bypass="Bypassed";e.ClonePopup_IdeTitle="IDE";e.TagsPage_OneSearchResultShown="Showing 1 matching tag";e.DeleteItemDialogTitle="Delete item";e.ShowCodeReviewComments="Show code review comments";e.ComparingFilesLoadMessage="Comparing files...";e.EmptyShelveSetsResultMessage="Choose a different owner to search shelvesets most relevant to you.";e.PushRefCreatedShortFormat="Created at {0}";e.PullRequest_FilesSectionTitle="Files ({0})";e.FileViewerContentIsTrimmed="Displayed content is truncated due to maximum viewable content limit. Download file to your computer to view all of the file contents.";e.CreatePullRequestLabel="Create a pull request";e.DeleteTagConfirmationMesssage="{0} will be permanently deleted. Are you sure you want to proceed?";e.PixelDiffCanvasTitle="RGB Subtraction Diff";e.PullRequest_SaveAllComments="Save all comments";e.PullRequest_Title_Edit="A title is required";e.GettingStarted_BuildCode="or build code from an external repository";e.CreatePullRequestMenuLabel="Create pull request options";e.MergeAnimation_Description_RebaseMerge="Image of pull request being completed by rebasing the source branch and merging";e.NoResultsFound="No results found.";e.VersionSelectorNoGitRepositoriesInProject="No Git repositories were found in this project.";e.ModalDialogCancelButton="Cancel";e.AnnotateMaxHistoryWarningFormat="Warning: Only showing annotation blocks for the most recent {0} changes to this file.";e.VersionSelectorNoMatchingBranches="No branches contain the filter text";e.ErrorNotification_CloseButton_AriaLabel="Dismiss error";e.LinksControlDuplicateGitRefBranch="The selected branch is already linked to this item.";e.ChangesetAuthorDescriptionFormat="{0} checked in changeset {1}";e.ForkRepositoryVerb="Fork";e.ExplorerPathNotFoundInVersion="Cannot find path \u0027{0}\u0027 at \u0027{1}\u0027, or you do not have permission";e.HistoryExpandChildLinkFormat="Show {0} history";e.OriginalImageDimensions="(Originally {0}x{1})";e.ShowOriginalImageButtonText="Show original image";e.ManageRepositoriesLinkText="Manage repositories";e.RepositoryName="Repository name";e.RepositoryTags="{0} tags";e.InitializeText="Initialize";e.WebEditingOptionTitle="Web editing";e.HistoryList_ChangeTypeColumnHeader="Change";e.RepoPickerNoMatchingFavorites="Press Enter to search in \u0027All repositories\u0027";e.PullRequest_ActivityFeed_OptionalReviewer_1Reviewer_ManyFiles="{0} was added as a reviewer for {1} and {2} other files";e.CommitMenu_CopySHA="Copy full SHA";e.ChangesetListTo="To";e.PullRequests_ShowMoreTitle="Load more pull requests";e.UnsavedFilePreserve="Cancel";e.PullRequest_ActivityFeed_OptionalReviewer_1Reviewer_2Files="{0} was added as a reviewer for {1} and 1 other file";e.CreateTag_OKButton="Create";e.GitProjectOptionsTitle="Options for all Git repositories";e.CommitLinkText="Commit {0}";e.AddFileDialogTitle="Add or update file(s)";e.ChangeCountRenames="{0} renames";e.EngagementExplorerViewElipsisTitle="Quick file operations";e.DiffViewer_CommentAtLine="Comment at line";e.PullRequest_BranchHasOpenPullRequest="Branch {0} has an open pull request";e.ShowModifiedImageButtonText="Show modified image";e.EditFileSaveDropTitle="{0}...";e.CreateRepoTypeLabel="Type";e.RelatedArtifactTagTitle="Tag";e.Deleted="Deleted";e.CreateNewRepositoryDialogTitle="Create a new repository";e.CreateTag_InvalidCharacterMessage="A tag name cannot contain \u0027{0}\u0027.";e.PullRequest_New_Vote_Plural="{0} new votes";e.GitProjectSecurityTitleFormat="Security for all Git repositories";e.ChangeCountRename="{0} rename";e.ViewFiles="View files";e.BlamePriorThisChange="View blame prior to this commit";e.RelatedWorkItemsRemoveToolTip="Don\u0027t link this work item";e.DiffFileNameAriaDescription="Change type: {0}";e.ForksEnabledOption="Allow users to create forks from this repository.";e.PullRequest_RelatedWorkItems="Related work items: ";e.PullRequest_ActivityFeed_Reviewer_Reviewers="reviewers";e.CherryPick_PullRequestDescriptionAppendFormat="Cherry picked from Pull request {0}.";e.PullRequestList_RowAriaLabel="Pull request {0} {1} created by {2}";e.PullRequest_ActivityFeed_OptionalReviewer_1Reviewer_0Files="{0} was added as a reviewer";e.SearchCommitInBranchesDialog_SearchInBranches="Search in branches";e.PullRequestStatus_ActivityFeedTextWithIteration="{0} {1} posted on {2} by {3}";e.CheckinSuccessLinkFormat="{0}: {1}";e.SearchIncludeBranchDialogInfo="Select the branch you want to index in code search";e.GitPathLengthPolicyTitle="Maximum path length";e.PullRequest_PullRequestDetailsStatusUnKnown="Unknown";e.PushTitleFormatWithComment="{0} → {1}: {2}";e.EmptyGitHistoryResultMessage="Try a different filter criteria to search commits most relevant to you.";e.PullRequest_PRText="PR";e.PullRequest_Status="Status";e.PreviousFile="Previous file";e.KeyboardShortcutGroup_History="History";e.Changed="Changed";e.Changes="Changes";e.PullRequest_PullRequestDetailsStatusActive="Active";e.PullRequestListTooManyPeople="You belong to more than 20 teams. {0} this view to see the pull requests you care about most.";e.Revert_Dialog_Description="Revert the changes of this commit in a target branch. A topic branch will be created with the reverted changes, and then you will be prompted to create a pull request to the target branch.";e.PullRequest_ChangeExplorer_TreeFilter_FilesByFolder="Group";e.SuggestionForBranchName="Suggestion for new branch name";e.PullRequest_Filter_Mine_Short="Mine ({0})";e.CreateRepoPlaceholder="Enter a name for your Git repository";e.CreateRepoHybridVSMessage="Reminder: Visual Studio users will need Visual Studio 2015 Update 1 or later to view TFVC and Git repositories in team projects that include both types.";e.FixesKeywordExample="Fixes #123";e.ForkRepositoryDialogBranchesLabel="Branches to include:";e.AddCommentAction="Add comment";e.CreateRepositoryDialog_AddReadMeCheckboxText="Add a README to describe your repository";e.ItemCompareContentTrimmed="Displayed content is truncated due to maximum viewable content limit.";e.ChangeTypeAdd="add";e.PullRequestsStatBadgeTitle="Pull requests";e.CommitHistoryTitleFormat="{0} commits";e.PullRequestCreate_SourceBranchLabel="Source branch selector";e.SearchExcludeBranchDialogTitle="Exclude branch";e.PullRequest_Retarget_AlreadyTargetedError="This pull request already targets {0}";e.KeyboardShortcutDescription_CreateBranch="Create branch";e.FilterShelvesetOwnerText="Shelveset Owner";e.PullRequest_ActivityFeed_Pushed_Zero="{0} updated the pull request";e.PullRequest_NoRebaseTooManyCommits="Cannot rebase more than {0} commits";e.HiddenComments="{0} other comments";e.HistoryModeFullHistoryText="Full history";e.RefUpdatesSectionHeaderFormat="{0} refs updated in this push";e.PullRequest_RelatedArtifactsRemoveOkButton="Remove";e.TagControlToolTipText="Tag name: {0}";e.DiscussionAnnounceThreadDeleted="Thread deleted";e.HideCodeReviewComments="Hide code review comments";e.PullRequest_ReviewerFeedback_AwaitingResponse="No response";e.OptionUpdatedSuccessfullyMessage="Option was updated successfully.";e.EditFileRefreshTitle="File updated";e.KeyboardShortcutDescription_SelectRepository="Select repository";e.PullRequestStatus_StateLabel_Succeeded="Succeeded";e.LinkDialogBranchRepoTitle="Repository";e.PullRequest_FilesTab_TreeRegionLabel="Browse code updates and file changes for this pull request";e.DiffSummaryShowingFilesWithFilter="Showing {0} in {1}:";e.PullRequest_ActivityFeed_Iteration_Singular_Title="{0} pushed {1} commit creating {2}";e.ForkRepositoryDialogIncludeAllBranches="All branches";e.PullRequest_Comment_Singular="{0} comment";e.PullRequest_DiscussionThread_ScreenReaderLineSummary="Line {0}";e.EditDisabledDialogCheckin="check in";e.CreateTag_InvalidTrailCharacterMessage="A tag name cannot end with \u0027{0}\u0027.";e.LinksControlDuplicateChangeset="Duplicate changeset.";e.PullRequestAsDraftByDefaultTitle="Create PRs as draft by default";e.PullRequestCreate_FailedToDetermineMergeBase="Error: Unable to determine a merge base.";e.PullRequest_SystemMergeFailed="Pull request cannot be automatically merged";e.PushesTitleFormat="{0} pushes";e.PullRequest_New_Push_Singular="{0} new push";e.DefaultBranchTooltipFormat="{0} (default branch)";e.PullRequest_PolicyActionQueueBuild="Queue build";e.PullRequest_GrammaticalSeparator="and ";e.PullRequest_AnActivePullRequestExistNotification="An active pull request already exists between these branches.";e.PullRequest_CardRequested="requested";e.PullRequestCreate_WorkItemWarningDialogText="This pull request is associated with {0} work items. Are you sure you\u0027d like to create the pull request with these links?";e.HideComment="less";e.EditFileCheckinToShelvesetTitle="Save changes to a new shelveset";e.AssociatedPullRequests_AriaDescription="Click to view PR details.";e.GitSecretsScanningTitle="Check for credentials and other secrets";e.CreatingGitCredentials="Saving git credentials.";e.PullRequest_ActivityFeed_OptionalReviewer_ManyReviewers_1File="{0} and {1} others were added as reviewers for {2}";e.PullRequest_Pivot_Updates="Updates";e.PullRequestCreate_DescriptionHelperText="Enter a description for the pull request. This field is optional and supports markdown. ";e.PullRequest_Activity_Description_Label="Description";e.DiffHistoryEntryTextFormat="{0}: {1} ({2})";e.LinksControlDuplicatePullRequest="Duplicate pull request.";e.IsDisabledOptionTitle="Disable Repository";e.PullRequest_DiscussionThread_ScreenReaderLineRangeSummary="Line {0} to {1}";e.PullRequest_Pivot_Active="Active";e.HistoryList_AuthorColumnHeader="Author";e.Status_StatusMain_Failure="Failure";e.ForkRepositoryErrorNoProjectSelected="Please select a destination project for your fork.";e.AssociatedWorkItemFormat="{0} associated work item";e.GettingStarted_PushFromCommandLine="or push an existing repository from command line";e.FileTreeSearchResult="1 result.";e.RepositorySecurityTitleFormat="Security for {0} repository";e.AdditionalInformation="Additional Information";e.BranchesWithMineTabLabel="All branches";e.PullRequest_NewChangesTitle="New updates";e.GitRepositoryRenameDialogOktext="Rename";e.PullRequestSummaryHideFileDetails="Hide file content";e.PolicyWarningsLabel="The following checkin policies were not satisfied:";e.MultipleBranches_RelatedArtifactsDisplayString="{0} Branches";e.PullRequest_OtherChange_Singular="{0} other change";e.ShowAnnotations="Show Annotation blocks for this file";e.VersionSelectorCommitsFilterWatermark="Enter commit ID";e.RepoNotFound_NavigateAwayWithDefault="\u003cb\u003eOtherwise,\u003c/b\u003e navigate to your \u003ca href=\"{0}\"\u003edefault {1} repository\u003c/a\u003e.";e.PullRequest_RemovedReviewer="Removed {0}";e.ChangeExplorerCommentsModeActiveCommentsUnderFiles="Show active comments under files";e.PathSearch_FooterMessageStartTyping="Start typing to find a file or folder.";e.GitStatusStatePending="in progress";e.SelectChangesetButtonLabel="Select changeset";e.GeneralOptionsGroup="General";e.PullRequest_Pivot_Commits="Commits";e.HistoryModeFilterControlText="History mode";e.DiscussionAnnounceCommentDeleted="Comment deleted";e.PullRequest_CompleteMergeDialog_BypassReasonWatermark="Enter a reason for overriding";e.StakeHoldersFlyout_AriaDescription="Click to view author and committer details.";e.NoPermissionReadBranches="Unable to get branches.";e.MB="MB";e.In="in";e.To="to";e.PullRequest_ShareDialog_ToLabel="To";e.BuildStatusLabel="Build status";e.ElidedTextAtStart="… {0}";e.PullRequest_activityFeed_ForcePush_Title="{0} force pushed {1} commits creating {2}";e.AddNewFolder="New folder";e.CreateTag_EnterMoreCharacters="Enter at least 8 characters of the commit ID to uniquely identify the commit.";e.PullRequest_Filter_Everything_Short="Everything";e.IsDisabledOption="Disable access to the repository (including builds, pull requests, etc) but keep the repository discoverable with a warning.";e.CreateTag_EmptyTagNameError="Tag name can not be empty.";e.PullRequest_GroupReviewer_NotEnoughApprovals="{0}/{1} required approvals";e.PullRequest_Rebase_SourceRepoInaccessible="Source repository cannot be written to";e.CherryPick_PullRequestDescriptionAppendMentionFormat="Cherry picked from {0}";e.ProjectOptionsTitle="Options for {0}";e.PullRequest_Policy_ApproverCountStatus="{0} of {1} reviewers approved";e.PullRequest_QuickStart_Overview_OK="Learn about the new features";e.GitBranches_BuildStatusList="List of builds";e.LinkDialogBranchTitle="Branch";e.PullRequest_Policy_BuildPolicyExpiresInHrs="{0} expires in {1} hours";e.PullRequest_Policy_BuildPolicySucceeded="{0} succeeded";e.GettingStarted_GitForWindowsDownloadText="Git for Windows";e.PullRequest_ShareDialog_InvalidRecipient="You must remove any invalid users and groups before sharing the pull request";e.ChangeDetailsTitleCommit="Commit";e.PullRequest_CommitsTruncated_ViewAll="View all commits";e.CommitVersionDisplayText="Commit {0}";e.PathExplorer_ClearIconTooltip="Clear";e.DiscussionCommentDeleteCancel="Cancel";e.CommitSuccessMessageHtml="Committed ";e.RepoPullRequestAsDraftByDefaultGroup="Create PRs as draft by default";e.CompleteNow="Complete";e.CreateBranchDialogWorkItemsLabel="Work items to link";e.PullRequest_ResolvedDiscussionCount="{0}/{1} resolved";e.PullRequest_Filter_Mine="My comments/replies ({0})";e.ExpandCodeExplorer="Expand code explorer";e.UploadFiles="Upload file(s)";e.AddPathDialogWarning="Selected repository is not available.";e.History_GraphCalloutTitleAriaLabel="Graph message box title.";e.PullRequest_CompleteMergeDropdown_RequiresBypass="Must override policies";e.PullRequest_PingEmail="{0} is requesting your attention for {1}";e.CommitDetails_PullRequestsCalloutTitle="Pull requests";e.PullRequestListFilterTargetRefNamePlaceholder="Target branch";e.ImportRepositoryLearnMoreAboutErrorLabel="Learn more about this error";e.CreateBranchDialogInvalidTrailCharacterMessage="A branch name cannot end with \u0027{0}\u0027.";e.PullRequest_BranchHasBeenDeleted="Branch {0} has been deleted";e.UpdatingOptionMessage="Updating option...";e.PullRequest_CommitsSectionTitle="Commits ({0})";e.CommentLineInfoMultiLine="Lines {0} to {1}";e.PullRequest_ActivityFeed_PR_CompletedAndBypassedBy="{0} completed the pull request, bypassing policies";e.PullRequest_ActivityFeed_RequiredReviewer_1Reviewer_ManyFiles="{0} was added as a required reviewer for {1} and {2} other files";e.DiffICOFileWarning="This ICO file may contain multiple sizes of this image. Only one will be shown below.";e.AppleName="macOS \u0026 Linux terminal";e.SearchCommitInBranchesDialog_SearchFailedMessage="Search failed.";e.RelatedArtifactBranchTitle="Branch";e.ChangesetVersionDisplayText="as of changeset {0}";e.PullRequest_RollupStatus_MergeConflicts="Conflicts";e.EditFileCommit="Commit";e.SearchBranch="Branch";e.AddFileDialogSubfolderDescription="Use slashes to create multiple subfolders like \"sub/folder\".";e.PullRequest_ActivityFeed_Reviewer_RemovedStatus="Removed";e.PullRequest_IterationSelector_AllUpdates="All updates";e.PullRequest_ActivityFeed_PR_AbandonedBy="{0} abandoned the pull request";e.CommentLineInfoSingleLine="Line {0}";e.NoPushesFound="No pushes were found that matched the specified criteria.";e.PullRequest_ActivityFeed_View_Update_Title="View update {0}";e.EditFileCancel="Cancel";e.ExploreSpecificVersionMenuText="Explore as of this version ({0})";e.PullRequest_CompleteMergeDialog_CommitComment="Merge commit comment";e.ExplorerInvalidGitVersionError="Version descriptor \u0027{0}\u0027 is not valid for Git";e.HistoryList_PushesList_Pushed="{0} pushed {1}, {2}";e.RefUpdateFromToFormat="{0} updated from {1} to {2}";e.SearchCommitInBranchesDialog_IncludesThisCommit="includes this commit";e.ExploreLatestVersionMenuTooltip="Open source explorer to browse the latest version of this item";e.PullRequest_Policy_ApproverRejectedByMultiple="{0} reviewers are blocking";e.TagsFilterWatermark="Filter tags";e.EmptyRenameHistory="No results in rename history matched the filter criteria. Try a different filter criteria to view this file’s rename history.";e.CommitSearchWatermark="Commit ID";e.EditFileCheckin="Check in";e.PullRequestSummary_PullRequest_Created="{0} requested #{1} into {2} {3}";e.PullRequest_IterationTruncated_ViewFullIteration="View full update";e.UserNameText="User Name";e.StatBadgeTextWithCount="{0} {1}";e.PullRequestCreate_ViewFullBranchesCompareLink="View full branch comparison";e.PullRequest_ActivityFeed_Reviewer_AddedRemoved="{0} added {1} {2} and removed {3} {4}";e.NAssociatedPullRequestsBadgeTextFormat="{0} associated pull requests";e.HistoryModeFullHistorySimplifyMergesText="Full history (simplify merges)";e.CommitNewItemNameWatermark="Enter new name";e.CreateTag_TagExistsMessage="The specified tag name already exists.";e.ShowMore="Show more";e.PullRequest_CreateNewPullRequest_Title="New Pull Request";e.All="All";e.Yes="Yes";e.PullRequest_CreatePullRequestPasteCommitMessagesDescription="Append the commit message for the commits in this pull request to the description";e.EmptyRepoHeader="{0} is empty. Add some code!";e.Refs_RelatedArtifactsDescription="Latest commit {0}";e.PullRequests_Section_Header_HasMore="{0} ({1}+)";e.PullRequest_SourceRepoDoesNotExistOrNoPermission="The source repository no longer exists or you don\u0027t have permission to write to it";e.AddFileDialogUploadFilesLabel="Upload existing files";e.Draft="Draft";e.PullRequest_Rebase_SourceNotUpdating="The source branch will not be updated";e.EngagementExplorerViewElipsisContent="Add files, rename files, or more quick actions can be found right here!";e.BranchNotFoundError="Branch not found";e.Blame="Blame";e.PreviousDifferenceTooltip="Go to previous difference";e.MyCommits="My commits";e.EditFileExtendedCommitMessageWatermark="Add an optional extended description";e.LatestVersionDisplayText="Latest";e.CommitNewItemNameAlreadyExists="This name already exists on the folder.";e.LinkedArtifactsTfvcCreated="Created {0}";e.InheritPullRequestCreationModeGroup="Inherit PR creation mode";e.CommitDetailsCommittedOn="Committed on {0}";e.DiscussionCommentChangeContextTag="Update {0}";e.Hours="hours";e.VoteButtonLabel="Vote";e.PullRequest_QuickStart_Iterations_OK="Keep going";e.TagFlyout_TagNameTooltip="Tag: {0}";e.NewBranchText="New branch...";e.PullRequest_ActivityFeed_ViewCommentContext=" View the comment in its original context.";e.PullRequest_Details_Title="Pull request details";e.SearchBranchUXUnknownErrorMessage="The operation could not be completed due to an unexpected error. Try again later.";e.ChangeTypeRollback="rollback";e.SourceExplorerText="Source explorer";e.PullRequest_Pivot_Files="Files";e.SideBySide="side-by-side";e.ChangesetExplorerText="Changeset explorer";e.PullRequest_WithIdNotFound="Pull request with ID {0} was not found.";e.PullRequest_CreatePullRequestPasteTemplate="Add a template";e.AddFileDialogSubfolderVerifying="Verifying subfolder...";e.KeyboardShortcutGroup_Explorer="Files";e.BranchesContextMenuCompareBaseToTarget="Compare {0} to {1}";e.CheckinSuccessfulMessage="View checkin details";e.PullRequestCreate_SourceBranchPlaceholder="Select a source branch...";e.FileListColumnChangesets="Changesets";e.GitSecretsScanningLearnMoreLink="https://aka.ms/advancedsecurity/secret-scanning";e.PullRequest_CannotComplete_MergeConflicts="This pull request has merge conflicts";e.OffText="Off";e.FileCountTooltipFormat="{0} files affected";e.DeleteTag_Option="Delete tag";e.CommitDiffSummaryControlFailedToGetCommits="Failed to retrieve commits for summary information. {0}";e.PullRequest_TargetBranchDeleted="The target branch has been deleted.";e.EditorPreferencesDialogTitle="Editor preferences";e.WebEditLimitWorkaroundGit=" This limitation does not apply to using your favorite IDE or git.exe for this operation.";e.RepoPickerNoFavoritesMessage="No repositories have been favorited";e.PullRequest_DefaultPullRequestTitle="Merge {0} to {1}";e.PullRequest_CompleteMergeDialog_NoLegalMerges="Conflicting policies set at different scopes prohibit all possible pull request merges.";e.ChangesetsGroupTitle_Plural="{0} changesets";e.CreateRepoLearnMoreLabel="Learn more about Git and TFVC in one project.";e.EditFileDiffSideBySide="Show diff side-by-side";e.SccShortItemTitleForImageNoPath="{0} ({1}x{2})";e.PullRequest_ActivityFeed_PR_CompletedAndBypassedByWithReason="{0} completed the pull request, bypassing policies {1}";e.SelectTag="Select a tag...";e.ManageSshKeys="Manage SSH keys";e.SccItemTitle="{0} Version:{1}";e.PullRequest_RelatedArtifactsRemoveConfirmation="Are you sure you want to remove this work item link? Removing the link does not delete the work item.";e.PullRequest_QuickStart_Files_Title="Show me the code";e.PullRequest_ActivityFeed_ResetMultipleVotesWithInitiatorNoReason="{0} reset the vote of {1}";e.AttachmentTypeValidationError="The file type \"{0}\" is not valid for attachments.";e.PullRequest_PullRequestCompletionActions="Pull Request Completion Actions";e.PullRequest_Reviewers_Approved="Approved by reviewer(s)";e.AddFileDialogDefaultCommentSingleFile="Added {0}";e.SearchBranchAlreadyConfiguredErrorMessage="This branch is already included. Select another branch to continue.";e.Contents="Contents";e.ExploreThisVersionMenuTooltip="Open source explorer to browse the repository as of this version ";e.MyChanges="My changes";e.PullRequest_SuggestionBranchTitle="Go to branch {0}";e.PullRequest_CreatePullRequestButtonToolTip="Create new pull request";e.EmptyRepo_UsernameCopyButtonTooltipBeforeCopied="Copy username to clipboard";e.CheckinSaving="Checking in changes...";e.CreateBranchDialogFromCommitTitle="Commit to new branch";e.PullRequests_ResultHeader_AssignedToTeamWithName="Assigned to {0}";e.VersionedItemLinkDialogTitle="Link to";e.ChangeExplorerCommentsModeCommentsOnly="List comments only";e.PullRequest_ChangeExplorer_TreeFilter_FilesByFolderLong="Group files by folder";e.VersionSelectorEnterValidCommits="Invalid commit ID. Check the commit ID and try again.";e.DiffFileNameLinkAriaLabel="View diff for file {0}";e.History_GraphCalloutContentAriaLabel="Graph message box content.";e.SearchCommitInBranchesDialog_FetchingStatus="Fetching status";e.PullRequest_QuickStart_Vote_Desc_2="You\u0027ve got the basics down. Get back to your review on the {0} tab.";e.PullRequestListFilterCreatorPlaceholder="Created by";e.VersionControlAdministrationTtile="Version Control Administration";e.Actions="Actions";e.HistoryResultHeaderAuthor="Author";e.CommitFailedMessageFormat="Failed to commit changes: {0}";e.PullRequest_CompleteMergeDialog_TransitionWorkItemsDisabledCheckboxLabelText="No work items are linked to this pull request";e.CommitRequiresGatedCheckin="Your check-in could not be completed because it affects the following gated build pipelines";e.Status_Tooltip_Primary_Error_Plural="Errors reported";e.PullRequest_SourceBranchHasPolicies="Cannot delete a branch which has policies";e.PullRequestStatus_StateLabel_Failed="Failed";e.EmptyRepo_UsernameCopyButtonTooltipAfterCopied="Username copied!";e.CreateBranchDialogTitle="Create a branch";e.ChangeExplorerCommentsModeOnlyFiles="Only show files with comments";e.PullRequestSearchToolTip="Go to a pull request by entering its ID.";e.LearnMoreAboutAuthenticationOptions="Learn more about authentication options";e.RepoNotFound_UpdateBookmark="\u003cb\u003eIf you navigated here from a bookmark,\u003c/b\u003e you will need to update your bookmark.";e.BranchCreateError="Failed to create {0}";e.FilePathInvalidEnding="Invalid name. The name cannot end with a dot (.) or a space.";e.PullRequest_ActivityFeed_ResetMultipleVotesThreeVotes="{0}, {1}, and {2}";e.NewReposCreatedBranchesManagePermissionsEnabled="Allow users to manage permissions for their created branches";e.GitSettingError="Sorry, something went wrong. Details:";e.DiffSummaryChangedSingleFile="{0} file change";e.CommitPickerDialogTitle="Find commits";e.PullRequest_ActivityFeed_ResetMultipleVotesNoInitiatorMultipleVotesWithReason="Votes of {0} were reset: {1}";e.PullRequest_ActivityFeed_PRCreatedCardText="Created by {0}";e.RawNewContentOnTooltip="Show modified file only";e.CommitDetails_ParentItem_Description="Click to view diff with Parent {0}.";e.PullRequest_Policy_ApproverRequiredVoteOnLastIteration="At least one reviewer must approve the most recent iteration";e.Status_Tooltip_Secondary_Error_Singular="{0} error";e.PushTitleFormat="{0} → {1}";e.PullRequest_UnsavedComments="{0} unsaved comments will be saved when voting";e.AliasLabelText="Alias (optional)";e.ChangesetHistoryTitleFormat="{0} history";e.EditFileEncodingWillChangeNewChars="Non-ASCII characters have been added. Committing will encode this file as UTF-8.";e.PRUnfollowSuccess="You are no longer following this pull request";e.PullRequest_ActivityFeed_Generic_Reviewers_Added="Reviewers were added by a branch policy";e.PreviewOffTooltip="Show raw content";e.DiscussionCommentLikeThisComment="Like this comment";e.DiffFileFolderNotFoundInChangelist="Could not find file or folder \"{0}\". Select a file or folder from the tree.";e.PullRequestListFilterTargetRefNameTooltip="Target branch: {0}";e.NewReposCreatedBranchesManagePermissionsEnabledTitle="Allow users to manage permissions for their created branches";e.KeyboardShortcutDescription_PullRequests="Pull requests";e.VCToggleLabel="{0}. {1}. Press to toggle the setting.";e.PullRequest_SetIsDraft="Mark as draft";e.PullRequest_CompleteMergeDropdown_Squash="Squash commit";e.AddCommitOverallComment="Add an overall comment for this commit";e.PullRequest_Policy_BuildPolicyDefaultName="Build";e.CommitDetails_BranchIndicator_Tooltip="This commit exists in the branch {0}. View files in this branch.";e.DeletedLowerCase="deleted";e.PullRequest_Pivot_Discussion="Discussion";e.PullRequest_CompleteMergeDialog_MergeTitleWatermark="Enter a short description of the pull request";e.PullRequest_HubName="Pull Requests";e.PullRequest_CompleteMergeDialog_PostCompletion="Post-completion options";e.MergeSourceVersionDisplayText="Merge source for changeset {0}";e.ItemPathPlaceholder="Item path";e.FilesDifferOnlyInWhitespaceMessage="The selected files differ only in whitespace.";e.DiffParentCommitTitleFormat="Diff Parent {0} ({1})";e.NoFavoritesFound="No favorites found";e.PullRequest_PolicyMergeStrategySquashForbidden="Forbidden by policy";e.PixelDiffTitleText="Pixel Diff";e.PullRequest_SuggestionBranchPushed1="You updated ";e.PullRequest_SuggestionBranchPushed2="{0} — ";e.ChangesetListFrom="From";e.ShelvesetSearchWatermark="Shelveset Title";e.ChangesetListPath="Path";e.KeyboardShortcutDescription_Branches="Branches";e.BranchFindError="Failed to find {0}";e.RestartMergeUnnecessary="Merge is already up to date. Source and target branches have not changed since the last merge.";e.ModalDialogSaveButton="Save";e.PullRequest_ReviewerFeedback_NoResponse="No response";e.PushNewRefExplore="Explore the repository at this version";e.PullRequest_Policies_MoreActions="More actions for this policy";e.PullRequest_Filter_New_Short="New ({0})";e.PreviewOnLabel="Preview";e.TagsPage_CompleteSearchResultsShown="Showing {0} matching tags";e.AddChangesetOverallComment="Add an overall comment for this changeset";e.PullRequest_CompleteMergeDialog_CancelText="Cancel";e.RenameRepositoryMenuItem="Rename repository...";e.RelatedArtifactCreatePullRequest="Create a pull request";e.MergeAnimation_Description_Rebase="Image of pull request being completed by rebasing the source branch";e.PullRequestStatus_StateLabel_Error="Error";e.PullRequest_DiscussionThread_ScreenReaderCommentsUnreadContent="New";e.BinaryContentAdded="Binary content added";e.LinkDialogLatestVersion="Latest Version";e.PullRequest_ActivityFeed_PR_BypassReason="Bypass Reason: {0}";e.CreateNewRepositoryLinkText="New repository";e.PullRequests_RelatedArtifactsDescription="Created {0}";e.MergeAnimation_Description_Squash="Image of pull request being completed using a squashed commit";e.PullRequest_NoCalloutMessage="Pull request status does not need attention at this time.";e.FileListColumnName="Name";e.ClonePopup_Title="Clone repository";e.UnchangedLowerCase="unchanged";e.PullRequest_DelegateReviewerViaFormat="via {0}";e.KeyboardShortcutDescription_SelectBranch="Select branch";e.VersionSelectorNoGitRepositoriesInCollection="No Git repositories were found in this project collection.";e.UpdatedExistingPullRequestAfterCommit="Updated ";e.CommitComment="Commit comment";e.SinglePushPageTitleFormat="{0} update";e.PullRequest_CallToAction_ExternallyCompleted="{0} closed the pull request on {1}. No merge was performed since {2} already included these changes.";e.PullRequest_CompleteMergeDialog_WorkItemTransitionWarningLearnMore="Learn more";e.PullRequest_ActivityFeed_VoteReject="Rejected by {0}";e.PullRequest_NewChangesNoIterations="Code updates were pushed to this pull request. Refresh to view them.";e.InvalidPullRequestId="The provided Pull Request ID is invalid. The Pull Request ID should be a whole number.";e.PullRequest_Filter_HideComments_Short="Hide";e.ChangeDetailsAuthoredAriaLabel="{0} authored on {1}";e.CommitDetails_FirstPRdetailsRow_AriaLabel="First Pull Request: {0} requested Pull Request {1} into branch {2} at {3}.";e.CommitDetailsParentSelectorDiffTo="Diff to";e.CommitDetailsPushedAriaLabel="{0} pushed on {1}";e.GitStatusStateSucceeded="succeeded";e.EditFileSelectDiffMode="Select diff mode";e.PullRequest_FilesTab_NewPushLiveLabel="Code updates were pushed to this pull request ({0} new).";e.SearchBranchIndexingDelayErrorMessage="Indexing may take up to 12 hours to fully initialize.";e.LearnMore="Learn more";e.HistoryCollapseChildLinkFormat="Hide {0} history";e.CherryPick_Dialog_Oktext="Cherry-pick";e.PullRequest_CompleteMergeDialog_MergeTitle="Merged PR {0}: {1}";e.CompareToLatest="Compare to latest version";e.PullRequestSearchWaterMark="Pull request ID";e.PullRequest_CallToAction_AutoCompletion_Options="Changes will be {0} into {1}. Branch {2} will be {3}. Work items will be {4}.";e.RepoPickerFavoritesTabLabel="Favorites";e.PullRequest_Reviewers="Reviewers";e.AdminPage_GitTree_allTags="All tags";e.PreviewOnTooltip="Show content preview";e.PullRequest_MergeConflictsHeaderWithCount_Plural="{0} conflicts prevent automatic merging";e.ResultsFetchedText="Results fetched.";e.TipVersionDisplayText="Tip version of {0}";e.FileViewerDefaultCommitMessage="Updated {0}";e.RestartMergeSuccessful="Merge updated successfully. {0}";e.PullRequest_Policy_BuildPolicyWaitingForMerge="{0} waiting for merge";e.PullRequestCreate_FailedToCheckForExistingPullRequest="Failed to check for existing pull request.";e.ContextMenuCodeSearchToTextLabel="Search for text";e.LearnMoreAboutFormat="Learn more about {0}";e.PullRequest_NounSeparator=", ";e.SearchCommitGitVersionSelectorActionsMenuItemTagsLabel="Search in tags starting with \"{0}\"";e.VersionControl_MessageBar_DismissButton_AriaLabel="Dismiss this message";e.GitStatusStateNeverBuilt="never built";e.PullRequest_FilterAnnouncement_ResultsSingular="{0}{1} pull request found{2}";e.CreateBranchDialogFromGitRefLabel="Based on";e.HistoryList_Changeset_Created="{0} created #{1}, {2}";e.CommitRenameToSameNameError="Enter a different name or Cancel.";e.PullRequestStatus_StateLabel_NotSet="Not set";e.PullRequest_PullRequestDetailsTitle="Pull Request {0}: {1}";e.PushDeletedRefExplore="Explore the repository at the deleted version";e.GitAuthorEmailPolicyDescription="Block pushes with a commit author email that does not match the following patterns.";e.WebEditLimitWorkaroundTfvc=" This limitation does not apply to using your favorite IDE or tf.exe for this operation.";e.GitBranchUpdatesFilterAriaLabel="Branch updates filters";e.PullRequest_CallToAction_Reactivate="This pull request was abandoned {0}.";e.CreateNewRepository="Create new repository";e.PullRequest_ActivityFeed_Reviewer_Added="{0} added {1} reviewers";e.DisableAutoCompleteDialog_Title="Cancel auto-complete?";e.PullRequest_CompleteMergeDialog_MergeTitleTitle="Pull request title";e.HistoryList_CommitColumnHeader="Commit";e.PullRequest_CompleteMergeDropdown_Rebase="Rebase and fast-forward";e.PullRequest_Vote_Reject="Reject";e.EmptyChangesetsHistoryMessage="No results in {0} history matched the filter criteria. Try a different filter criteria to view this file’s {0} history.";e.ValidationMessageIsRequired="{0} cannot be empty.";e.PullRequest_Reviewers_Rejected="Rejected by reviewer(s)";e.SingleCommit_RelatedArtifactsDisplayString="1 Commit";e.ProjectSelectorAriaDescription="Project selector";e.PullRequest_Merge="Merge";e.NoResultsFoundInLoadedItems="No results found in currently loaded files.";e.RepoCreatedBranchesManagePermissionsEnabled="Permissions management";e.DiffHistoryEntryTitleFormat="{0} on {1} by {2}\r\n\r\n{3}";e.PullRequest_DiscussionThreadCollapseWidget_ExpandDiscussion="Show comment";e.NextFileTooltip="Go to next file";e.PullRequest_DelegateReviewerTwoPeople="{0} and 1 other";e.Changeset="Changeset";e.PullRequest_Views="Pull request views";e.AddFileDialogSubfolderEmptyError="Folder name cannot be empty under {0}. Check for extra slashes.";e.PullRequest_OptionalReviewer_AllApproved="Optional reviewers have approved";e.EmptyTagsResultTitle="No results found";e.EditFileUpdatedAfterEditAlert="This file has been updated by another client since it was initially loaded for editing, and your changes cannot be saved.  Please copy your edited version for merging offline or try again later.";e.GitGraphMessage_Title_FeatureEnabled="Why are my commits in this order?";e.PullRequest_Title="Title";e.PullRequest_ActivityFeed_OptionalReviewer_2Reviewers_ManyFiles="{0} and {1} were added as reviewers for {2} and {3} other files";e.CommitSearchInvalidText="Invalid commit ID. Please enter the full 40 character commit ID/hash, or 1 or more characters from the beginning of a commit ID. Valid characters are numbers from 0-9 and letters a-f.";e.PullRequest_Share="Share Pull Request";e.PathExplorer_NoSearchAriaLabel="Path explorer";e.PullRequestStatBadgeTitle="Pull request";e.LockBranchMenuItem="Lock branch";e.PreviousVersionDisplayText="Previous version of {0}";e.PullRequest_Vote_Plural="{0} votes";e.AffectedFilesPluralFormat="{0} items affected";e.GitFileNamePolicyTitle="File path validation";e.CommittedByAlternateFormat="\u003cstrong\u003e{0}\u003c/strong\u003e committed {1}";e.PullRequest_ViewedFilesCount="{0}/{1} reviewed";e.GettingStarted_IntelliJText="IntelliJ";e.PushDeletedRefDownload="Download the contents of the repository at the deleted version";e.RestartMerge="Restart merge";e.TagsPage_PartialSearchResultsShown="Showing first {0} of matching tags";e.NoCommitsStartsWithError="No commits were found with commit ID starting with \"{0}\"";e.LoadingText="Loading...";e.WorkItemDetail="Current state is {0}. Currently assigned to {1}.";e.CreateBranchDialogInputsDescription="Branch creation parameters";e.PullRequest_RollupStatus_MergeConflicts_Description="Pull request has merge conflicts";e.PullRequest_ActivityFeed_ResetMultipleVotesTwoVotes="{0} and {1}";e.GitPathLengthPolicyDescription="Block pushes that introduce paths that exceed the specified length.";e.DefaultBranchNameNoLink="New repositories will be initialized with this branch. You can change the default branch for a particular repository at any time.";e.CreateTag_TagFromLabel="Tag from";e.ItemCompareContentTrimmedShort="File is truncated";e.PullRequests_RelatedArtifacts_FailToCreate_NoWorkItemClient="Failed to create the link. Could not load the work item service.";e.GitRepositoryDeleteDialogTitle="Delete {0} repository";e.GitCaseEnforcementTitle="Case enforcement";e.PullRequest_CompleteMergeDialog_RebaseCommitMessage="Rebase uses your existing commit messages";e.RefDeletedTitleFormat="{0} deleted";e.PullRequset_ConflictDescription_AddAdd="Added in both";e.GitSettingInherited="This setting is inherited from the project level.";e.TagsTabLabel="Tags";e.CompareModifiedVersionPickerAriaLabel="Modified version: {0}";e.PullRequest_AddReviewer="Add Reviewer";e.PullRequest_PullRequestDetailsMergeStatus_Conflicts="Merge conflicts";e.History_GraphCalloutCloseButtonAriaLabel="Close graph message box.";e.MergeCommitTitleFormat="Merge Commit ({0})";e.StrictVoteModeGroup="Strict Vote Mode";e.PullRequest_Policies_Broken="{0} policy is broken";e.CommitDescriptionFormat="commit {0}";e.IdenticalFilesMessage="The files are identical in content.";e.PathSearch_ErrorMessageRepositoryTooLarge="Enter a path to navigate to a file or folder. Repository too large to search.";e.PullRequest_Policy_BuildPolicyExpired="{0} expired";e.PullRequest_OtherChange_Plural="{0} other changes";e.PullRequset_ConflictDescription_EditDelete="Edited in source, deleted in target";e.PullRequest_CommentTextAreaAriaLabel="Enter a comment. This field supports markdown.";e.PullRequest_HideWorkItemSearch="Hide work item search";e.BranchDeleteError="Failed to delete {0}";e.PullRequest_ViewedFilesCountTooltip="{0} out of {1} files are marked as reviewed.";e.RefreshButton="refresh";e.PullRequest_CommentRequirementsPolicyFailed="Not all comments resolved";e.PullRequest_NotReady="Waiting for the author";e.CheckinSuccessMessageHtml="Checked in changeset ";e.XAuthoredY="\u003cstrong\u003e{0}\u003c/strong\u003e authored {1}";e.DefaultRenameCommentFormat="Renamed {0}";e.PullRequest_QuickStart_Vote_Title="Give your approval when the code is ready";e.BranchNameCannotBeEmpty="Branch name cannot be empty.";e.SearchCommitInBranchesDialog_TitleDescription="Check to see if this commit SHA is in a specified branch or tag.";e.CreateRepositoryDialog_FilesToInclude="Files to include";e.PullRequest_Pivot_Completed="Completed";e.PullRequest_NotFound="Pull request {0} doesn\u0027t exist.";e.ChangeTypeRename="rename";e.PullRequest_ActivityFeed_ResetAllVotesNoUser="All votes reset";e.PullRequest_ActivityFeed_DismissButtonLabel="Dismiss this message";e.EmptyGitRepoGetStartedIntellJLink="https://go.microsoft.com/fwlink/?LinkID=723021";e.PullRequest_RelatedArtifactsRemoveLabel="Remove work item";e.NextDifferenceTooltip="Go to next difference";e.DiscussionCommentDisabledContextCallout="Comment posted on update {0}";e.PullRequestCreate_FailedToFindRefData="Failed to obtain target and source reference data.";e.Annotate="Annotate";e.DiffSummaryChangedFiles="{0} file changes";e.PullRequest_ChangeExplorer_DiscussionThread_Title="{0}: \"{1}\"";e.PullRequest_CompleteMergeDialog_ByPassPolicyWarning="{0} required branch policies are not passing.";e.PullRequest_CompleteMergeDialog_SquashMergeLink="Learn more";e.EclipseName="Eclipse";e.LearMoreAboutSshLinkHref="https://go.microsoft.com/fwlink/?LinkID=715524";e.ViewedStateSavingErrorFormat="{0} Local checkmarks may not be saved.";e.GitAsyncOperation_PermissionRequired="Failed to create branch {0}. {1}";e.SearchDefaultBranch="Default";e.SearchIncludeBranchDialogTitle="Select branch to index";e.GitAsyncOperation_RefNameConflict="Failed to create branch {0}. Branch name already exists.";e.SearchExcludeBranch="Exclude";e.PullRequest_FilesTab_RetargetLiveLabel="The target branch was changed.";e.Revert_Conflict="Encountered conflicts when reverting commit \u0027{0}\u0027. This operation needs to be performed locally.";e.PullRequset_ConflictDescription_DirectoryFile="Directory in source, file in target";e.GitGraphCellAriaLabel="Graph cell";e.PullRequest_Retarget_AutocompleteCancelWarning="Changing the target branch will disable auto-complete";e.CreateRepoNameRequiredMessage="A name is required.";e.IllegalGitFolder="Invalid name. Cannot add a \".git\" file or folder at the root of the repository.";e.PullRequest_ActivityFeed_OptionalReviewer_ManyReviewers_ManyFiles="{0} and {1} others were added as reviewers for {2} and {3} other files";e.GoToLatestChangeset="Go to latest changeset";e.PullRequest_ActivityFeed_TargetRenameIterationWithOldBranch_Title="{0} changed the target branch from {1} {2} to {3} {4} creating {5}";e.CancelAutoComplete="Cancel auto-complete";e.PullRequest_ClosePullRequest="Close";e.RenameDialogFoldernameLabel="Folder name";e.VersionSelectorAriaDescribeActions="Contains additional ref actions.";e.VersionControlCommitDetailsNavigateToCommit="Navigate to commit {0}";e.BranchLabelText="Branch/Tag";e.PullRequest_RelatedArtifactsTitle="Work Items";e.CommitNewItemNameLabel="Rename as";e.PullRequest_CompleteMergeDropdown_RebaseMerge="Semi-linear merge";e.LinkDialogPullRequestIdTitle="Pull Request";e.PushesPage_ForcePushBadgeTooltip="This push has deleted commits";e.PullRequest_ActivityFeed_CommentContextNotification="This file no longer exists in the latest pull request changes. It may have been moved or deleted.";e.ChangeExplorerDisplayModeByFolder="Files by folder";e.EditFileDiscard="Discard";e.LinkDialogTagTitle="Tag";e.PullRequest_LoadingUpdate="Loading update...";e.GitRepositorySelectorTfvcTooltip="{0} (Team Foundation Version Control)";e.PullRequest_CommentRequirementsPolicySucceeded="All comments resolved";e.PullRequest_RelatedArtifactsAddWatermark="Search work items by ID or title";e.PullRequest_Completed="Completed {0}";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesActiveComments="Active";e.AddFileDialogGitPlaceholderDescription="Git folders cannot be empty, so a placeholder file will be added. Its content can be edited before commit.";e.ShowRenameHistory="Show rename history";e.EditorPreferencesMonacoMenuLabel="User Preferences";e.CherryPick_CommitTitleFormat="Cherry-pick \u0027{0}\u0027";e.UnsavedFileNavigateAwayFormat="You have unsaved changes made to file \u0027{0}\u0027 which will be lost if you navigate away. Are you sure you wish to discard these changes?";e.EditorPreferencesDialogFolding="Enable code folding";e.GitPolicyPathFilterTooltipText="Exact paths begin with \"/\". You can specify exact paths and wildcards. You can also specify multiple paths using “;” as a separator. Paths prefixed with “!” are excluded. Order is important.";e.EditFileEncodingWillChange="Committing will change the file encoding from code page {0} to UTF-8.";e.ShowMoreComment="more...";e.AddFileDialogDefaultComment="Added files";e.PullRequest_UnsavedChanges_Title="Are you sure you want to switch branches?";e.PullRequest_ZeroReviewers="No reviewers";e.PullRequest_SignalR_StaleState="Live updates for this pull request were temporarily interrupted. Refresh to view the latest.";e.CreateBranchDialogInvalidLeadCharacterMessage="A branch name cannot start with \u0027{0}\u0027.";e.ForkRepositoryDialogIncludeDefaultBranch="Only the default branch ({0})";e.DownloadVisualStudio="Download Visual Studio";e.GitPersonalAccessTokenFormat="Git: {0} on the website.";e.Revert_ProgressMessage="Reverted commit \u0027{0}\u0027";e.PushNewRefDownload="Download the contents of the repository at this version";e.PullRequest_Approve="Approved";e.ShelvesetsGroupTitle_Singular="{0} shelveset";e.PullRequest_LoadMore="Load more";e.PullRequest_MergeConflictsFooter_NextSteps="Next steps:";e.RepoCreatedBranchesManagePermissionsEnabledOption="Allow users to manage permissions for the branches they created";e.PullRequest_SourceBranchDeleted="The source branch has been deleted.";e.HideAnnotations="Hide Annotation blocks for this file";e.CreateBranchDialogNewBranchLabel="Name";e.EmptyRepo_HttpSshCopyButtonTooltipBeforeCopied="Copy clone URL to clipboard";e.CreateBranchDialogFailedToCreateBranchFromRefMessage="Failed to create branch {0} from {1} with error: {2}";e.RefUpdateNotFoundFormat="ref {0} was not updated in the current push";e.PullRequest_ActivityFeed_Commented="{0} commented";e.PullRequest_ActivityFeed_Update_Name="update {0}";e.CommitSaving="Committing changes...";e.OKLabel="OK";e.VersionedItemLinkText="Version {0} of {1}";e.PullRequest_ActivityFeed_OptionalReviewer_2Reviewers_1File="{0} and {1} were added as reviewers for {2}";e.FilePathInvalidCharacter="Invalid name. The name cannot contain any of the following characters: \" / : \u003c \u003e \\ * ? |";e.LinkDialogSpecifyChangesetId="Specify changeset ID.";e.PixelDiffDisabledTitle="Pixel Diff (only available for same-size images)";e.ShelvesetNotFound_Error="Shelveset {0} was not found.";e.VersionControlCommitDetailsCopyTitleToolTip="Copy title to clipboard";e.PullRequest_CallToAction_Completing_Other="{0} is completing the pull request...";e.SetupRelease="Set up release";e.AddFileDialogAlreadyExistsErrorFormat="Item at path \u0027{0}\u0027 already exists. Please provide a unique filename.";e.SwitchBaseTargetBranches="Switch base and target branches";e.FileViewerUnableToShowContent="This file contains non-printable characters and no other viewer was found for file extension \"{0}\". ";e.ReleaseGitStatusEllipsisFormat="{0}...";e.SccShortItemTitleForImage="{0} ({1}x{2}); {3}";e.TagFlyout_TaggerText="{0} tagged on {1}";e.PullRequestListCustomSectionClear="Clear filters";e.ShelvesetAuthorDescriptionFormat="{0} shelved {1}";e.ForkRepositoryDialogBranchInclusionDisabledTooltip="All branches will be included in the new fork because no default branch is currently set for this repository";e.PullRequest_ActivityFeed_Voted="{0} voted \"{1}\"";e.PullRequestSummaryShowFileDetails="Show file content";e.DiffSummaryToolbarAriaLabel="Diff summary toolbar";e.PreviousCommentTooltip="Go to previous comment";e.PullRequestListCustomSectionEmpty="No pull requests match your custom filter.";e.PushesPageTitleFormat="{0} updates";e.PullRequest_SourceBranchDoesNotExist="The source branch does not exist. Please select a different branch.";e.PullRequest_CompleteMergeDialog_SquashMergeCheckboxLabelText="Squash changes when merging";e.CommitBranchBasedOnLabel="Based on: {0}";e.UnlockBranchMenuItem="Unlock branch";e.PullRequest_MergePolicies_CheckingPolicies="Checking for policies...";e.GitGraphMessage_Content_RowLimitReached="You do not see new graph data for rows beyond {0}. You can use the date filters and optimize the results to view the graph.";e.PullRequestListCustomSectionTitle="Custom";e.DiffFileFolderNotFound="Could not find file or folder \"{0}\"";e.PullRequestListCustomSectionReset="Clear filter";e.AnnotateActionMenuItemText="Annotate this file";e.ChangesetSearchInvalidText="Invalid changeset ID. Please enter a number greater than 0.";e.PullRequest_CompleteMergeDropdown_Merge_Details="Nonlinear history preserving all commits";e.PullRequestListFilterCreatorAriaLabel="Filter pull requests by creator";e.PullRequest_Labels_Section_Title="Labels";e.PullRequest_MergePolicies_Section_Title="Policies";e.DefaultRenameCommentFormatFromTo="Renamed {0} to {1}";e.CommitBranchNameLabel="Branch name";e.KeyboardShortcutGroup_Code="Code";e.DiscussionCommentDeleteTitle="Delete comment";e.PullRequest_Fork_DefaultPullRequestTitle="Merge {1}: {0} to {2}";e.PullRequestListFilterReviewerPlaceholder="Assigned to";e.CreateRepoStatusStarted="Creating repository...";e.PullRequest_SystemRefUpdateSingleCommitPushed="commit pushed";e.PullRequest_CreatePullRequest="Create a new pull request...";e.FileViewerEditFileMenuToolTip="Click to edit the file";e.GitShortCommentWithTags_ClickToSeeMoreMessage="[Click message to see more]";e.EmptyGitRepoGetStartedNewEclipseLink="https://go.microsoft.com/fwlink/?LinkID=723023";e.EditorPreferencesDialogWordWrap="Enable word wrap";e.LinkDialogPullRequestRepoTitle="Repository";e.AddFileDialogFileUsedAsFolder="The path is invalid because {0} is a file and not a folder.";e.Revert_Dialog_Title_PullRequest="Revert pull request {0}";e.CodeReviewAutoCompleteCleared="{0} cancelled automatic completion of the pull request.";e.CommitIdNotFound_Error="The given commit was not found.";e.KeyboardShortcutDescription_Shelvesets="Shelvesets";e.PullRequest_Filter_Everything="Show everything";e.PullRequest_RelatedArtifactsRemoveAllOkButton="Remove all";e.PullRequest_QuickStart_Iterations_Desc="Active pull requests are often updated to incorporate the suggestions made by others. See the changes from all updates or just the changes introduced in a specific update.";e.ChangeCountAdd="{0} add";e.FilterButtonClearFilters="Clear";e.PullRequest_ActivityFeed_TargetRenameIteration_Title="{0} changed the target branch to {1} {2} creating {3}";e.RenamedFromFormat="renamed from {0}";e.VersionSelectorNoMatchingMyBranches="Press Enter to search in \u0027All branches\u0027";e.ChangeDetailsAssociatedWorkItems="Associated work items";e.GitGraphRowAriaLabel="Graph row for commit {0}";e.PullRequest_SignalR_Reconnecting="Live updates for this pull request have been temporarily interrupted. Reconnecting...";e.DiffSummaryShowingFiles="Showing {0}:";e.CreatePersonalAccessTokenOneTimeWarning="Copy the password now. We don\u0027t store it and you won\u0027t be able to see it again. ";e.ShelvesetResultsForOwner="Shelvesets for owner: {0}";e.LinksControlDuplicateVersionedItem="Duplicate versioned item.";e.Status_Tooltip_Primary_Error_Singular="Error reported";e.CommitFailedUsePullRequest="Could not update {0}. Commit to a new branch, then use a pull request to update {0}.";e.DateVersionDisplayText="As of \u0027{0}\u0027";e.AddFileDialogPathTooLong="The complete path is too long. Limit {0} characters.";e.ChangeDetailsPageTitle="Commit {0}: {1}";e.PullRequest_Filter_ResolvedComments_Short="Resolved ({0})";e.PullRequest_DescriptionPlaceHolder="Describe the code that is being reviewed";e.PullRequest_ActivityFeed_Reviewer_DeclinedStatus="Declined to review";e.LinkDialogChangeset="Changeset";e.VersionSelectorNoTags="There are no tags in this repository";e.PullRequest_ReviewerFeedback="Reviewers";e.ChangedByTooltip="Changed by {0}";e.EmptyRepo_HttpSshTextAriaLabel="Clone URL";e.ChangeDetailsAuthoredOn="Authored on {0}";e.PullRequest_ReviewersDelegateTooltipLabel="List of reviewers voted for this group";e.RepoNotFound_NavigateAway="\u003cb\u003eOtherwise,\u003c/b\u003e navigate to an existing repository using the repository selector.";e.InitRepoWithDefaultFilesMessage="Added {0} files";e.PullRequest_Complete="Complete";e.EditorPreferencesDialogTooltip="Editor preferences";e.PullRequest_IterationSelector_UpdateNtoM="Update {0} to {1}";e.GetMergeBaseError="There was an error calculating the common commit for the specified branches.";e.PullRequest_Policy_BuildPolicyExpiresIn1Min="{0} expires in 1 minute";e.PullRequest_Policy_BuildPolicyExpiresInDays="{0} expires in {1} days";e.PullRequest_Policy_BuildPolicyExpiresInMins="{0} expires in {1} minutes";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesHideComments="Hide";e.SaveGitCredentials="Save Git Credentials";e.Status_Tooltip_Secondary_Success="{0} successful";e.SearchExcludeBranchDialogInfoEnding=" would make it no longer searchable.";e.PullRequest_New_Vote_Singular="{0} new vote";e.PullRequest_SourceAndTargetBranchDeleted="Source and target branches have been deleted.";e.PullRequest_ActivityFeed_RequiredReviewer_ManyReviewers_ManyFiles="{0} and {1} others were added as required reviewers for {2} and {3} other files";e.PullRequest_ShareDialog_Title="Share Pull Request";e.PullRequest_New_Push_Plural="{0} new pushes";e.RepoStatsActivePullRequestsTitle="active pull requests";e.GoToRepositoryRoot="Go to repository root";e.Changesets_NoPermission="You don\u0027t have sufficient permission to view this changeset.";e.ShelvesetsGroupTitle_Plural="{0} shelvesets";e.AddReadMeCheckboxText="Add a README";e.PullRequest_Policies_Rejected="{0} rejected";e.Status_StatusMain_Error="Error";e.SccShortItemTitle="{0}; {1}";e.TagsPage_ListHeader_Commit="Commit";e.ImportRepositoryText="Import";e.GitRepositoryDeleteDialogOkText="Delete";e.PullRequset_ConflictDescription_DeleteEdit="Deleted in source, edited in target";e.ForkRepositoryDialogTitle="Fork {0} to...";e.CheckinCommandLabel="Check in...";e.PullRequest_CallToAction_ExternallyMerged="All changes in pull request have been merged to {0}.";e.GettingStarted_QuickInitialize="or initialize with a README or gitignore";e.RefCreatedFormat="{0} created at {1}";e.SideBySideDiffTitle="Showing \"side-by-side\" diff mode. Click to switch to inline mode.";e.AddFileDialogReplaceFileFormat="[Replace] {0}";e.TransitionStickyOptionTitle="Work item transition preferences";e.History_GraphToggleOnLabel="Hide Graph - Currently showing commits in topological order";e.PushRefUpdateShortFormat="Updated to {0}";e.CommitsTabWithCountFormat="Commits ({0})";e.BranchesTabLabel="Branches";e.RepoNotFound_Explanation="It is possible the repository did exist at one point, but your project administrator renamed it. Please ensure that the repository exists and that you have access.";e.RelatedWorkItems_ChevronLabel="Work items to link drop down";e.ChangeTypeBranch="branch";e.PullRequest_Change_Plural="{0} new changes";e.PullRequest_ActivityFeed_RequiredReviewer_ManyReviewers_2Files="{0} and {1} others were added as required reviewers for {2} and 1 other file";e.CreateTag_TagNameLabel="Name";e.PullRequest_CompleteMergeDialog_WorkItemTransitionWarningOverflowSingular="(1 more work item will not be completed)";e.ModalDialogCreateButton="Create";e.PullRequest_Vote_NotReady="Wait for author";e.CommitsAddedTabName="Commits added";e.CherryPick_Dialog_PollingFailed="Failed to cherry-pick due to conflicts. This operation needs to be performed locally.";e.HistoryList_Shelveset_Created="{0} created {1}";e.FilterApplyFiltersButtonText="Apply";e.PullRequests_Section_Header="{0} ({1})";e.EditFileRefreshConfirmation="This file has been updated since it was initially loaded.  Would you like to get the latest version and continue the edit?";e.FilterApplyFiltersButtonTooltip="Apply filters";e.Revert_PullRequestTitleFormat="Revert \"{0}\"";e.PullRequest_CompleteMergeDropdown_Merge="Merge (no fast-forward)";e.ParentLinksMultipleParentFormat="Parents: \u003cstrong\u003e{0}\u003c/strong\u003e";e.PullRequestCreate_WorkItemWarningDialogTitle="Associate {0} work items?";e.CheckinNotesSectionHeader="Checkin notes";e.BuildStatusBadge_AriaDescription="Click to view build details.";e.GettingStarted_ProTipText="Having problems authenticating in Git? Be sure to get the latest version of {} or our plugins for {}, {}, {} or {}.";e.CherryPick_Conflict="There were conflicts when cherry-picking commit {0}. This operation needs to be done locally.";e.Shelveset="Shelveset";e.PullRequestListCustomStatusLabel="Status";e.PullRequest_ZeroComments_Tooltip="There are no comments in this pull request.";e.CompletedLowerCase="completed";e.FetchingResultsText="Fetching results...";e.NextDifference="Next difference";e.PullRequests_ResultHeader_AssignedToTeam="Assigned to my team";e.PullRequest_TargetBranch="Target branch: {0}";e.PullRequest_ActivityFeed_OptionalReviewer_2Reviewers_2Files="{0} and {1} were added as reviewers for {2} and 1 other file";e.PolicyOverrideReasonLabel="Override reason";e.LinesAddedAndDeletedAriaDescription="{0} lines added, {1} lines deleted.";e.GitAuthorEmailPolicyTitle="Commit author email validation";e.PushTagRefFormat="tag {0}";e.CreateTag_TagMessageLabel="Description";e.PullRequest_PolicyWorkItemLinkingPolicyFailed="No work items linked";e.PullRequest_Rebase_SourceBranchPolicies="Source branch has policies";e.VersionSelectorNoMatchingRepositories="No repository names contain the filter text";e.PullRequest_UpdatesTab_NotSupported="Updates are not tracked for this pull request.";e.ImportRepositoryTFVCLearnMoreHyperlink="https://go.microsoft.com/fwlink/?linkid=839462";e.ChangeTypeDelete="delete";e.PullRequest_FilesFilterDropdownLabel="Filter comments on this page";e.ChangeVersionDisplayText="Changeset {0}";e.PullRequest_Policy_ApproverRejectedBy1="1 reviewer is blocking";e.AsyncRef_Dialog_GeneratedRefText="Topic branch name";e.PullRequest_MergeStrategyPolicySucceeded="Merge selected matches policy";e.PullRequest_ActivityFeed_Reviewer_Joined="{0} joined as a reviewer";e.PullRequests_RelatedArtifacts_FailToCreate="Failed to create the link.";e.SingleBranch_RelatedArtifactsDisplayString="1 Branch";e.PullRequest_ResetVotesOnDraft_Warning_Text="Marking this pull request as a draft will reset all existing votes. Are you sure?";e.RelatedArtifacts_DefaultZeroDataText="No work items selected";e.CommitCommandLabel="Commit...";e.PullRequest_ActivityFeed_Reviewers_AddedBy="{0} was added as a reviewer by {1}.";e.PullRequest_ActivityFeed_Pushed_One="{0} pushed a commit";e.CommitDetailsParentSelectorMergeText="Changes while merging";e.LinesAddedToolTip="{0} lines added";e.Shelvesets="Shelvesets";e.PullRequest_Vote_Singular="{0} vote";e.PullRequest_NoRebaseWithConflicts="Cannot rebase when conflict resolutions have been applied";e.HighlightChanges="Highlight changes";e.DiscussionCommentDeleteConfirm="Delete";e.PullRequest_DisableLiveUpdates="Disable live updates";e.ChangeDetailsAuthorDetailsTitle="Author details";e.PullRequest_ActivityFeed_OptionalReviewer_2Reviewers_0Files="{0} and {1} were added as reviewers";e.MultipleCommits_RelatedArtifactsDisplayString="{0} Commits";e.PullRequest_ResolvedDiscussionCountTooltipAll="All comments are marked as resolved, won\u0027t fix, or closed";e.EditFileNotEditable="The file is not editable online: {0}";e.PullRequest_IsDraft_Cleared="{0} published the pull request";e.FileIsEmpty="The file is empty.";e.PushesPage_ForcePushBadgeLabel="Force push";e.LinesDeletedToolTip="{0} lines deleted";e.PullRequest_ActivityFeed_PR_ReactivatedBy="{0} reactivated the pull request";e.EmptyRepo_PatPasswordCopyButtonTooltipAfterCopied="PAT token copied!";e.Status_StatusMain_Pending="Pending";e.SquashedLowerCase="squashed";e.PathSearch_FooterMessageSingleResult="Showing {0} result";e.HiddenCommentsSingle="1 other comment";e.LatestVersionedItemLinkText="Latest version of {0}";e.VersionSpecPathFormat="{0} ({1})";e.PullRequest_ActivityFeed_RequiredReviewer_ManyReviewers_1File="{0} and {1} others were added as required reviewers for {2}";e.RelatedArtifactChangesetTitle="Changeset";e.GoToToday="Go to today";e.PullRequest_TitlePlaceHolder="Give your pull request a title";e.DiscussionCommentDeleteConfirmation="Are you sure you want to delete this comment?";e.EmptyRepo_PatUsernameCopyButtonTooltipBeforeCopied="Copy PAT username to clipboard";e.CodeExplorer="Code explorer";e.BranchesContextMenuCompareTo="Compare this branch to";e.PullRequest_IterationSelector_UpdateXAndEarlier="Update {0} and earlier";e.ProjectPushPoliciesTitle="Policies for {0}";e.PullRequest_PullRequestTitle="Pull request title";e.TagFlyout_BrowseTagText="Browse repository as of this tag";e.SearchComminInBranchesDialog_BranchTagsHeader="Checked branches and tags";e.PullRequest_EmptyListMessage_Secondary="Pull requests allow you to review code and ensure quality before merge.";e.Status_Tooltip_Secondary_Error_Plural="{0} errors";e.PullRequestsTitleFormat="{0} pull requests";e.GitBlobSizeDescription="Block pushes that contain new or updated files larger than this limit.";e.EditDisabledDialogTitle="Web-editing is not allowed";e.PullRequest_ExpandDescription="Expand description";e.DiscussionAnnounceCommentLikeWithdrawn="Comment like withdrawn";e.PullRequest_RollupStatus_MergeFailure="Merge failed";e.PullRequest_ActivityFeed_RequiredReviewer_ManyReviewers_0Files="{0} and {1} others were added as required reviewers";e.PullRequest_ActivityFeed_RequiredReviewer_1Reviewer_0Files="{0} was added as a required reviewer";e.ContextMenuCodeSearchToDefinitionLabel="Search for definition";e.OverallComments="Overall comments";e.GitGraphMessage_Content_FeatureEnabled="When the graph view is enabled, you see the commits in topological order. You can view this information on your local repo by using the following git command: git log --topo-order";e.PullRequestListFilterReviewerAriaLabel="Filter pull requests by reviewer";e.PullRequest_Pivot_Abandoned="Abandoned";e.ShowMessage="Show message";e.DownloadFileMenuText="Download";e.DiscussionCommentChangeContextLabel="View original diff";e.FiltersNumberValidationError="The value should be a number.";e.ForkRepositoryDialogProjectPickerLabel="Project";e.PullRequest_ResolvedDiscussionCountAll="All resolved";e.PullRequest_Filter_New="What\u0027s new ({0})";e.PullRequest_QuickStart_Files_Name="Files";e.PullRequest_QuickStart_Files_Desc="Click on the {0} tab to view the code under review in this pull request.";e.HistoryChangesSearchFilterInvalidChangesetNumberFormat="{0} is not a valid changeset number. Please specify a number between 1 and 2147483647.";e.PullRequest_Policy_ApproverApprovedBy1="1 reviewer approved";e.PullRequest_ReactivatePullRequest="Reactivate";e.PullRequest_ActivityFeed_ForcePush_Singular_Title="{0} force pushed {1} commit creating {2}";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesAllComments="All";e.PullRequest_FilesTab_DiffRegionLabel="View folder and file diffs for this pull request";e.PullRequest_IterationSelector_Label="Select which code update to view";e.Revert_Dialog_PollingFailed="Failed to revert changes due to conflicts. This operation needs to be performed locally.";e.ExitFullScreenMode="Exit full screen mode";e.MaxFileSizeExceededTfvc="This file\u0027s content exceeds the maximum size allowed to be edited through the web.";e.TfvcShelvesetsFilterAriaLabel="Shelveset owner filter";e.History="History";e.PullRequest_CreatePullRequestTitlePlaceholder="Enter a title";e.PullRequests_RelatedArtifacts_FailToDelete="Failed to delete the link.";e.PullRequest_ActivityFeed_Iteration_Title="{0} pushed {1} commits creating {2}";e.PullRequest_ActivityFeed_RequiredReviewer_1Reviewer_2Files="{0} was added as a required reviewer for {1} and 1 other file";e.PullRequest_VoteActions="Vote Actions";e.PullRequests_ResultHeader_AssignedToMe="Assigned to me";e.LinkDialogInvalidChangesetId="The following number is not a valid changeset ID: \u0027{0}\u0027. Specify a number between 1 and 2147483647.";e.PullRequest_MergeStrategyPolicyFailed="Merge selected does not match policy";e.TagsList_ShowRemainingTags="Show remaining tags";e.PullRequest_MoreItemsMessage="Showing {0} files";e.SearchCommitDialog_CheckedLinksTooltip="View files as of {0} {1}.";e.OpenFolderMenuItem="Open Folder";e.PullRequest_MergeConflictsFooter_Text="Manually resolve these conflicts and push new changes to the source branch.";e.PullRequest_ActivityFeed_SinceYourLast="{0} since your last visit ({1}).";e.WorkItem="Work item";e.EditorPreferencesDialogMinimap="Show minimap";e.PullRequest_CallToAction_MergeRunning="Merge in progress.";e.XAuthoredYWithAnnotationText="{0} authored {1} ({2})";e.BinaryContentDeleted="Binary content deleted";e.XAuthoredYWithAnnotationHtml="\u003cstrong\u003e{0}\u003c/strong\u003e authored {1} ({2})";e.PullRequest_Following="Following";e.PushesListPullRequestTitleFormat="Pull Request {0}: {1}";e.PushedByAlternateFormat="\u003cstrong\u003e{0}\u003c/strong\u003e pushed {1}";e.PullRequest_CompleteMergeDialog_MergeDetailsWatermark="Enter more details about the pull request";e.CreateTag_RefFindError="Failed to find {0}.";e.CommitDetails_ParentSelectorLink_Tooltip="View commit details.";e.ChangeExplorerCommentsModeInline="Show comments under files";e.CommitMoreItemsMessage="Only the first {0} items in this commit are included.";e.EditorPreferencesDialogWhiteSpace="Show and diff white space";e.LinksControlDuplicateCommit="Duplicate commit.";e.PullRequest_ActivityFeed_OptionalReviewer_ManyReviewers_0Files="{0} and {1} others were added as reviewers";e.ContentJsonParseErrorTFS="Failed to parse the file contents. This is likely caused by the file encoding type set on this file in Azure DevOps not matching the actual encoding of the file. You can use the tf checkout command on this file with the /encoding argument to change the file encoding used by Azure DevOps.";e.GitRefCommit="commit";e.PullRequest_CompleteMergeDialog_BypassReasonTitle="Override reason";e.PullRequest_RelatedArtifactsRemoveAllLabel="Remove all work items";e.GitRepositoriesTreeProjectNodeTitleFormat="Git repositories";e.PullRequest_New_Comment_Plural="{0} new comments";e.PullRequest_ActivityFeed_Reviewer_Declined="{0} declined to review";e.NoOtherBranches="No other branches available";e.EmptyRepo_PatPasswordCopyButtonTooltipBeforeCopied="Copy PAT token to clipboard";e.PullRequest_SystemRefUpdateMultipleCommits="Commits {0} and {1} added to {2} branch";e.HistoryList_BuildStatusHeader="Status";e.PullRequest_QuickStart_Vote_Desc="Approving code changes is a one-click gesture, accessible at all times. See everyone that\u0027s signed off in one concise view.";e.TagsPage_ListHeader_TagName="Tag";e.CreateTag_AddTagHeader="Create a tag";e.SearchExcludeBranchDialogInfoStarting="Excluding this branch ";e.KeyboardShortcutDescription_SwitchToCommit="Switch to commit";e.CommitDetails_MergeChanges_Description="Click to view changes while merging.";e.PullRequest_OneComment_Tooltip="There is 1 comment in this pull request.";e.PullRequest_OptionalReviewer_NotAllApproved="Optional reviewers have not approved";e.Repository_None="\u003cNone\u003e";e.KeyboardShortcutDescription_Changesets="Changesets";e.PullRequest_MergeConflictsHeaderWithCount_Singular="{0} conflict prevents automatic merging";e.LinksControlDuplicateGitRefTag="The selected tag is already linked to this item.";e.AllUpdates="All updates";e.SearchCommitInBranchesDialog_Title="Search for commit in branches and tags";e.PullRequestFileContentIsTrimmed="Unable to display partial diff due to large file size. Click the file name to view the full file diff.";e.GitStatusStateFailed="failed";e.PullRequest_CommentsCount_LinkTitle="View pull request";e.SelectBranch="Select a branch...";e.DiscussionAnnounceThreadSaved="Thread saved";e.WindowsName="Windows command line";e.GoToParent="Go to parent";e.GitStatusStateError="error";e.GitFileSizePolicyExceedsInherited="Maximum file size must be less than the inherited value of {0}.";e.OptionsTab="Options";e.PullRequests_RelatedArtifacts_FailToDelete_IndexChanged="Failed to delete the link because the work item\u0027s links were modified at the same time.";e.GitRefBranch="branch";e.CheckinFailedMessageFormat="Failed to check in changes: {0}";e.AsyncOperation_GeneratedBranchNameIsTooLong="Generated branch name is too long and was truncated. Rename the branch appropriately.";e.PullRequest_NoCommitsToMergeDueToUnCalculatedHistoryNotification="We are currently processing some of your commits. There are no changes to merge between the selected branches right now. Please try again later.";e.ChangesetPickerDialogTitle="Changeset picker";e.CreateTagButton_HistoryCommits="Create tag...";e.CreateRepoInvalidNameMessage="The repository name is invalid.";e.PullRequestListCustomSectionConfigureTitle="Customize this view";e.ShowLatest="Show latest";e.SearchBoxClearAriaLabel="Clear";e.TfsChangeListTreeLabel="Files explorer";e.PullRequest_ChangeExplorer_CommentFilter_AllFilesActiveCommentsLong="Active comments";e.RepoPullRequestAsDraftByDefaultOption="New pull requests will be created as draft by default in this repository.";e.PullRequest_Policies_InProgress="{0} in progress";e.EmptyGitRepoGetStartedAppleLink="https://go.microsoft.com/fwlink/?LinkID=723025";e.MentionCommitResolutionOptionTitle="Commit mention work item resolution";e.CommitDetails_PushDetailsLink_Tooltip="View push details.";e.FileListColumnCommits="Commits";e.ChangeCountDeletes="{0} deletes";e.PullRequest_CallToAction_Completing_Myself="Completing the pull request...";e.PullRequest_NumWorkItemsLimitExceeded="Only the first {0} work items will be linked";e.ParentLinksSingleParentFormat="Parent: \u003cstrong\u003e{0}\u003c/strong\u003e";e.PullRequest_ChangeExplorer_CommentFilter_Label="Select which discussion comments to show";e.File="File";e.More="more";e.Code="Code";e.Into="into";e.Item="Item";e.Repo="repo";e.Revert_Timeout="Revert timed out.  This operation needs to be performed locally.";e.WorkItemOptionsGroup="Work item management";e.EditFileCommitToNewBranch="Commit to new branch";e.PullRequestListEditCustomSectionTitle="Customize this view";e.AddFileDialogDefaultCommentSingleFileWithEdit="Updated {0}";e.PullRequest_ActivityFeed_ResetMultipleVotesMoreThanThreeVotes="{0}, {1}, and {2} others";e.PullRequest_Ping="Ping";e.AddedToDashboard="{0} added to dashboard.";e.PullRequest_CompleteMergeDropdown_NotEnabledRepo="Not enabled for this repository";e.PullRequset_ConflictDescription_RenameRename="Renamed and edited in both";e.PullRequest_ApproveWithComment="Approved with suggestions";e.BranchUpdates="Branch Updates";e.EditFileDiscardChangesConfirmation="You have unsaved changes made to file \u0027{0}\u0027. Are you sure you wish to discard these changes?";e.PullRequest_DiscussionThreadCollapseWidget_AllCollapsed="{0} comments ({1})\r\nClick to expand all";e.PullRequest_Policy_BuildPolicyFailed="{0} failed";e.ChangeTypeMerge="merge";e.PullRequest_Retarget_TargetBranchLabel="Choose a target branch";e.GitSecretsScanningDescription="Block pushes that contain credentials or other secrets.";e.DiscussionCommentSaveTooltip="{0} (Ctrl+Enter)";e.NoChangesMessage="No files have changed.";e.PullRequest_CallToAction_AutoComplete_SetBy_WithCriteria="{0} set the pull request to automatically complete when the following policies succeed:";e.GitRepositorySelectorTfvcRepository="TFVC repository";e.PullRequest_RemoveReviewer="Remove {0}";e.AddFileDialogFilenameLabel="New file name";e.GitReservedNamesPolicyDescription="Block pushes that introduce files, folders, or branch names that include platform reserved names or incompatible characters.";e.GoToDefaultBranch="Go to default branch";});

// Copyright (C) Microsoft Corporation. All rights reserved.
define("VersionControl/Scripts/TFS.VersionControl.VersionSpecs",["require","exports","VSS/Utils/String","VSS/Utils/Date","VSS/VSS","VersionControl/Scripts/Resources/TFS.Resources.VersionControl","Presentation/Scripts/TFS/TFS.Host.TfsContext"],function(n,t,i,r,u,f,e){function tt(n){return n instanceof c&&(n=n.version),n instanceof a||n instanceof y||n instanceof v}function it(n,t){return nt(n)===nt(t)}function nt(n){return n instanceof o?n.toVersionString():n}var h,o,p,s,w,b,k,d,g,c,l,a,v,y;Object.defineProperty(t,"__esModule",{value:!0});t.getVersionString=t.isSameVersion=t.GitCommitVersionSpec=t.GitTagVersionSpec=t.GitBranchVersionSpec=t.isGitVersionSpec=t.ShelvesetVersionSpec=t.PreviousVersionSpec=t.TipVersionSpec=t.MergeSourceVersionSpec=t.LabelVersionSpec=t.DateVersionSpec=t.ChangeVersionSpec=t.ChangesetVersionSpec=t.LatestVersionSpec=t.VersionSpec=void 0;o=function(){function n(){}return n.parse=function(t){var o,p,i,e,u,f,nt=!1;if(t=String(t||""),t&&t.toUpperCase()!=="T"){if(u=t.substring(0,1).toUpperCase(),i=t.substring(1),u==="G"&&i.length>0){if(f=i.substring(0,1).toUpperCase(),i=i.substring(1),f==="B")return new a(i);if(f==="C")return new y(i);if(f==="T")return new v(i)}else{if(u==="T")return e=n.parse(i),e===h?h:new g(e);if(u==="P")return e=n.parse(i),new c(e);if(u==="C")return new s(parseInt(i,10));if(u==="B"&&/^(\d+)$/.test(i))return new w(parseInt(i,10));if(u==="M")return f=i.substring(0,1).toUpperCase(),f==="R"&&(nt=!0,i=i.substring(1)),new d(parseInt(i,10),nt);if(/^(\d+)$/.test(t))return new s(parseInt(t,10));if(u==="S")return o=i.split(";"),new l(o[0],o[1]);if(u==="L")return new k(i);if(u==="D")return p=r.parseDateString(i),new b(p)}throw new Error("Unrecognized VersionSpec format.");}else return h},n.tfvcFromUri=function(n){var e=n.split("?")[1],r=null,u=null,f,t;if(e)for(f=e.split("&"),t=0;t<f.length;++t){var o=f[t].split("="),h=o[0],c=decodeURIComponent(o[1]);h==="versionType"?r=c:h==="version"&&(u=c)}if(i.ignoreCaseComparer("shelveset",r)===0)return new l(u);if(i.ignoreCaseComparer("changeset",r)===0)return new s(u);throw new Error("No recognized VersionSpec in uri.");},n.isGitItem=function(n){return n&&n.length>2&&n.charAt(0)==="G"&&"BCT".indexOf(n.charAt(1))!==-1},n.prototype.formatPath=function(n){return i.format(f.VersionSpecPathFormat,n,this.toDisplayText())},n.prototype.toDisplayText=function(){return"VersionSpec"},n.prototype.toVersionString=function(){return""},n}();t.VersionSpec=o;p=function(n){function t(){return n.call(this)||this}return __extends(t,n),t.prototype.toVersionString=function(){return"T"},t.prototype.toDisplayText=function(){return f.LatestVersionDisplayText},t}(o);t.LatestVersionSpec=p;h=new p;s=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.changeset=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return""+this.changeset},t.prototype.toDisplayText=function(){return i.format(f.ChangesetVersionDisplayText,this.changeset)},t}(o);t.ChangesetVersionSpec=s;w=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.changeset=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return"B"+this.changeset},t.prototype.toDisplayText=function(){return i.format(f.ChangeVersionDisplayText,this.changeset)},t}(o);t.ChangeVersionSpec=w;b=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.date=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return"D"+this.date},t.prototype.toDisplayText=function(){return i.format(f.DateVersionDisplayText,this.date)},t}(o);t.DateVersionSpec=b;k=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.label=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return"L"+this.label},t.prototype.toDisplayText=function(){return i.format(f.LabelVersionDisplayText,this.label)},t}(o);t.LabelVersionSpec=k;d=function(n){function t(t,i){var r=__construct(this,n,[]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.changeset=t,r.useRenameSource=i,r}return __extends(t,n),t.prototype.toVersionString=function(){return"M"+(this.useRenameSource?"R":"")+this.changeset},t.prototype.toDisplayText=function(){return i.format(f.MergeSourceVersionDisplayText,this.changeset)},t}(o);t.MergeSourceVersionSpec=d;g=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.version=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return"T"+this.version.toVersionString()},t.prototype.toDisplayText=function(){return i.format(f.TipVersionDisplayText,this.version.toDisplayText())},t}(o);t.TipVersionSpec=g;c=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.version=t,i}return __extends(t,n),t.prototype.toVersionString=function(){return"P"+this.version.toVersionString()},t.prototype.toDisplayText=function(){return i.format(f.PreviousVersionDisplayText,this.version.toDisplayText())},t}(o);t.PreviousVersionSpec=c;l=function(n){function t(t,i){var r=__construct(this,n,[]),u,f;for(u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return i?(r.name=t,r.owner=i):(f=(""+t).split(";"),r.name=f[0],r.owner=f[1]),r.owner||(r.owner=e.TfsContext.getDefault().currentIdentity.uniqueName),r}return __extends(t,n),t.prototype.toVersionString=function(){return"S"+this.name+";"+this.owner},t.prototype.toDisplayText=function(){return i.format(f.ShelvesetVersionDisplayText,this.name,this.owner)},t}(o);t.ShelvesetVersionSpec=l;t.isGitVersionSpec=tt;a=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.branchName=t||"",i}return __extends(t,n),t.prototype.toVersionString=function(){return"GB"+this.branchName},t.prototype.toDisplayText=function(){return this.branchName},t.prototype.toFullName=function(){return"refs/heads/"+this.branchName},t.prototype.toFriendlyName=function(){return this.branchName},t}(o);t.GitBranchVersionSpec=a;v=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.tagName=t||"",i}return __extends(t,n),t.prototype.toVersionString=function(){return"GT"+this.tagName},t.prototype.toDisplayText=function(){return i.format(f.TagVersionDisplayText,this.tagName)},t.prototype.toFullName=function(){return"refs/tags/"+this.tagName},t.prototype.toFriendlyName=function(){return this.tagName},t}(o);t.GitTagVersionSpec=v;y=function(n){function t(t){var i=__construct(this,n,[]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return i.commitId=t||"",i}return __extends(t,n),t.prototype.toVersionString=function(){return"GC"+this.commitId},t.prototype.toDisplayText=function(){return i.format(f.CommitVersionDisplayText,this.getShortCommitId())},t.prototype.toFullName=function(){return this.commitId},t.prototype.toFriendlyName=function(){return this.getShortCommitId()},t.prototype.toLongDisplayText=function(){return i.format(f.CommitVersionDisplayText,this.commitId)},t.prototype.getShortCommitId=function(){return this.commitId.substr(0,8)},t}(o);t.GitCommitVersionSpec=y;t.isSameVersion=it;t.getVersionString=nt;u.tfsModuleLoaded("TFS.VersionControl.VersionSpecs",t)});

define("VersionControl/Scripts/Generated/TFS.VersionControl.Common",["require","exports"],function(n,t){var i,r,u,f,e;Object.defineProperty(t,"__esModule",{value:!0});t.TfvcConstants=t.GitWebApiConstants=t.GitRepositoryPermissions=t.GitConstants=t.CodeReviewDiscussionIdentityConstants=void 0,function(n){n.CodeReviewRefUpdatedByIdentity="CodeReviewRefUpdatedByIdentity";n.CodeReviewVotedByIdentity="CodeReviewVotedByIdentity";n.CodeReviewVotedByInitiatorIdentity="CodeReviewVotedByInitiatorIdentity";n.CodeReviewResetAllVotesInitiatorIdentity="CodeReviewResetAllVotesInitiatorIdentity";n.CodeReviewResetMultipleVotesInitiatorIdentity="CodeReviewResetMultipleVotesInitiatorIdentity";n.CodeReviewResetMultipleVotesExampleVoterIdentities="CodeReviewResetMultipleVotesExampleVoterIdentities";n.CodeReviewStatusUpdatedByIdentity="CodeReviewStatusUpdatedByIdentity";n.CodeReviewReviewersUpdatedByIdentity="CodeReviewReviewersUpdatedByIdentity";n.CodeReviewReviewersUpdatedAddedIdentity="CodeReviewReviewersUpdatedAddedIdentity";n.CodeReviewReviewersUpdatedRemovedIdentity="CodeReviewReviewersUpdatedRemovedIdentity";n.CodeReviewAutoCompleteUpdatedByIdentity="CodeReviewAutoCompleteUpdatedByIdentity";n.CodeReviewIsDraftUpdatedByIdentity="CodeReviewIsDraftUpdatedByIdentity";n.CodeReviewAssociatedStatusUpdatedByIdentity="CodeReviewAssociatedStatusUpdatedByIdentity";n.CodeReviewRequiredReviewerExampleReviewerIdentities="CodeReviewRequiredReviewerExampleReviewerIdentities"}(i=t.CodeReviewDiscussionIdentityConstants||(t.CodeReviewDiscussionIdentityConstants={})),function(n){n.GitSecurityNamespaceId="2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87";n.MaxGitRefNameLength=400;n.SourceControlCapabilityFlag=2;n.MaxRepositoryNameLength=256;n.SettingsServiceCompareBranchKey="Branches.Compare";n.RefsPrefix="refs/";n.RefsHeadsMaster="refs/heads/master";n.RefsHeadsPrefix="refs/heads/";n.RefsNotesPrefix="refs/notes/";n.RefsPullPrefix="refs/pull/";n.RefsRestMergePrefix="refs/azure-repos/merges/";n.RefsRemotesPrefix="refs/remotes/";n.RefsTagsPrefix="refs/tags/";n.RefsBreadcrumbsPrefix="refs/internal/bc/";n.RefsPullForkSourceSuffix="source";n.RefsPullMergeSuffix="merge";n.RefsPullSourceFixupSuffix="sourceFixup";n.RefsPullTargetFixupSuffix="targetFixup";n.RefsPullMergedBlobSuffix="mergedBlob/";n.RefDereferencedSuffix="^{}";n.GitModulesFileName=".gitmodules";n.SecurableRoot="repoV2/"}(r=t.GitConstants||(t.GitConstants={})),function(n){n[n.None=0]="None";n[n.Administer=1]="Administer";n[n.GenericRead=2]="GenericRead";n[n.GenericContribute=4]="GenericContribute";n[n.ForcePush=8]="ForcePush";n[n.CreateBranch=16]="CreateBranch";n[n.CreateTag=32]="CreateTag";n[n.ManageNote=64]="ManageNote";n[n.PolicyExempt=128]="PolicyExempt";n[n.CreateRepository=256]="CreateRepository";n[n.DeleteRepository=512]="DeleteRepository";n[n.RenameRepository=1024]="RenameRepository";n[n.EditPolicies=2048]="EditPolicies";n[n.RemoveOthersLocks=4096]="RemoveOthersLocks";n[n.ManagePermissions=8192]="ManagePermissions";n[n.PullRequestContribute=16384]="PullRequestContribute";n[n.PullRequestBypassPolicy=32768]="PullRequestBypassPolicy";n[n.ProjectLevelPermissions=65534]="ProjectLevelPermissions";n[n.RepositoryLevelPermissions=65278]="RepositoryLevelPermissions";n[n.BranchLevelPermissions=47244]="BranchLevelPermissions";n[n.NonBranchRefLevelPermissions=8200]="NonBranchRefLevelPermissions";n[n.BranchesRootLevelPermissions=47260]="BranchesRootLevelPermissions"}(u=t.GitRepositoryPermissions||(t.GitRepositoryPermissions={})),function(n){n.RefsLocationId="2d874a60-a811-4f62-9c9f-963a6ea0a55b";n.RefsBatchLocationId="d5e42319-9c64-4acd-a906-f524a578a7fe";n.ProjectRefsLocationId="4c36aadb-af42-45bb-80ca-6df5cd443e0d";n.RepositoriesLocationId="225f7195-f9c7-4d14-ab28-a83f7ff77e1f";n.ProjectRepositoriesLocationId="88aea7e8-9501-45dd-ac58-b069aa73b926";n.ProjectDeletedRepositoriesLocationId="2b6869c4-cb25-42b5-b7a3-0d3e6be0a11a";n.ProjectRecycleBinRepositoriesLocationId="a663da97-81db-4eb3-8b83-287670f63073";n.ItemsLocationId="fb93c0db-47ed-4a31-8c20-47552878fb44";n.ProjectItemsLocationId="433ab753-6ed9-4169-9841-dd3f7611834a";n.ItemsBatchLocationId="630fd2e4-fb88-4f85-ad21-13f3fd1fbca9";n.ProjectItemsBatchLocationId="567ef866-886b-44cc-81e2-6cc075905ce5";n.TreesLocationId="729f6437-6f92-44ec-8bee-273a7111063c";n.ProjectTreesLocationId="11e0a184-7e28-4b77-9523-1d4d6dc29241";n.BlobsLocationId="7b28e929-2c99-405d-9c5c-6167a06e6816";n.ProjectBlobsLocationId="cffac033-c2f1-41a2-acb3-b765e50a8d29";n.CommitsLocationId="c2570c3b-5b3f-41b8-98bf-5407bfde8d58";n.ProjectCommitsLocationId="41a3de30-8d9e-4f79-a7e3-ef8cf1299454";n.DeltificationLocationId="c873bfc6-3138-40ec-a3ed-837e9a7c0ac0";n.PushesLocationId="ea98d07b-3c87-4971-8ede-a613694ffb55";n.ProjectPushesLocationId="9777557b-f5a5-4a6b-94f8-39aff53b5b41";n.BranchesStatsLocationId="d5b216de-d8d5-4d32-ae76-51df755b16d3";n.RepositoryStatsLocationId="616a5255-74b3-40f5-ae1d-bbae2eec8db5";n.ProjectBranchesStatsLocationId="b32dc299-abe2-41e9-bd15-1e6856b95c9c";n.BranchStatsLocationId="40c1f5b7-2bb6-4c28-b844-0f47cd6bb610";n.ProjectBranchStatsLocationId="9b2552e4-9e48-4557-98ec-1982f699615f";n.CommitChangesLocationId="5bf884f5-3e07-42e9-afb8-1b872267bf16";n.CommitStatuesLocationId="428dd4fb-fda5-4722-af02-9313b80305da";n.ProjectCommitChangesLocationId="074db773-d674-4de9-a0dd-fcb6adddecf9";n.PushCommitsLocationId="168b4bb9-d936-4cd9-8a5f-66d6f6b23192";n.ProjectPushCommitsLocationId="cc7a4cb0-7377-494a-80d4-ef4d607f6eb2";n.CommitDiffsLocationId="615588d5-c0c7-4b88-88f8-e625306446e8";n.ProjectCommitDiffsLocationId="29ba9926-be39-4db5-bbdf-d6c9458195c6";n.CommitsBatchLocationId="6400dfb2-0bcb-462b-b992-5a57f8f1416c";n.ForksLocationId="158c0340-bf6f-489c-9625-d572a1480d57";n.ForkSyncRequestsLocationId="1703f858-b9d1-46af-ab62-483e9e1055b5";n.MergeBasesLocationId="7cf2abb6-c964-4f7e-9872-f78c66e72e9c";n.MergeLocationId="985f7ae9-844f-4906-9897-7ef41516c0e2";n.ProjectCommitsBatchLocationId="fed1587d-f1c8-475d-925c-b97f2c9dde50";n.PullRequestsLocationId="9946fd70-0d40-406e-b686-b4744cbbcc37";n.ProjectRepoPullRequestsLocationId="5318bf6c-115f-4828-ba3e-73eca825c276";n.PullRequestByIdLocationId="01a46dea-7d46-4d40-bc84-319e7c260d99";n.ProjectPullRequestsLocationId="a5d28130-9cd2-40fa-9f08-902e7daa9efb";n.PullRequestReviewersLocationId="4b6702c7-aa35-4b89-9c96-b9abf6d3e540";n.SuggestionsLocationId="9393b4fb-4445-4919-972b-9ad16f442d83";n.PullRequestConflictsLocationId="d840fb74-bbef-42d3-b250-564604c054a4";n.PullRequestCommitsLocationId="52823034-34a8-4576-922c-8d8b77e9e4c4";n.ProjectPullRequestReviewersLocationId="1d5702f2-90e2-4fe0-8794-4fcd822adb9b";n.PullRequestWorkItemsLocationId="0a637fcc-5370-4ce8-b0e8-98091f5f9482";n.ProjectPullRequestWorkItemsLocationId="a92ec66c-5851-41a4-a96b-4a0860958844";n.ProjectMediaLocationId="c96a81cd-52f6-41d9-843c-58c584967ba5";n.LimitedRefCriteriaLocationId="f1d5d07a-6b89-4384-bef6-446461e31a39";n.PullRequestQueryLocationId="b3a6eebe-9cf0-49ea-b6cb-1a4c5f5007b0";n.PullRequestIterationsLocationId="d43911ee-6958-46b0-a42b-8445b8a0d004";n.PullRequestIterationChangesLocationId="4216bdcf-b6b1-4d59-8b82-c34cc183fc8b";n.PullRequestStatusesLocationId="b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35";n.PullRequestIterationStatusesLocationId="75cf11c5-979f-4038-a76e-058a06adf2bf";n.PullRequestPropertiesLocationId="48a52185-5b9e-4736-9dc1-bb1e2feac80b";n.PullRequestThreadsLocationId="ab6e2e5d-a0b7-4153-b64a-a4efe0d49449";n.PullRequestThreadCommentsLocationId="965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b";n.PullRequestCommentLikesLocationId="5f2e2851-1389-425b-a00b-fb2adb3ef31b";n.PullRequestAttachmentsLocationId="965d9361-878b-413b-a494-45d5b5fd8ab7";n.PolicyConfigurationsLocationId="2c420070-a0a2-49cc-9639-c9f271c5ff07";n.PullRequestShareLocationId="696f3a82-47c9-487f-9117-b9d00972ca84";n.RefFavoritesLocationId="876f70af-5792-485a-a1c7-d0a7b2f42bbb";n.CherryPickLocationId="033bad68-9a14-43d1-90e0-59cb8856fef6";n.RevertLocationId="bc866058-5449-4715-9cf1-a510b6ff193c";n.PullRequestIterationCommitsLocationId="e7ea0883-095f-4926-b5fb-f24691c26fb9";n.ImportRequestsLocationId="01828ddc-3600-4a41-8633-99b3a73a0eb3";n.FilePathsLocationId="e74b530c-edfa-402b-88e2-8d04671134f7";n.TemplatesLocationId="f88d498e-52c3-422a-a5f2-994f4265a25b";n.TreeDiffsLocationId="e264ef02-4e92-4cfc-a4b1-5e71894d7b31";n.ImportRepositoryValidationsLocationId="d8c00958-dedd-491f-93e6-73f3c06f5bba";n.AnnotatedTagsLocationId="5e8a8081-3851-4626-b677-9891cc04102e";n.PullRequestLabelsId="f22387e3-984e-4c52-9c6d-fbb8f14c812d";n.CherryPickRelationshipsId="8af142a4-27c2-4168-9e82-46b8629aaa0d";n.FileDiffsLocationId="c4c5a7e6-e9f3-4730-a92b-84baacff694b";n.HeadsFilter="heads";n.TagsFilter="tags";n.AreaId="4E080C62-FA21-4FBC-8FEF-2A10A2B38049";n.AreaName="git";n.RefsLocationIdString="2D874A60-A811-4F62-9C9F-963A6EA0A55B";n.RefsBatchLocationIdString="D5E42319-9C64-4ACD-A906-F524A578A7FE";n.ProjectRefsLocationIdString="4C36AADB-AF42-45BB-80CA-6DF5CD443E0D";n.RepositoriesLocationIdString="225F7195-F9C7-4D14-AB28-A83F7FF77E1F";n.ProjectRepositoriesLocationIdString="88AEA7E8-9501-45DD-AC58-B069AA73B926";n.ProjectDeletedRepositoriesLocationIdString="2B6869C4-CB25-42B5-B7A3-0D3E6BE0A11A";n.ProjectRecycleBinRepositoriesLocationIdString="A663DA97-81DB-4EB3-8B83-287670F63073";n.ItemsLocationIdString="FB93C0DB-47ED-4A31-8C20-47552878FB44";n.ProjectItemsLocationIdString="433AB753-6ED9-4169-9841-DD3F7611834A";n.ItemsBatchLocationIdString="630FD2E4-FB88-4F85-AD21-13F3FD1FBCA9";n.ProjectItemsBatchLocationIdString="567EF866-886B-44CC-81E2-6CC075905CE5";n.TreesLocationIdString="729F6437-6F92-44EC-8BEE-273A7111063C";n.ProjectTreesLocationIdString="11E0A184-7E28-4B77-9523-1D4D6DC29241";n.BlobsLocationIdString="7B28E929-2C99-405D-9C5C-6167A06E6816";n.ProjectBlobsLocationIdString="CFFAC033-C2F1-41A2-ACB3-B765E50A8D29";n.CommitsLocationIdString="C2570C3B-5B3F-41B8-98BF-5407BFDE8D58";n.ProjectCommitsLocationIdString="41A3DE30-8D9E-4F79-A7E3-EF8CF1299454";n.DeltificationLocationIdString="C873BFC6-3138-40EC-A3ED-837E9A7C0AC0";n.PushesLocationIdString="EA98D07B-3C87-4971-8EDE-A613694FFB55";n.ProjectPushesLocationIdString="9777557B-F5A5-4A6B-94F8-39AFF53B5B41";n.BranchesStatsLocationIdString="D5B216DE-D8D5-4D32-AE76-51DF755B16D3";n.RepositoryStatsLocationIdString="616A5255-74B3-40F5-AE1D-BBAE2EEC8DB5";n.ProjectBranchesStatsLocationIdString="B32DC299-ABE2-41E9-BD15-1E6856B95C9C";n.BranchStatsLocationIdString="40C1F5B7-2BB6-4C28-B844-0F47CD6BB610";n.ProjectBranchStatsLocationIdString="9B2552E4-9E48-4557-98EC-1982F699615F";n.CommitChangesLocationIdString="5BF884F5-3E07-42E9-AFB8-1B872267BF16";n.CommitStatusesLocationIdString="428DD4FB-FDA5-4722-AF02-9313B80305DA";n.ProjectCommitChangesLocationIdString="074DB773-D674-4DE9-A0DD-FCB6ADDDECF9";n.PushCommitsLocationIdString="168B4BB9-D936-4CD9-8A5F-66D6F6B23192";n.ProjectPushCommitsLocationIdString="CC7A4CB0-7377-494A-80D4-EF4D607F6EB2";n.CommitDiffsLocationIdString="615588D5-C0C7-4B88-88F8-E625306446E8";n.ProjectCommitDiffsLocationIdString="29BA9926-BE39-4DB5-BBDF-D6C9458195C6";n.CommitsBatchLocationIdString="6400DFB2-0BCB-462B-B992-5A57F8F1416C";n.ForksLocationIdString="158C0340-BF6F-489C-9625-D572A1480D57";n.ForkSyncRequestsLocationIdString="1703F858-B9D1-46AF-AB62-483E9E1055B5";n.MergeBaseLocationIdString="7CF2ABB6-C964-4F7E-9872-F78C66E72E9C";n.MergeLocationIdString="985F7AE9-844F-4906-9897-7EF41516C0E2";n.ProjectCommitsBatchLocationIdString="FED1587D-F1C8-475D-925C-B97F2C9DDE50";n.PullRequestsLocationIdString="9946FD70-0D40-406E-B686-B4744CBBCC37";n.ProjectRepoPullRequestsLocationIdString="5318BF6C-115F-4828-BA3E-73ECA825C276";n.PullRequestByIdLocationIdString="01A46DEA-7D46-4D40-BC84-319E7C260D99";n.ProjectPullRequestsLocationIdString="A5D28130-9CD2-40FA-9F08-902E7DAA9EFB";n.PullRequestReviewersLocationIdString="4B6702C7-AA35-4B89-9C96-B9ABF6D3E540";n.SuggestionsLocationIdString="9393B4FB-4445-4919-972B-9AD16F442D83";n.PullRequestConflictsLocationIdString="D840FB74-BBEF-42D3-B250-564604C054A4";n.PullRequestCommitsLocationIdString="52823034-34a8-4576-922c-8d8b77e9e4c4";n.ProjectPullRequestReviewersLocationIdString="1D5702F2-90E2-4FE0-8794-4FCD822ADB9B";n.PullRequestWorkItemsLocationIdString="0A637FCC-5370-4CE8-B0E8-98091F5F9482";n.ProjectPullRequestWorkItemsLocationIdString="A92EC66C-5851-41A4-A96B-4A0860958844";n.ProjectMediaLocationIdString="C96A81CD-52F6-41D9-843C-58C584967BA5";n.LimitedRefCriteriaLocationIdString="F1D5D07A-6B89-4384-BEF6-446461E31A39";n.PullRequestQueryLocationIdString="B3A6EEBE-9CF0-49EA-B6CB-1A4C5F5007B0";n.PullRequestIterationsLocationIdString="D43911EE-6958-46B0-A42B-8445B8A0D004";n.PullRequestIterationChangesLocationIdString="4216BDCF-B6B1-4D59-8B82-C34CC183FC8B";n.PullRequestStatusesLocationIdString="B5F6BB4F-8D1E-4D79-8D11-4C9172C99C35";n.PullRequestIterationStatusesLocationIdString="75CF11C5-979F-4038-A76E-058A06ADF2BF";n.PullRequestPropertiesLocationIdString="48A52185-5B9E-4736-9DC1-BB1E2FEAC80B";n.PullRequestThreadsLocationIdString="AB6E2E5D-A0B7-4153-B64A-A4EFE0D49449";n.PullRequestThreadCommentsLocationIdString="965A3EC7-5ED8-455A-BDCB-835A5EA7FE7B";n.PullRequestCommentLikesLocationIdString="5F2E2851-1389-425B-A00B-FB2ADB3EF31B";n.PullRequestAttachmentsLocationIdString="965D9361-878B-413B-A494-45D5B5FD8AB7";n.PolicyConfigurationsLocationIdString="2C420070-A0A2-49CC-9639-C9F271C5FF07";n.PolicyConfigurationsResourceName="policyConfigurations";n.PullRequestShareLocationIdString="696F3A82-47C9-487F-9117-B9D00972CA84";n.RefFavoritesLocationIdString="876F70AF-5792-485A-A1C7-D0A7B2F42BBB";n.CherryPickLocationIdString="033BAD68-9A14-43D1-90E0-59CB8856FEF6";n.RevertLocationIdString="BC866058-5449-4715-9CF1-A510B6FF193C";n.PullRequestIterationCommitsLocationIdString="E7EA0883-095F-4926-B5FB-F24691C26FB9";n.ImportRequestsLocationIdString="01828DDC-3600-4A41-8633-99B3A73A0EB3";n.FilePathsLocationIdString="E74B530C-EDFA-402B-88E2-8D04671134F7";n.TemplatesLocationIdString="F88D498E-52C3-422A-A5F2-994F4265A25B";n.TreeDiffsLocationIdString="E264EF02-4E92-4CFC-A4B1-5E71894D7B31";n.ImportRepositoryValidationsLocationIdString="D8C00958-DEDD-491F-93E6-73F3C06F5BBA";n.AnnotatedTagsLocationIdString="5E8A8081-3851-4626-B677-9891CC04102E";n.PullRequestLabelsIdString="F22387E3-984E-4C52-9C6D-FBB8F14C812D";n.CherryPickRelationshipsIdString="8AF142A4-27C2-4168-9E82-46B8629AAA0D";n.FileDiffsLocationIdString="C4C5A7E6-E9F3-4730-A92B-84BAACFF694B"}(f=t.GitWebApiConstants||(t.GitWebApiConstants={})),function(n){n.TfvcChangesetsLocationId="0bc8f0a4-6bfb-42a9-ba84-139da7b99c49";n.TfvcChangesetChangesLocationId="f32b86f2-15b9-4fe6-81b1-6f8938617ee5";n.TfvcChangesetWorkItemsLocationId="64ae0bea-1d71-47c9-a9e5-fe73f5ea0ff4";n.TfvcChangesetBatchLocationId="b7e7c173-803c-4fea-9ec8-31ee35c5502a";n.VersionControlProjectInfoLocationId="0755ef73-0a92-4221-a902-6aae57503c2c";n.VersionControlProjectInfosLocationId="252d9c40-0643-41cf-85b2-044d80f9b675";n.TfvcItemsLocationId="ba9fc436-9a38-4578-89d6-e4f3241f5040";n.TfvcItemBatchLocationId="fe6f827b-5f64-480f-b8af-1eca3b80e833";n.TfvcShelvesetsLocationId="e36d44fb-e907-4b0a-b194-f83f1ed32ad3";n.TfvcShelvesetLocationId="6aad49e3-4ded-45da-aabd-2f19d35266c7";n.TfvcShelvesetChangesLocationId="31db9770-7614-4718-b0a5-75d2a1e625ff";n.TfvcQueryParamShelvesetChangesLocationId="dbaf075b-0445-4c34-9e5b-82292f856522";n.TfvcShelvesetWorkItemsLocationId="9a1a13e2-a285-4bc9-aa26-b0906cd3c851";n.TfvcQueryParamShelvesetWorkItemsLocationId="a7a0c1c1-373e-425a-b031-a519474d743d";n.TfvcLabelsLocationId="a5d9bd7f-b661-4d0e-b9be-d9c16affae54";n.TfvcLabelItemsLocationId="06166e34-de17-4b60-8cd1-23182a346fda";n.TfvcBranchesLocationId="bc1f417e-239d-42e7-85e1-76e80cb2d6eb";n.TfvcStatisticsLocationId="e15c74c0-3605-40e0-aed4-4cc61e549ed8";n.AreaId="8AA40520-446D-40E6-89F6-9C9F9CE44C48";n.AreaName="tfvc";n.RootFolder="$/";n.Separator="/";n.TfvcChangesetsLocationIdString="0BC8F0A4-6BFB-42A9-BA84-139DA7B99C49";n.TfvcChangesetChangesLocationIdString="F32B86F2-15B9-4FE6-81B1-6F8938617EE5";n.TfvcChangesetWorkItemsLocationIdString="64AE0BEA-1D71-47C9-A9E5-FE73F5EA0FF4";n.TfvcChangesetBatchLocationIdString="B7E7C173-803C-4FEA-9EC8-31EE35C5502A";n.VersionControlProjectInfoLocationIdString="0755EF73-0A92-4221-A902-6AAE57503C2C";n.VersionControlProjectInfosLocationIdString="252D9C40-0643-41CF-85B2-044D80F9B675";n.TfvcItemsLocationIdString="BA9FC436-9A38-4578-89D6-E4F3241F5040";n.TfvcItemBatchLocationIdString="FE6F827B-5F64-480F-B8AF-1ECA3B80E833";n.TfvcShelvesetsLocationIdString="E36D44FB-E907-4B0A-B194-F83F1ED32AD3";n.TfvcShelvesetLocationIdString="6aad49e3-4ded-45da-aabd-2f19d35266c7";n.TfvcShelvesetChangesLocationIdString="31DB9770-7614-4718-B0A5-75D2A1E625FF";n.TfvcQueryParamShelvesetChangesLocationIdString="DBAF075B-0445-4C34-9E5B-82292F856522";n.TfvcShelvesetWorkItemsLocationIdString="9A1A13E2-A285-4BC9-AA26-B0906CD3C851";n.TfvcQueryParamShelvesetWorkItemsLocationIdString="A7A0C1C1-373E-425A-B031-A519474D743D";n.TfvcLabelsLocationIdString="A5D9BD7F-B661-4D0E-B9BE-D9C16AFFAE54";n.TfvcLabelItemsLocationIdString="06166E34-DE17-4B60-8CD1-23182A346FDA";n.TfvcBranchesLocationIdString="BC1F417E-239D-42E7-85E1-76E80CB2D6EB";n.TfvcStatisticsLocationIdString="E15C74C0-3605-40E0-AED4-4CC61E549ED8"}(e=t.TfvcConstants||(t.TfvcConstants={}))});

define("VersionControl/Scripts/GitRefUtility",["require","exports","VersionControl/Scripts/TFS.VersionControl.VersionSpecs","VersionControl/Scripts/Generated/TFS.VersionControl.Common","VSS/Utils/String"],function(n,t,i,r,u){function f(n){if(n){if(n&&n.indexOf("refs/heads/")===0)return n.substring(11);if(n&&n.indexOf("refs/tags/")===0)return n.substring(10)}return n}function s(n){return"refs/heads/"+n}function h(n){return"refs/tags/"+n}function c(n){return u.startsWith(n,r.GitConstants.RefsTagsPrefix)}function l(n){var i;if(n&&n.indexOf("refs/pull/")===0){var r=n.substring(10),u=r.trim(),t=u.split("/",2);return t.length!==2?void 0:(i=t[1].trim(),i.toUpperCase()!=="merge".toUpperCase())?void 0:t[0].trim()}return}function a(n){return e(i.VersionSpec.parse(n))}function e(n){return n instanceof i.GitBranchVersionSpec?"refs/heads/"+n.branchName:n instanceof i.GitTagVersionSpec?"refs/tags/"+n.tagName:""}function o(n){if(n){if(n.indexOf("refs/heads/")===0)return new i.GitBranchVersionSpec(n.substring(11));if(n.indexOf("refs/tags/")===0)return new i.GitTagVersionSpec(n.substring(10))}return null}function v(n){var t=o(n);return t?t.toVersionString():""}function y(n){return f(n).split("/")}function p(n,t){return u.localeIgnoreCaseComparer(n.name,t.name)}function w(n){return{name:n.name,objectId:n.newObjectId}}function b(n){return{name:n.name,objectId:n.objectId}}Object.defineProperty(t,"__esModule",{value:!0});t.annotatedTagToRef=t.refUpdateToRef=t.compareRefs=t.refNameToParts=t.refNameToVersionString=t.refNameToVersionSpec=t.specToRefName=t.versionStringToRefName=t.getPRIdFromSourceBranch=t.isRefTag=t.getFullRefNameFromTagName=t.getFullRefNameFromBranch=t.getRefFriendlyName=void 0;t.getRefFriendlyName=f;t.getFullRefNameFromBranch=s;t.getFullRefNameFromTagName=h;t.isRefTag=c;t.getPRIdFromSourceBranch=l;t.versionStringToRefName=a;t.specToRefName=e;t.refNameToVersionSpec=o;t.refNameToVersionString=v;t.refNameToParts=y;t.compareRefs=p;t.refUpdateToRef=w;t.annotatedTagToRef=b});

define("Presentation/Scripts/TFS/TFS.Service",["require","exports","VSS/Service","Presentation/Scripts/TFS/TFS.Host.TfsContext","VSS/Context","VSS/Common/Contracts/Platform"],function(n,t,i,r,u,f){Object.defineProperty(t,"__esModule",{value:!0});t.TfsService=void 0;var e=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t}return __extends(t,n),t.prototype.initializeConnection=function(t){n.prototype.initializeConnection.call(this,t);this.tfsConnection=t},t.prototype.getTfsContext=function(){if(!this._tfsContext){var n=this.getWebContext();this._tfsContext=n===u.getDefaultWebContext()?r.TfsContext.getDefault():new r.TfsContext(n)}return this._tfsContext},t.prototype.getCurrentServiceHost=function(){var n=this.getTfsContext(),t=this.getConnection().getHostType();return t===f.ContextHostType.ProjectCollection?n.navigation.collection:t===f.ContextHostType.Application?n.navigation.applicationServiceHost:n.navigation.serviceHost},t}(i.VssService);t.TfsService=e});

define("VSS/Diag/Services",["require","exports","VSS/Ajax","VSS/Context","VSS/Service"],function(n,t,i,r,u){function s(){var n=r.getPageContext();n&&n.diagnostics.allowStatsCollection&&n.diagnostics.activityId&&u.getLocalService(f).logActivity(n.diagnostics.activityId,window.location.href)}var f,e,o;Object.defineProperty(t,"__esModule",{value:!0});t.ActivityStatsCollector=void 0;f=function(){function n(){this._activtyIdHeader="ActivityId";this._progressPendingActions=null;this._progressPendingActionsNewId=0;this._progressPendingActions={};this._activtyStatsCollectionAllowedCallbacks=[]}return n.prototype.initialize=function(){},n.prototype.addActivtyStatsCollectionAllowedCallback=function(n){this._activtyStatsCollectionAllowedCallbacks.push(n)},n.prototype.actionStarted=function(n){if(!this.isCollectingStats())return-1;var t=++this._progressPendingActionsNewId;return this._progressPendingActions[t]=n,t},n.prototype.actionCompleted=function(n,t){var r=null,i,u,f;if(n>-1&&this._allowStatsCollection()&&this.isCollectingStats()&&(i=this._progressPendingActions[n],i)){delete this._progressPendingActions[n];try{u=t.getResponseHeader(this._activtyIdHeader);u&&i.toLowerCase().indexOf("/_apis/stats/activities")===-1&&(r=this.getCurrentPage(),f={actionDate:(new Date).toUTCString(),name:i,id:u,status:t.status,parentId:r?r.id:null},this._saveActivity(f))}catch(e){this.clearStats()}}},n.prototype.logActivity=function(n,t){try{if(this._allowStatsCollection()&&t&&t.toLowerCase().indexOf("_statistics")===-1){var i={actionDate:(new Date).toUTCString(),name:t,id:n};this._saveActivity(i,!0)}}catch(r){this.clearStats()}},n.prototype.getActivityStatistics=function(){try{var t=window.localStorage.getItem(n.ACTIVITY_ID_STORAGE_ITEM);return t?JSON.parse(t):[]}catch(i){return[]}},n.prototype.clearStats=function(){try{window.localStorage.removeItem(n.ACTIVITY_ID_STORAGE_ITEM);window.localStorage.removeItem(n.CURRENT_PAGE)}catch(t){}},n.prototype.collectStats=function(t){try{window.localStorage.setItem(n.ACTIVITY_COLLECTION_STATUS,t.toString())}catch(i){}},n.prototype.getCurrentPage=function(){try{var t=window.localStorage.getItem(n.CURRENT_PAGE);if(t)return JSON.parse(t)}catch(i){}return null},n.prototype.setCurrentPage=function(t){try{window.localStorage.setItem(n.CURRENT_PAGE,JSON.stringify(t))}catch(i){}},n.prototype.isCollectingStats=function(){try{var t=window.localStorage.getItem(n.ACTIVITY_COLLECTION_STATUS);return t?(t=t.toLowerCase(),t==="true"?!0:t==="false"?!1:(window.localStorage.removeItem(n.ACTIVITY_COLLECTION_STATUS),!1)):!1}catch(i){return!1}},n.prototype._saveActivity=function(t,i){if(this.isCollectingStats()&&this._allowStatsCollection()){var r=this.getActivityStatistics();r.push(t);window.localStorage.setItem(n.ACTIVITY_ID_STORAGE_ITEM,JSON.stringify(r));i&&this.setCurrentPage(t)}},n.prototype._allowStatsCollection=function(){for(var t=!0,n=0;n<this._activtyStatsCollectionAllowedCallbacks.length;n++)t=t&&this._activtyStatsCollectionAllowedCallbacks[n]();return t},n.ACTIVITY_COLLECTION_STATUS="TFS.ActivityCollectionStatus",n.ACTIVITY_ID_STORAGE_ITEM="TFS.ActivityIdStats",n.CURRENT_PAGE="TFS.CurrentPageActivity",n}();t.ActivityStatsCollector=f;s();u.getLocalService(f).addActivtyStatsCollectionAllowedCallback(function(){var n=r.getPageContext();return!!(n&&n.diagnostics.allowStatsCollection)});e={};o=r.getPageContext();o&&o.diagnostics.allowStatsCollection&&i.addGlobalListener({beforeRequest:function(n,t){var i=u.getLocalService(f).actionStarted(t);e[n]=i},responseReceived:function(n,t,i,r){u.getLocalService(f).actionCompleted(e[n],r);delete e[n]}})});

define("Presentation/Scripts/TFS/TFS.Legacy.Ajax",["require","exports","VSS/Context","VSS/Diag","VSS/Diag/Services","VSS/Performance","VSS/Platform/Context","VSS/Service","VSS/Utils/Core","VSS/Utils/String","VSS/Utils/Url","VSS/VSS","Presentation/Scripts/TFS/Resources/TFS.Resources.Presentation"],function(n,t,i,r,u,f,e,o,s,h,c,l,a){function ft(n,i,f,e,s){var h,a,p,c,y,w,b;if(r.logTracePoint("Ajax.response-received",s.requestId),o.getLocalService(u.ActivityStatsCollector).actionCompleted(rt[s.requestId],f),delete rt[lt],s.onComplete)for(y=0,w=s.onComplete;y<w.length;y++)b=w[y],b(f);if(s.isComplete=!0,delete d[s.requestId],s.options!==null&&s.options!==undefined&&s.options.wait!==null&&s.options.wait!==undefined&&t.endWait(s),i!=="timeout"&&f&&f.status===203&&(h=f.getResponseHeader("X-Tfs-Location"),h)){if(a=h.indexOf("reply_to="),a!==-1){for(p=h.indexOf("&",a),c=h.substring(0,a),p!==-1&&(c+=h.substring(p));c.charAt(c.length-1)==="&";)c=c.substring(0,c.length-1);h=c+"&reply_to="+encodeURIComponent(window.location.href)}window.location.href=h;return}if(e)try{e(n,i,f)}catch(k){r.logTracePoint("Ajax.callback-exception",k);v(k)}r.logTracePoint("Ajax.callback-complete",s.requestId);s.progressActionId&&l.globalProgressIndicator.actionCompleted(s.progressActionId);s.options&&s.options.tracePoint&&r.logTracePoint(s.options.tracePoint)}function y(n,t){return function(i,r,u){ft(i,r,u,t,n)}}function w(n,i,r){return function(u,f,e){ft(null,f,u,function(){var n;if(f==="timeout")v(bt(u,r),i);else if(u.status===0)t.unloadRequested||t.unloading||s.delay(this,2e3,function(){t.unloadRequested||t.unloading||v(vt(u,r),i)});else if(u.status>=12e3&&u.status<13e3)t.unloadRequested||t.unloading||v(vt(u,r),i);else{if(t.unloading&&f==="abort")return;try{n=s.parseMSJSON(u.responseText,!1)}catch(o){}n?v(new ut(n.message,n.type),i):v(wt(u,e||u.statusText||u.status,r),i)}},n)}}function p(n,i,e){var s,h,c,a,v;return s={isComplete:!1,requestId:lt++,options:e},e&&e.wait&&t.startWait(s),c=f.getScenarioManager().addAjaxCallStart(),a=function(t){var i=t&&t.getResponseHeader&&t.getResponseHeader("ActivityId")||"",r=t&&t.getResponseHeader&&t.getResponseHeader("Content-Length")||0;c(n,s&&s.options&&s.options.type||"",i,t&&t.status||-1,Number(r));document.dispatchEvent(new CustomEvent("performance.legacyAjaxCall"))},s.onComplete=[a],h=n+" ("+s.requestId+")",r.logTracePoint("Ajax.request-started",h),v=o.getLocalService(u.ActivityStatsCollector).actionStarted(n),rt[s.requestId]=v,e&&e.showGlobalProgressIndicator===!1||(s.progressActionId=l.globalProgressIndicator.actionStarted(h)),d[s.requestId]=s,s}function b(n,t,i,r){var u=e.getService("IMsalTokenProviderService").getDefaultProvider();c.isExternalUrl(t)||!u?(n.options=$.extend(!0,{},i,n.options),n.xhr=$.ajax(t,n.options)):u.getAuthorizationHeader().then(function(u){u&&(i.headers.Authorization=u);try{n.options=$.extend(!0,{},i,n.options);n.xhr=$.ajax(t,n.options)}catch(f){r&&r(f)}}).catch(function(n){r&&r(n)})}function yt(n){var t=n.options.wait;t.entireWindow||(t.element.css("margin-top",-parseInt(t.target.css("padding-top"),10)),t.element.css("margin-left",-parseInt(t.target.css("padding-left"),10)),t.element.height(t.target.outerHeight()-2),t.element.width(t.target.outerWidth()-2));t.msgElement&&(t.msgElement.css("top",t.element.position().top+(t.element.height()-t.msgElement.height())/2+parseInt(t.element.css("margin-top"),10)),t.msgElement.css("left",t.element.position().left+(t.element.width()-t.msgElement.width())/2+parseInt(t.element.css("margin-left"),10)))}function et(n){var t;return typeof n=="string"&&(n=n.replace(/\u2028/g,"\\u2028")),t=s.parseMSJSON(n,!1),t.hasOwnProperty("__wrappedArray")&&(t=t.__wrappedArray),t}function kt(){t.unloadRequested=!0;s.delay(this,2e3,function(){t.unloadRequested=!1})}function k(n){var t,u,r;return(n&&(t=n.sessionId,u=n.command),t||(r=i.getPageContext(),r&&r.diagnostics&&r.diagnostics.sessionId&&(t=r.diagnostics.sessionId)),t)?u?{"X-TFS-Session":t+","+u}:{"X-TFS-Session":t}:{}}function dt(n,t,i,r,u){var f=p(n,t,u),e={type:"GET",data:t,success:y(f,i),error:w(f,r,n),dataType:"json",traditional:!0,timeout:tt,headers:k(u)};return at.allowArrayResult||(e.converters={"text json":et}),b(f,n,e,r),f}function ot(n){var t,r,i;if(Array.isArray(n))for(t=0;t<n.length;++t)r=n[t],n[t]==null?n[t]="":typeof r=="object"&&ot(r);else if(typeof n=="object")for(i in n)n[i]==null?n[i]="":typeof n[i]=="object"&&ot(n[i])}function pt(n,t,i,r,u,f){var o,e,c,h,l;if(f||(ot(t),t=s.stringifyMSJSON(t),u=u||{},u.contentType="application/json"),o=p(n,t,u),u&&u.timeout&&(tt=u.timeout),e={type:"POST",data:t,success:y(o,i),error:w(o,r,n),dataType:"json",traditional:!0,timeout:tt,headers:k(u)},at.allowArrayResult||(e.converters={"text json":et}),f)for(e.contentType=!1,e.processData=!1,e.data=new FormData,c=Object.keys(t),h=0;h<c.length;h++)l=c[h],e.data.append(l,t[l]);return b(o,n,e,r),o}function gt(n,t,i,r,u){return pt(n,t,i,r,u,!0)}function ni(n,t,i,r,u){var e,f;return t=$.extend(t,{__RequestVerificationToken:ct()}),e=nt(),e&&(t=$.extend(t,{__RequestVerificationToken2:e})),f=p(n,t,u),b(f,n,{type:"POST",data:t,success:y(f,i),error:w(f,r,n),dataType:"html",traditional:!0,cache:!1,headers:k(u)},r),f}function ti(n,t,i,r,u){var f=p(n,t,u);return b(f,n,{type:"GET",data:t,success:y(f,i),error:w(f,r,n),dataType:"html",traditional:!0,cache:!1,headers:k(u)},r),f}function ii(n){var t=p(n&&n.url,n&&n.data,n);return b(t,n&&n.url,{type:"GET",dataType:"jsonp",traditional:!0,success:y(t,n&&n.callback),headers:k(n)},undefined),t}function ct(){return st||(st=$("input[name=__RequestVerificationToken]").val()),st}function nt(){return ht||(ht=$("input[name=__RequestVerificationToken2]").val()),ht}function ri(){var n,t;return n=$("<input />").attr("type","hidden").attr("name","__RequestVerificationToken").val(ct()),t=nt(),t&&n.after($("<input />").attr("type","hidden").attr("name","__RequestVerificationToken2").val(nt())),n}function ui(n){var t=$(n);if(t.find("input[name=__RequestVerificationToken]").length===0)return t.append(ri())}var ut,st,ht;Object.defineProperty(t,"__esModule",{value:!0});t.setAntiForgeryToken=t.getAntiForgeryTokenValue2=t.getAntiForgeryTokenValue=t.getJSONp=t.getHTML=t.postHTML=t.multipartPostMSJSON=t.postMSJSON=t.getMSJSON=t.msJSONFilter=t.beginRequest=t.wrapErrorCallback=t.wrapSuccessCallback=t.endRequest=t.XhrError=t.Exceptions=t.endWait=t.startWait=t.unloadRequested=t.unloading=void 0;t.unloading=!1;t.unloadRequested=!1;var lt=1,tt=3e5,v=l.handleError,d,it,at={allowArrayResult:!1,byPassAntiForgery:!1},rt={},g;(function(n){n.AjaxException="TFS.Core.Ajax.AjaxException";n.AjaxTimeoutException="TFS.Core.Ajax.AjaxTimeoutException";n.NetworkException="TFS.Core.Ajax.NetworkException"})(g=t.Exceptions||(t.Exceptions={}));d={};ut=function(){function n(n,t){this.message=n;this.type=t}return n}();t.XhrError=ut;var wt=function(n,t,i){var r=new Error(h.format(a.AjaxRequestFailedWithStatus,t));return r.name=g.AjaxException,r.response=n.responseText,r.xhr=n,r.source=i,r},bt=function(n,t){var i=new Error(a.AjaxRequestTimedOut);return i.name=g.AjaxTimeoutException,i.status=n.status,i.xhr=n,i.source=t,i},vt=function(n,t){var i=new Error(a.NetworkConnectionUnavailable);return i.name=g.NetworkException,i.status=n.status,i.xhr=n,i.source=t,i};t.endRequest=ft;t.wrapSuccessCallback=y;t.wrapErrorCallback=w;t.beginRequest=p;t.startWait=function(n){n.options.wait.end=function(){var t=n.options.wait;t.element&&n.isComplete&&!t.timeout&&(t.fade!==!1?(t.element.css("cursor","auto"),t.element.fadeOut("fast",function(){t.element.remove();t.element=null}),t.msgElement&&(t.msgElement.css("cursor","auto"),t.msgElement.fadeOut("fast",function(){t.msgElement.remove();t.msgElement=null}))):(t.element.css("cursor","auto"),t.element.remove(),t.element=null,t.msgElement&&(t.msgElement.css("cursor","auto"),t.msgElement.remove(),t.msgElement=null)),$(window).off("resize."+n.requestId))};var t=n.options.wait;t.showDelay||(t.showDelay=250);t.target||(t.entireWindow=!0,t.target=$("body"));t.target.children(".wait-element").hide();t.target.children(".wait-box").hide();t.showDelay!==0?n.showTimer=s.delay(this,t.showDelay,function(){delete n.showTimer;it(n)}):it(n)};t.endWait=function(n){n.options.wait.end();n.showTimer&&(n.showTimer.cancel(),delete n.showTimer)};it=function(n){var i="",r="",t=n.options.wait;t.image&&(i+='<img class="wait-image" src="'+t.image+'" />');t.message&&(i+='<div class="wait-message">'+t.message+"<\/div>");i.length>0&&(t.target.prepend('<div class="wait-box">'+i+"<\/div>"),t.msgElement=t.target.children(".wait-box").first());t.backgroundcolor&&(r+="background-color: "+t.backgroundcolor+";");t.target.prepend('<div class="wait-element" style="'+r+'"><\/div>');t.element=t.target.children(".wait-element").first();yt(n);$(window).on("resize."+n.requestId,function(){yt(n)});t.minLifetime||(t.minLifetime=100);t.timeout=s.delay(this,t.minLifetime,function(){delete t.timeout;t.end()})};t.msJSONFilter=et;$(window).on("beforeunload",kt);$(window).on("unload",function(){t.unloading=!0;$.each(d,function(n,t){if(t.xhr)try{t.xhr.abort()}catch(i){}})});t.getMSJSON=dt;t.postMSJSON=pt;t.multipartPostMSJSON=gt;t.postHTML=ni;t.getHTML=ti;t.getJSONp=ii;t.getAntiForgeryTokenValue=ct;t.getAntiForgeryTokenValue2=nt;t.setAntiForgeryToken=ui});

define("Presentation/Scripts/TFS/TFS.WebSettingsService",["require","exports","Presentation/Scripts/TFS/TFS.Service","Presentation/Scripts/TFS/TFS.Legacy.Ajax","VSS/Diag"],function(n,t,i,r,u){var f,e;Object.defineProperty(t,"__esModule",{value:!0});t.WebSettingsService=t.WebSettingsScope=void 0,function(n){n[n.User=1]="User";n[n.UserAndTeam=3]="UserAndTeam";n[n.Project=4]="Project";n[n.ProjectAndUser=5]="ProjectAndUser";n[n.Collection=6]="Collection";n[n.Root=7]="Root"}(f=t.WebSettingsScope||(t.WebSettingsScope={}));e=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t}return __extends(t,n),t.prototype.canAccessTeamSettings=function(){var n=this.getTfsContext();return Boolean(n.currentTeam)},t.prototype.beginWriteSetting=function(n,t,i,u,e,o){var s;return typeof t=="boolean"?s="setBoolean":typeof t=="number"?(t=Math.floor(t),s="setInteger"):(s="setString",typeof t=="undefined"?t=null:t!==null&&typeof t!="string"&&(t=$.param(t))),typeof i=="undefined"&&(i=f.User),r.postMSJSON(this._getApiLocation(s,this._getContext(i)),{path:n,value:t,scope:i},u,e,o)},t.prototype.beginReadSetting=function(n,t,i,u,e){return typeof t=="undefined"&&(t=f.User),r.getMSJSON(this._getApiLocation("readSetting",this._getContext(t)),{path:n,scope:t},i,u,e)},t.prototype.writeLocalSetting=function(n,t,i,r){var f=this._getScopedKey(n,i);if(f)try{window.localStorage.setItem(f,t)}catch(e){if(r)throw e;else u.logWarning("Local storage write failed."),u.logWarning(e)}},t.prototype.readLocalSetting=function(n,t,i){var r=this._getScopedKey(n,t);if(r)try{return window.localStorage.getItem(r)}catch(f){if(i)throw f;else u.logWarning("Local storage read failed."),u.logWarning(f)}return null},t.prototype.removeLocalSetting=function(n,t,i){var r=this._getScopedKey(n,t);if(r)try{window.localStorage.removeItem(r)}catch(f){if(i)throw f;else u.logWarning("Local storage removal failed."),u.logWarning(f)}return null},t.prototype._getScopedKey=function(n,t){var i=this.getTfsContext(),r=i.currentIdentity?i.currentIdentity.id:null,s=i.currentTeam?i.currentTeam.identity.id:null,o,e;switch(t){case f.User:return r+n;case f.UserAndTeam:return r+"/"+s+n;case f.Project:return e=i.navigation?i.navigation.projectId:null,o=i.navigation?i.navigation.collection.instanceId:null,o+"/"+e+n;case f.ProjectAndUser:return e=i.navigation?i.navigation.projectId:null,e+"/"+r+n;default:return null}},t.prototype._getApiLocation=function(n,t){return this.getTfsContext().getActionUrl(n,"webSettings",{area:"api",team:t.team,project:t.project,serviceHost:this.getCurrentServiceHost()})},t.prototype._getContext=function(n){return n===f.User||n===f.Collection||n===f.Root?{team:"",project:""}:n===f.Project?{team:"",project:this.getTfsContext().contextData.project.id}:{team:this.getTfsContext().currentTeam.identity.id}},t}(i.TfsService);t.WebSettingsService=e});

define("VSS/Artifacts/Constants",["require","exports"],function(n,t){var i,r;Object.defineProperty(t,"__esModule",{value:!0});t.ToolNames=t.ArtifactTypeNames=void 0,function(n){n.TcmResult="TcmResult";n.TcmResultAttachment="TcmResultAttachment";n.TcmTest="TcmTest";n.Build="Build";n.VersionedItem="VersionedItem";n.LatestItemVersion="LatestItemVersion";n.Changeset="Changeset";n.Shelveset="Shelveset";n.WorkItem="WorkItem";n.Storyboard="Storyboard";n.Commit="Commit";n.CodeReviewId="CodeReviewId";n.CodeReviewSdkId="ReviewId";n.PullRequestId="PullRequestId";n.ProjectDownloadProject="Project";n.Ref="Ref";n.WikiPage="WikiPage";n.PullRequest="PullRequest";n.Issue="Issue"}(i=t.ArtifactTypeNames||(t.ArtifactTypeNames={})),function(n){n.VersionControl="VersionControl";n.WorkItemTracking="WorkItemTracking";n.RemoteWorkItemTracking="RemoteWorkItemTracking";n.TeamBuild="Build";n.TestManagement="TestManagement";n.Requirements="Requirements";n.Hyperlink="Hyperlink";n.Legacy="Legacy";n.CodeSense="CodeSense";n.Git="Git";n.CodeReview="CodeReview";n.ProjectDownload="ProjectDownload";n.Wiki="Wiki";n.GitHub="GitHub"}(r=t.ToolNames||(t.ToolNames={}))});

define("VSS/Artifacts/Services",["require","exports","VSS/Context","VSS/Diag","VSS/Events/Action","VSS/Resources/VSS.Resources.Platform","VSS/Service","VSS/Utils/Url","VSS/Utils/String","VSS/VSS"],function(n,t,i,r,u,f,e,o,s,h){function v(n){return n.toLowerCase()}function p(n){for(var i={},u,r,t=0,f=n.length;t<f;t++)u=l.decodeUri(n[t]),r=v(u.tool),i[r]||(i[r]=[]),i[r].push(u);return i}var c,l,y,a;Object.defineProperty(t,"__esModule",{value:!0});t.ClientLinking=t.LinkingUtilities=t.Artifact=void 0;c=function(){function n(n){this._data=n;this._data.uri||(this._data.uri=l.encodeUri({tool:this.getTool(),type:this.getType(),id:this.getId()}))}return n._execute=function(n,t){var i=n.getUrl(t);i?u.getService().performAction(u.CommonActions.ACTION_WINDOW_OPEN,{url:i,target:"_blank"}):alert(s.format(f.UnknownArtifactType,n.getType()))},n.prototype.getUri=function(){return this._data.uri},n.prototype.getTool=function(){return this._data.tool},n.prototype.getType=function(){return this._data.type},n.prototype.getId=function(){return this._data.id},n.prototype.getTitle=function(){return this.getUri()},n.prototype.setError=function(n){this._error=n},n.prototype.getError=function(){return this._error},n.prototype.execute=function(t){return u.getService().performAction(n.ACTION_ARTIFACT_EXECUTE,{artifact:this,webContext:t})},n.prototype.getUrl=function(){return null},n.ACTION_ARTIFACT_EXECUTE="artifact-execute",n}();t.Artifact=c;u.getService().registerActionWorker(c.ACTION_ARTIFACT_EXECUTE,function(n){return c._execute(n.artifact,n.webContext)});l=function(){function n(){}return n.encodeUri=function(t){return n.VSTFS+[encodeURIComponent(t.tool),encodeURIComponent(t.type),encodeURIComponent(t.id)].join(n.URI_SEPARATOR)},n.decodeUri=function(t){var u,i;if(t.length>n.VSTFS.length&&(u=t.substr(0,n.VSTFS.length).toLowerCase(),u===n.VSTFS&&(i=t.substr(n.VSTFS.length).split(n.URI_SEPARATOR),i.length>=3))){var e=i[0],o=i[1],h=i.slice(2).join("/");return{uri:t,tool:n.legacyDecodeURIComponent(e),type:n.legacyDecodeURIComponent(o),id:n.legacyDecodeURIComponent(h)}}throw new Error(s.format(f.InvalidArtifactUri,t));},n.legacyDecodeURIComponent=function(n){var t;return t=n.replace(/\+/g," "),decodeURIComponent(t)},n.VSTFS="vstfs:///",n.URI_SEPARATOR="/",n}();t.LinkingUtilities=l;y={};a=function(n){function t(){return n.call(this)||this}return __extends(t,n),t.registerArtifactResolver=function(n,t){y[v(n)]=t},t.getArtifactResolver=function(n){return y[v(n)]},t.prototype.beginResolveArtifacts=function(n,i,r){function l(n,t){for(var f=[],r,i=0,u=n.length;i<u;i++)r=new c(n[i]),t&&r.setError(t),f.push(r);return f}function e(){u.resolving===0&&(r(u.results),u.resolving-=1)}function f(n,t){u.resolving-=1;u.results=u.results.concat(n.success?n.artifacts:l(t,n.error));e()}function a(n,i){var r=t.getArtifactResolver(n);return r?(r(i,h,function(n){f(n,i)},function(n){f({success:!1,error:n},i)}),!0):!1}var s=this.getWebContext(),h=$.extend({webContext:s},i),u={results:[],resolving:0},o=p(n);$.each(o,function(){u.resolving+=1});$.each(o,function(n,t){a(n,t)||f({success:!1,error:new Error("NoResolver")},t)});e()},t.MODE_TRANSLATEURL="translateURL",t}(e.VssService);t.ClientLinking=a;o.getTranslatorService().registerUrlTranslator(function(n,t,r,u,f){var o;n&&s.startsWith(n,l.VSTFS,s.ignoreCaseComparer)?(o=t&&t.webContext||i.getDefaultWebContext(),e.getCollectionService(a,o).beginResolveArtifacts([n],{mode:a.MODE_TRANSLATEURL},function(n){n&&n.length===1&&!n[0].getError()?r(n[0].getUrl(o)):f()},u)):f()});h.tfsModuleLoaded("VSS.OM.Artifacts",t)});

define("Build.Common/Scripts/Registration.Artifacts",["require","exports","VSS/Artifacts/Constants","VSS/Artifacts/Services","VSS/VSS"],function(n,t,i,r,u){Object.defineProperty(t,"__esModule",{value:!0});r.ClientLinking.registerArtifactResolver(i.ToolNames.TeamBuild,function(n,t,i,r){u.using(["Build.Common/Scripts/BuildArtifacts"],function(u){u.BuildArtifactResolver.beginResolve(n,t,i,r)})});u.tfsModuleLoaded("Registration.Artifacts",t)});

define("Requirements/Scripts/TFS.Requirements.Setup",["require","exports","VSS/VSS","VSS/Artifacts/Constants","VSS/Artifacts/Services"],function(n,t,i,r,u){Object.defineProperty(t,"__esModule",{value:!0});u.ClientLinking.registerArtifactResolver(r.ToolNames.Requirements,function(n,t,r,u){i.using(["Requirements/Scripts/TFS.Requirements.Utils"],function(i){i.RequirementsArtifactHandler.beginResolve(n,t,r,u)})});i.tfsModuleLoaded("TFS.Requirements.Setup",t)});

define("TestManagement/Scripts/TFS.TestManagement.Setup",["require","exports","VSS/Artifacts/Constants","VSS/Artifacts/Services","VSS/VSS"],function(n,t,i,r,u){Object.defineProperty(t,"__esModule",{value:!0});r.ClientLinking.registerArtifactResolver(i.ToolNames.TestManagement,function(n,t,i,r){u.using(["TestManagement/Scripts/TFS.TestManagement.TestManagementHandler"],function(u){u.TestManagementArtifactHandler.beginResolve(n,t,i,r)})});u.tfsModuleLoaded("TFS.TestManagement.Setup",t)});

define("Presentation/Scripts/TFS/TFS.ArtifactPlugins",["require","exports","q","VSS/Diag"],function(n,t,i,r){function e(n,t){n=n.toLowerCase();u[n]=t}function s(){return u}function h(n,t){var i;n=n.toLowerCase();i=u[n];i?i(t):t(null)}function c(n){var t=i.defer();return h(n,function(i){i?t.resolve(i):t.reject("Could not create plug-in of type "+n)}),t.promise}function l(n){return f(n.tool,n.type)}function f(n,t){return(n+"/"+t).toLowerCase()}function a(n){return f(n.tool,n.type)}var o,u;Object.defineProperty(t,"__esModule",{value:!0});t.combineArtifactType=t.combineToolAndType=t.combineArtifactToolAndType=t.beginGetArtifactPlugin=t.getGlobalArtifactPlugins=t.registerArtifactPluginAsync=t.ArtifactIconType=void 0,function(n){n[n.icon=0]="icon";n[n.colorBar=1]="colorBar";n[n.colorCircle=2]="colorCircle"}(o=t.ArtifactIconType||(t.ArtifactIconType={}));u={};t.registerArtifactPluginAsync=e;t.getGlobalArtifactPlugins=s;t.beginGetArtifactPlugin=c;t.combineArtifactToolAndType=l;t.combineToolAndType=f;t.combineArtifactType=a});

define("VersionControl/Scripts/TFS.VersionControl.Registration.Artifacts",["require","exports","VSS/VSS","VSS/Artifacts/Constants","VSS/Artifacts/Services","Presentation/Scripts/TFS/TFS.ArtifactPlugins"],function(n,t,i,r,u,f){Object.defineProperty(t,"__esModule",{value:!0});u.ClientLinking.registerArtifactResolver(r.ToolNames.VersionControl,function(n,t,r,u){i.using(["VersionControl/Scripts/TFS.VersionControl"],function(i){i.VersionControlArtifactHandler.beginResolve(n,t,r,u)})});u.ClientLinking.registerArtifactResolver(r.ToolNames.Git,function(n,t,r,u){i.using(["VersionControl/Scripts/TFS.VersionControl"],function(i){i.GitArtifactHandler.beginResolve(n,t,r,u)})});f.registerArtifactPluginAsync("git",function(n){i.using(["VersionControl/Scripts/TFS.VersionControl.RelatedArtifacts"],function(t){n(t.VCArtifactPlugin)})});i.tfsModuleLoaded("TFS.VersionControl.Registration.Artifacts",t)});

define("Presentation/Scripts/TFS/TFS.OM.Common",["require","exports","VSS/VSS","VSS/Utils/Core","VSS/Utils/String","VSS/Utils/Array","VSS/Utils/UI","Presentation/Scripts/TFS/TFS.Host.TfsContext","Presentation/Scripts/TFS/TFS.WebSettingsService","Presentation/Scripts/TFS/TFS.Legacy.Ajax","VSS/Diag","VSS/Service","VSS/Events/Action","VSS/Context","VSS/Common/Contracts/Platform"],function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y){function k(n){var t=new Error(u.format("Favorite item '{0}' already exist.",n));return t.name=b.FavoriteItemAlreadyExist,t}function it(n,t,i){var r;return r={area:"api"},t=t||n.navigation.topMostLevel,r.team=i,t>=o.NavigationContextLevels.Application&&(t<o.NavigationContextLevels.Team&&(r.ignoreDefaultTeam=!0,r.team=""),t<o.NavigationContextLevels.Project&&(r.project=""),t<o.NavigationContextLevels.Collection&&(r.serviceHost="")),r}var b,d,g,nt,p,w,tt,rt,et,ut,ft;Object.defineProperty(t,"__esModule",{value:!0});t.AlmUriManager=t.AlmUriBuilder=t.ContextUtils=t.FavoriteStore=t.FavoriteFolder=t.FavoriteItem=t.ProjectCollection=t.Deployment=t.Application=void 0,function(n){n.FavoriteItemAlreadyExist="VSS.Service.FavoriteItemAlreadyExist"}(b||(b={}));d=function(){function n(){}return n.getConnection=function(n){var t=n?n.contextData:v.getDefaultWebContext();return l.VssConnection.getConnection(t,y.ContextHostType.Application)},n.getDefaultConnection=function(){return l.VssConnection.getConnection(v.getDefaultWebContext(),y.ContextHostType.Application)},n}();t.Application=d;g=function(){function n(){}return n.getConnection=function(n){var t=n?n.contextData:v.getDefaultWebContext();return l.VssConnection.getConnection(t,y.ContextHostType.Deployment)},n.getDefaultConnection=function(){return l.VssConnection.getConnection(v.getDefaultWebContext(),y.ContextHostType.Deployment)},n}();t.Deployment=g;nt=function(){function n(){}return n.getConnection=function(n){var t=n?n.contextData:v.getDefaultWebContext();return l.VssConnection.getConnection(t,y.ContextHostType.ProjectCollection)},n.getDefaultConnection=function(){return l.VssConnection.getConnection(v.getDefaultWebContext(),y.ContextHostType.ProjectCollection)},n}();t.ProjectCollection=nt;p=function(){function n(n,t){this.favStore=n;t&&(this.id=t.id,this.name=t.name,this.parentId=t.parentId,this.type=t.type,this.data=t.data,this.artifactIsDeleted=t.artifactIsDeleted)}return n.prototype.path=function(n){return e.calculateTreePath.call(this,n,"/","name","root")},n.prototype.beginRename=function(n,t,r){var u=this,f;this.parent&&this.parent.findChildItem(n,this.type,this.data)?i.handleError(k(n),r,this):(f=$.extend({},this),f.name=n,this.favStore.beginUpdateItems([f],function(){u.name=n;$(window).trigger("favorite-item-renamed",u);typeof t=="function"&&t.call(u,u)},r))},n.prototype.beginDelete=function(n,t,i){this.favStore.beginDeleteItems([this],n,t,i)},n.prototype.onDelete=function(n,t){!t&&this.parent&&this.parent.remove(this);delete this.favStore.all[this.id];n&&$(window).trigger("favorite-item-removed",this)},n.FAVITEM_TYPE_WIT_QUERYITEM="Microsoft.TeamFoundation.WorkItemTracking.QueryItem",n.FAVITEM_TYPE_WIT_QUERYCHART="Microsoft.TeamFoundation.WorkItemTracking.QueryChart",n.FAVITEM_TYPE_VC_PATH="Microsoft.TeamFoundation.VersionControl.Path",n.FAVITEM_TYPE_GIT_REPOSITORY="Microsoft.TeamFoundation.Git.Repository",n.FAVITEM_TYPE_GIT_REPOSITORY_FORK="Microsoft.TeamFoundation.Git.Repository.Fork",n.FAVITEM_TYPE_TFVC_REPOSITORY="Microsoft.TeamFoundation.Tfvc.Repository",n.FAVITEM_TYPE_BUILD_DEFINITION="Microsoft.TeamFoundation.Build.Definition",n.FAVITEM_TYPE_TESTMANAGEMENT_CHART="Microsoft.Teamfoundation.TestManagement.Charts",n.FAVITEM_TYPE_PROJECT="Microsoft.TeamFoundation.Classification.TeamProject",n.FAVITEM_TYPE_TEAM="Microsoft.TeamFoundation.Teams.Team",n.FAVITEM_TYPE_TEST_PLAN="Microsoft.TeamFoundation.TestManagement.Plan",n}();t.FavoriteItem=p;w=function(n){function t(t,i){var r=__construct(this,n,[t,i]);for(var u in r)r.hasOwnProperty(u)&&(this[u]=r[u]);return r.children=[],r}return __extends(t,n),t.prototype.add=function(n,t){this.children.push(n);n.parent=this;t!==!0&&this.children.sort(function(n,t){return u.localeIgnoreCaseComparer(n.name,t.name)})},t.prototype.remove=function(n){f.remove(this.children,n)},t.prototype.clear=function(){this.children=[]},t.prototype.findByPath=function(n){return e.findTreeNode.call(this,n,"/",u.localeIgnoreCaseComparer,"name")},t.prototype.findByData=function(n){for(var i,t=0,r=this.children.length;t<r;t++)if(i=this.children[t],i.data===n)return i;return null},t.prototype.beginCreateNewFolder=function(n,t,i){this.beginCreateNewItem(n,null,null,t,i)},t.prototype.beginCreateNewItem=function(n,r,u,f,e,o){var s,h=this,c;(o===null||o===undefined)&&(o=!0);this.findChildItem(n,r,u)?i.handleError(k(n),e,this):(c={id:undefined,parentId:this.id,name:n,type:r,data:u},s=r?new p(this.favStore,c):new t(this.favStore,c),this.favStore.beginUpdateItems([s],function(){h.add(s);h.favStore.all[s.id]=s;o&&$(window).trigger("favorite-item-created",s);typeof f=="function"&&f.call(h,s)},e))},t.prototype.onDelete=function(t,i){$.each(this.children,function(n,t){t.onDelete(!1,!0)});n.prototype.onDelete.call(this,t,i)},t.prototype.findChildItem=function(n,t,i){for(var r,f=0,e=this.children.length;f<e;f++)if(r=this.children[f],u.localeIgnoreCaseComparer(n,r.name)===0&&r.type===t&&r.data===i)return r;return null},t}(p);t.FavoriteFolder=w;tt={};rt=function(n){function t(t,i,r,u,f,e){var o=n.call(this,null,{id:f,name:e})||this;return o.root=!0,o.favStore=o,o._tfsContext=t,o._routeData=i,o._identity=r,o._scope=u,o.all={},o}return __extends(t,n),t.computeStoreKey=function(n,t,i,r){return n.getActionUrl("list","favorites",$.extend({},r,{identityId:t,scope:i}))},t.createFavoriteStore=function(n,i,r,u,f){var e,o;return r===null&&(r=undefined),e=it(n,i,r),o=t.computeStoreKey(n,r,u,e),new t(n,e,r,u,o,f)},t.beginGetFavoriteStore=function(n,r,u,f,e,o,s,h){var c,l;o?(c=t.createFavoriteStore(n,r,u,f,e),c.beginRefresh(function(){s(c)},h)):(l=t.computeStoreKey(n,u,f,it(n,r,u)),i.queueRequest(this,tt,l,s,h,function(i,o){var s=t.createFavoriteStore(n,r,u,f,e);s.beginRefresh(function(){i(s)},o)}))},t.getFavoriteStore=function(n,i,r,u,f){return t.createFavoriteStore(n,i,r,u,f)},t.prototype.beginRefresh=function(n,t){var i,r=this;i=this._tfsContext.getActionUrl("list","favorites",this._routeData);h.getMSJSON(i,{identityId:this._identity,scope:this._scope},function(t){r._populateItems(t);typeof n=="function"&&n.call(r)},t)},t.prototype.beginDeleteItems=function(n,t,i,r){var e=this,u,f;(r===null||r===undefined)&&(r=!0);n&&n.length&&(f=this._tfsContext.getActionUrl("delete","favorites",this._routeData),u=$.map(n,function(n){return n.id}),h.postMSJSON(f,{identityId:this._identity,scope:this._scope,favItemIds:u},function(){$.each(n,function(n,t){t.onDelete(r)});typeof t=="function"&&t.call(e,n)},i))},t.prototype.beginUpdateItems=function(n,t,i){var u=this,f,e;n&&n.length&&(e=this._tfsContext.getActionUrl("update","favorites",this._routeData),f=$.map(n,function(n){return r.stringifyMSJSON({id:n.id,parentId:n.parentId===u.id?undefined:n.parentId,name:n.name,type:n.type,data:n.data,artifactIsDeleted:n.artifactIsDeleted})}),h.postMSJSON(e,{identityId:this._identity,scope:this._scope,favItemJsons:f},function(i){$.each(i,function(t,i){n[i.index].id=i.id});typeof t=="function"&&t.call(u,n)},i))},t.prototype._populateItems=function(n){var t={},r,i,f,e=this;this.clear();n&&(n.sort(function(n,t){return u.localeIgnoreCaseComparer(n.name,t.name)}),$.each(n,function(n,i){var r;r=i.type?new p(e,i):new w(e,i);t[r.id]=r}));for(r in t)t.hasOwnProperty(r)&&(i=t[r],f=t[i.parentId],f?f.add(i,!0):this.add(i,!0));this.all=t},t.FAVORITE_STORE_SCOPE_FAVORITE_QUERIES="WorkItemTracking.Queries",t.FAVORITE_STORE_SCOPE_FAVORITE_BUILD_DEFINITIONS="Build.Definitions",t.FAVORITE_STORE_SCOPE_FAVORITE_PATHS="VersionControl.Paths",t.FAVORITE_STORE_SCOPE_FAVORITE_PROJECTS="Classification.TeamProjects",t.FAVORITE_STORE_SCOPE_FAVORITE_TEAMS="Team.Teams",t.FAVORITE_STORE_SCOPE_FAVORITE_VC_REPOSITORIES="VersionControl.Repositories",t.FAVORITE_STORE_SCOPE_FAVORITE_TEST_PLAN="TestManagement.Plans",t}(w);t.FavoriteStore=rt,function(n){function t(n,t,i,r){var u=o.TfsContext.getDefault();t=n+t;l.getCollectionService(s.WebSettingsService).beginWriteSetting("/"+t,i,s.WebSettingsScope.User,r)}function i(n,i,r,u){t(n,i,r,u)}function r(n,i,r,u){t(n,i,r,u)}function u(n,i,r,u){t(n,i,r,u)}n.saveTeamUserStringSetting=i;n.saveTeamUserNumberSetting=r;n.saveTeamUserBoolSetting=u}(et=t.ContextUtils||(t.ContextUtils={}));ut=function(){function n(){}return n._combineUri=function(t,i){return n._ensureUriReadyForAppend(t)+i},n._ensureUriReadyForAppend=function(n){return n.lastIndexOf("/")===n.length-1?n:n+"/"},n.browserRequiresParamEncoding=function(){return e.BrowserCheckUtils.isMsie()&&parseInt(e.BrowserCheckUtils.getVersion(),10)<10},n.beginBuildUri=function(t,i,r,u,f,e){u;var a=n.ALM_SCHEME+t+"/"+i,s,l,v=n.browserRequiresParamEncoding();u=u||[];r&&(s=o.TfsContext.getDefault(),u.splice(0,0,{name:n.COLLECTION_PARAM_NAME,value:s.navigation.collection.uri}));l=n.buildQueryParameterString(u);v?h.getMSJSON(s.getActionUrl("Base64EncodeValue","common",{area:"api"}),{value:n.buildQueryParameterString(u,v)},function(t){f.call(this,a+l+"&"+n.ENCODED_PARAM_NAME+"="+t)},e):f.call(this,a+l)},n.buildFeedbackClientUri=function(t){var i,u=[],r=o.TfsContext.getDefault();return i=r.navigation.publicAccessPoint.scheme==="https"?n.MFBCLIENTS_SCHEME:n.MFBCLIENT_SCHEME,i+=r.navigation.publicAccessPoint.authority+r.navigation.collection.vDir,i+=n.PROJECT_PARAM_NAME+":"+r.navigation.project,u.push({name:n.FEEDBACK_REQUEST_IDS_PARAM_NAME,value:t.join(",")}),i+n.buildQueryParameterString(u)},n.buildQueryParameterString=function(n,t){var i="",r;return $.each(n,function(u){r=n[u];i+=u===0?"?":"&";i+=encodeURIComponent(r.name)+"=";i+=t||r.doNotEncode?r.value:encodeURIComponent(r.value)}),i},n.ALM_SCHEME="tfs://",n.COLLECTION_PARAM_NAME="cn",n.PROJECT_PARAM_NAME="p",n.WORK_ITEM_ID_PARAM_NAME="wid",n.MFBCLIENT_SCHEME="mfbclient://",n.MFBCLIENTS_SCHEME="mfbclients://",n.FEEDBACK_REQUEST_IDS_PARAM_NAME="rid",n.ENCODED_PARAM_NAME="__params",n}();t.AlmUriBuilder=ut;ft=function(){function n(){}return n.launchUri=function(n){var t=e.BrowserCheckUtils.isMsie()&&parseInt(e.BrowserCheckUtils.getVersion(),10)>=10;t||window.navigate?a.getService().performAction(a.CommonActions.ACTION_WINDOW_NAVIGATE,{url:n}):a.getService().performAction(a.CommonActions.ACTION_WINDOW_OPEN,{url:n,target:"_blank"})},n}();t.AlmUriManager=ft;i.tfsModuleLoaded("TFS.OM.Common",t)});

define("VSS/Security/Services",["require","exports","VSS/Contributions/LocalPageData","VSS/Diag","VSS/Service"],function(n,t,i,r,u){Object.defineProperty(t,"__esModule",{value:!0});t.SecurityService=void 0;var f="_permissions",e=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t}return __extends(t,n),t.prototype.hasPermission=function(n,t,r){var o=i.getSharedData(f),u,e;return o?(u=o[n],!u)?this.handleMissingState("Security namespace with id '".concat(n,"' not found")):(e=u[t],e===undefined)?this.handleMissingState("No permissions found for security namespace '".concat(n,"' and token '").concat(t,"'")):(r&e)>0:this.handleMissingState("No shared permissions found")},t.prototype.checkPermission=function(n,t,i){if(!this.hasPermission(n,t,i))throw new Error("Access denied: Permission ".concat(i," is needed for the resource ").concat(t,"."));},t.prototype.isPermissionIncluded=function(n,t){var u=i.getSharedData(f),r;return u?(r=u[n],r&&r[t]!==undefined):!1},t.prototype.handleMissingState=function(n){return!1},t}(u.VssService);t.SecurityService=e});

define("VersionControl/Scenarios/Shared/Permissions/PermissionsSource",["require","exports","VSS/Contributions/Services","VSS/Service","VSS/Security/Services","VSS/Utils/Array","VSS/WebApi/Constants","VSS/Serialization","VSS/FeatureAvailability/Services","Presentation/Scripts/TFS/Generated/TFS.Server.WebAccess.Constants"],function(n,t,i,r,u,f,e,o,s,h){function c(n){return Object.keys(n).filter(function(n){return isNaN(Number(n))})}Object.defineProperty(t,"__esModule",{value:!0});t.getStringKeys=t.PermissionsSource=void 0;var l=function(){function n(t){this._securityPermissionsEnumType=t;this._permissionsDataProvider={id:n.DATA_ISLAND_PROVIDER_ID,properties:{serviceInstanceType:e.ServiceInstanceTypes.TFS}};this._webPageDataService=r.getService(i.WebPageDataService);this._securityService=r.getLocalService(u.SecurityService)}return n.prototype.queryPermissionsAsync=function(n,t){var i=this;return t===void 0&&(t=!1),this._refreshDataProviderIfNeeded(n,t).then(function(){return n.map(function(n){return i._getPermissionsResult(n)})})},n.prototype._refreshDataProviderIfNeeded=function(n,t){var r=this,i,u;return t===void 0&&(t=!1),i=f.unique(n.map(function(n){return r.serializeKey(n)})),u=i.map(function(n){return r._getSecurityDataFromPage(n)}),t||!u.every(function(n){return Boolean(n)})?this._webPageDataService.ensureDataProvidersResolved([this._permissionsDataProvider],!0,{permissionKeys:i}):Promise.resolve()},n.prototype._getPermissionsResult=function(n){var t=this,u=this._getSecurityDataFromPage(this.serializeKey(n)),i=(u||"/").split("/"),f=i[0],e=i.slice(1),r={key:n,permissions:{}};return c(this._securityPermissionsEnumType).forEach(function(n){r.permissions[n]=t._getPermission(f,e.join("/"),t._securityPermissionsEnumType[n])}),r},n.prototype._getPermission=function(n,t,i){return s.FeatureAvailabilityService.isFeatureEnabled(h.FeatureAvailabilityFlags.WebAccessVersionControlEnablePermissions,!1)?t?this._securityService.hasPermission(n,t,i):!1:!0},n.prototype._getSecurityDataFromPage=function(t){var i="".concat(n.DATA_ISLAND_CACHE_PREFIX,".").concat(n.DATA_ISLAND_KEY_PREFIX,".").concat(t),r=this._webPageDataService.getPageData(n.DATA_ISLAND_PROVIDER_ID)||{};return o.ContractSerializer.deserialize(r[i],null)},n.DATA_ISLAND_PROVIDER_ID="ms.vss-code-web.permissions-data-provider",n.DATA_ISLAND_CACHE_PREFIX="TFS.VersionControl.PermissionsDataProvider",n.DATA_ISLAND_KEY_PREFIX="SecurityToken",n}();t.PermissionsSource=l;t.getStringKeys=c});

define("VersionControl/Scenarios/Shared/Permissions/GitPermissionsSource",["require","exports","VSS/User/Services","VersionControl/Scenarios/Shared/Permissions/PermissionsSource","VersionControl/Scripts/Generated/TFS.VersionControl.Common"],function(n,t,i,r,u){function l(n){return n.isUserMember}function e(n,t){for(var i,u,r=o(),e=0,s=n;e<s.length;e++)(i=s[e],i.key&&i.key.projectId)&&(i.key.repositoryId?(r.repositories[i.key.repositoryId]||(r.repositories[i.key.repositoryId]=f()),u=r.repositories[i.key.repositoryId],u.isUserMember=t,i.key.branchRefName?u.branches[i.key.branchRefName]=i.permissions||{}:u.repository=i.permissions||{}):(r.project.permissions=i.permissions||{},r.project.isUserMember=t));return r}function v(n,t){var i=n&&n.repositories&&n.repositories[t]||f();return i.repository||{}}function y(n,t,i){var r=n&&n.repositories&&n.repositories[t]||f(),u=r.branches||{};return u[i]||{}}function o(){return{repositories:{},project:s()}}function f(){return{repository:{},branches:{},isUserMember:!1}}function s(){return{permissions:{},isUserMember:!1}}function h(n,t){return{projectId:n,repositoryId:t,branchRefName:null}}function c(n,t,i){return{projectId:n,repositoryId:t,branchRefName:i}}Object.defineProperty(t,"__esModule",{value:!0});t.createBranchGitPermissionsKey=t.createRepositoryGitPermissionsKey=t.getDefaultProjectPermissionSet=t.getDefaultRepositoryPermissionSet=t.getDefaultPermissionSet=t.getBranchPermissions=t.getRepositoryPermissions=t.getPermissionSet=t.GitPermissionsSource=t.getCanViewMyBranches=void 0;t.getCanViewMyBranches=l;var a=function(n){function t(t,i){var r=n.call(this,u.GitRepositoryPermissions)||this;return r._updateWithAnyCreateBranch=function(n){return n.map(function(n){if(!n.permissions.CreateBranch){var t=r._getSecurityDataFromPage(r.serializeKey(n.key)+"AnyCreateBranch");t&&(n.permissions.CreateBranch=!0)}return n})},r._defaultKey=h(t,i),r}return __extends(t,n),t.prototype.queryGitPermissionsAsync=function(t,r){r===void 0&&(r=!1);var u=i.getService().hasClaim(i.UserClaims.Member);return n.prototype.queryPermissionsAsync.call(this,t,r).then(this._updateWithAnyCreateBranch).then(function(n){return e(n,u)})},t.prototype.queryDefaultGitRepositoryPermissionsAsync=function(n){var t=this;return(n===void 0&&(n=!1),!this._defaultKey.projectId||!this._defaultKey.repositoryId)?Promise.resolve(f()):this.queryGitPermissionsAsync([this._defaultKey],n).then(function(n){return n.repositories[t._defaultKey.repositoryId]||f()})},t.prototype.queryDefaultGitRepositoryWithRefNamePermissionsAsync=function(n,t){var r=this,i;return(t===void 0&&(t=!1),i=[this._defaultKey,c(this._defaultKey.projectId,this._defaultKey.repositoryId,n),],!this._defaultKey.projectId||!this._defaultKey.repositoryId)?Promise.resolve(f()):this.queryGitPermissionsAsync(i,t).then(function(n){return n.repositories[r._defaultKey.repositoryId]||f()})},t.prototype.serializeKey=function(n){var t="".concat(n.projectId,"/");return n.repositoryId&&(t+="".concat(n.repositoryId,"/"),n.branchRefName&&(t+="".concat(n.branchRefName))),t},t}(r.PermissionsSource);t.GitPermissionsSource=a;t.getPermissionSet=e;t.getRepositoryPermissions=v;t.getBranchPermissions=y;t.getDefaultPermissionSet=o;t.getDefaultRepositoryPermissionSet=f;t.getDefaultProjectPermissionSet=s;t.createRepositoryGitPermissionsKey=h;t.createBranchGitPermissionsKey=c});

define("VersionControl/Scenarios/Shared/Permissions/SettingsPermissionsSource",["require","exports","VSS/User/Services","VersionControl/Scenarios/Shared/Permissions/PermissionsSource"],function(n,t,i,r){function e(){var n=i.getService().hasClaim(i.UserClaims.Member);return{Read:n,Write:n}}function o(){return{}}var u,f;Object.defineProperty(t,"__esModule",{value:!0});t.getDefaultSettingsPermissions=t.getSettingsPermissions=t.SettingsPermissionsSource=t.SettingsPermissionSet=void 0,function(n){n[n.Read=1]="Read";n[n.Write=2]="Write"}(u=t.SettingsPermissionSet||(t.SettingsPermissionSet={}));f=function(n){function t(){return n.call(this,u)||this}return __extends(t,n),t.prototype.querySettingsPermissionsAsync=function(t){return t===void 0&&(t=!1),n.prototype.queryPermissionsAsync.call(this,["settings"],t).then(e)},t.prototype.serializeKey=function(){return"settings/global"},t}(r.PermissionsSource);t.SettingsPermissionsSource=f;t.getSettingsPermissions=e;t.getDefaultSettingsPermissions=o});

define("VersionControl/Scripts/GitItemFromJsonIsland",["require","exports","VSS/Contributions/Services","VSS/Serialization","VSS/Service","TFS/VersionControl/Contracts","VersionControl/Scripts/Generated/TFS.VersionControl.Legacy.Contracts","VersionControl/Scripts/TFS.VersionControl.VersionSpecs","VSS/Utils/Array"],function(n,t,i,r,u,f,e,o,s){Object.defineProperty(t,"__esModule",{value:!0});t.GitItemFromJsonIsland=void 0;var h=function(){function n(){}return Object.defineProperty(n,"seededItemCount",{get:function(){return this.initializeSeededDataIfNecessary(),this._seededItemCount},enumerable:!1,configurable:!0}),n.getGitItems=function(n,t){var i,r,f,u;for(this.initializeSeededDataIfNecessary(),i=0,r=this.islands;i<r.length;i++)if(f=r[i],u=this.getGitItemsFromIsland(f,n,t),u)return u;return null},n.initializeSeededDataIfNecessary=function(){var c,t,o,s,h,l;if(!this.initialized){for(c=u.getService(i.WebPageDataService),t=c.getPageData("ms.vss-code-web.source-explorer-tree-file-listing-data-provider"),t&&t.items&&t.items.items&&this.islands.push({pathToItems:r.ContractSerializer.deserialize(t.items.items,f.TypeInfo.GitPathToItemsCollection),itemsDescriptor:r.ContractSerializer.deserialize(t.descriptor,f.TypeInfo.GitItemDescriptor),itemsDetailsOptions:r.ContractSerializer.deserialize(t.detailsOptions,e.TypeInfo.ItemDetailsOptions)}),o=0,s=this.islands;o<s.length;o++){h=s[o];for(l in h.pathToItems)n._seededItemCount+=h.pathToItems[l].length}this.initialized=!0}},n.getGitItemsFromIsland=function(n,t,i){var r=[],u=(typeof i.includeContentMetadata=="undefined"||n.itemsDetailsOptions.includeContentMetadata===i.includeContentMetadata)&&(typeof i.recursionLevel=="undefined"||n.itemsDetailsOptions.recursionLevel===i.recursionLevel);return u&&n.itemsDescriptor.versionOptions===f.GitVersionOptions.None&&t.forEach(function(t){var e=t.version,u=t.path||"/",i,f;n.pathToItems[u]&&(i=o.VersionSpec.parse(t.version),(i instanceof o.GitBranchVersionSpec&&n.itemsDescriptor.version===i.branchName||i instanceof o.GitCommitVersionSpec&&n.itemsDescriptor.version===i.commitId||i instanceof o.GitTagVersionSpec&&n.itemsDescriptor.version===i.tagName)&&(f=n.pathToItems[u],r.push(f)))}),r.length===t.length?(r.forEach(function(t){t.forEach(function(t){delete n.pathToItems[t.path]})}),Object.keys(n.pathToItems).length===0&&s.remove(this.islands,n),r):null},n._seededItemCount=0,n.islands=[],n.initialized=!1,n}();t.GitItemFromJsonIsland=h});

define("VersionControl/Scripts/CommitIdHelper",["require","exports"],function(n,t){function i(n){return n&&/^[\da-fA-F]+$/.test(n)&&n.length<=t.SHA1_HASH_LENGTH}function r(n){return i(n)&&n.length===t.SHA1_HASH_LENGTH}function u(n){for(var i={fromVersion:""+n,toVersion:""+n};i.fromVersion.length<t.SHA1_HASH_LENGTH;)i.fromVersion+="0",i.toVersion+="f";return i}function f(n){return!n||n===t.EMPTY_OBJECT_ID}function e(n){return n?n.substr(0,t.SHORT_HASH_LENGTH):n}Object.defineProperty(t,"__esModule",{value:!0});t.getShortCommitId=t.isEmptyObjectId=t.getStartsWithSearchCriteria=t.isValidId=t.isValidPartialId=t.SHORT_HASH_LENGTH=t.EMPTY_OBJECT_ID=t.SHA1_HASH_LENGTH=void 0;t.SHA1_HASH_LENGTH=40;t.EMPTY_OBJECT_ID="0000000000000000000000000000000000000000";t.SHORT_HASH_LENGTH=8;t.isValidPartialId=i;t.isValidId=r;t.getStartsWithSearchCriteria=u;t.isEmptyObjectId=f;t.getShortCommitId=e});

define("VersionControl/Scripts/GitItemUtils",["require","exports","TFS/VersionControl/Contracts","VersionControl/Scripts/CommitIdHelper","VersionControl/Scripts/Generated/TFS.VersionControl.Legacy.Contracts","VersionControl/Scripts/Resources/TFS.Resources.VersionControl","VSS/Utils/String"],function(n,t,i,r,u,f,e){function s(n,t){return{isSymLink:n.isSymLink,isFolder:n.isFolder,serverItem:n.path,version:t,contentMetadata:n.contentMetadata,gitObjectType:this._newToLegacyGitObjectType(n.gitObjectType),commitId:this._toGitObjectId(n.commitId),objectId:this._toGitObjectId(n.objectId),changeDate:null,childItems:null,versionDescription:null,url:null}}function h(n,t,i,r){var e,f,s,u;if(r=r||!1,e=n[0],f=this.gitItemToLegacyGitItem(e,t),f.childItems=[],f.versionDescription=this._getGitItemVersionDescription(e,i),r)for(s=o(n.slice(1)),u=0;u<s.length;u++)f.childItems.push(this.gitItemToLegacyGitItem(s[u],t));else for(u=1;u<n.length;u++)f.childItems.push(this.gitItemToLegacyGitItem(n[u],t));return f}function c(n){return this.getLegacyChangeListFromGitCommitRefAndVersion(n,n.commitId)}function l(n){var t="GC"+n.commitId;return this.getLegacyChangeListFromGitCommitRefAndVersion(n,t)}function a(n,t){var u={changes:n.changes?this.gitChangesToLegacyChanges(n.changes,t):undefined,comment:n.comment,commentTruncated:n.commentTruncated,owner:n.author.name,ownerDisplayName:n.author.email?e.format(f.CommitOwnerDisplayNameFormat,n.author.name,n.author.email):n.author.name,sortDate:n.committer.date,creationDate:n.author.date,changeCounts:n.changeCounts,version:t},i;return $.extend(u,{author:{id:n.author.email,displayName:n.author.name,date:n.author.date,imageUrl:n.author.imageUrl},committer:{id:n.committer.email,displayName:n.committer.name,date:n.committer.date,imageUrl:n.committer.imageUrl},commitId:{full:n.commitId,short:r.getShortCommitId(n.commitId)},commitTime:n.committer.date,parents:$.map(n.parents||[],function(n){return{objectId:{full:n,short:r.getShortCommitId(n)}}})}),i=n,i.push&&$.extend(u,{pushCorrelationId:i.push.pushCorrelationId,pusher:i.push.pushedBy?i.push.pushedBy.displayName:null,pushId:i.push.pushId,pushTime:i.push.date}),u}function v(n,t){return{changeDate:null,childItems:null,contentMetadata:n.contentMetadata,isFolder:n.isFolder,isSymLink:n.isSymLink,serverItem:n.path,version:t,versionDescription:null,url:n.url}}function y(n,t){var i=this;return $.map(n||[],function(n){return{changeType:n.changeType,sourceServerItem:n.sourceServerItem,item:n.item?i.gitItemToLegacyItemModel(n.item,t):null}})}function o(n){for(var r,u=!1,t=[],i=0;i<n.length;i++){if(!n[i].isFolder){t.push(n[i]);continue}for(u=!1,r=0;r<t.length;r++)if(t[r].isFolder&&e.startsWith(n[i].path,t[r].path+"/",e.defaultComparer)){t[r]=n[i];u=!0;break}u===!1&&t.push(n[i])}return t}function p(n,t){var i=t?t.version:null;return n&&n.commitId&&(i=n.commitId),i?e.format(f.CommitDescriptionFormat,r.getShortCommitId(i)):null}function w(n){return{full:n,short:r.getShortCommitId(n)}}function b(n){switch(n){case i.GitObjectType.Bad:return u.GitObjectType.Bad;case i.GitObjectType.Blob:return u.GitObjectType.Blob;case i.GitObjectType.Commit:return u.GitObjectType.Commit;case i.GitObjectType.Ext2:return u.GitObjectType.Ext2;case i.GitObjectType.OfsDelta:return u.GitObjectType.OfsDelta;case i.GitObjectType.RefDelta:return u.GitObjectType.RefDelta;case i.GitObjectType.Tag:return u.GitObjectType.Tag;case i.GitObjectType.Tree:return u.GitObjectType.Tree}}Object.defineProperty(t,"__esModule",{value:!0});t._newToLegacyGitObjectType=t._toGitObjectId=t._getGitItemVersionDescription=t._combineNestedEmptyFolders=t.gitChangesToLegacyChanges=t.gitItemToLegacyItemModel=t.getLegacyChangeListFromGitCommitRefAndVersion=t.gitCommitRefToLegacyChangeList=t.simpleGitCommitRefToLegacyChangeList=t.gitItemArrayToLegacyGitItem=t.gitItemToLegacyGitItem=void 0;t.gitItemToLegacyGitItem=s;t.gitItemArrayToLegacyGitItem=h;t.simpleGitCommitRefToLegacyChangeList=c;t.gitCommitRefToLegacyChangeList=l;t.getLegacyChangeListFromGitCommitRefAndVersion=a;t.gitItemToLegacyItemModel=v;t.gitChangesToLegacyChanges=y;t._combineNestedEmptyFolders=o;t._getGitItemVersionDescription=p;t._toGitObjectId=w;t._newToLegacyGitObjectType=b});

define("Presentation/Scripts/TFS/Generated/TFS.WorkItemTracking.Constants",["require","exports"],function(n,t){var i,r,u,f,e,o,s,h,c,l,a,v,y,p,w,b,k,d,g,nt,tt;Object.defineProperty(t,"__esModule",{value:!0});t.WorkItemTypeIcons=t.WorkItemTrackingMetadataCacheConstants=t.WorkItemSettingsConstants=t.WorkItemLinkConstants=t.WorkItemFormExtensionsConstants=t.WorkItemFormContributionProperties=t.WorkItemFeatureStateConstants=t.WITCommonConstants=t.WellKnownControlNames=t.UnfollowResultStatus=t.QueryResultFormat=t.QueriesConstants=t.OobFieldRefNames=t.FormLayoutType=t.FollowsConstants=t.FieldType=t.DalFields=t.CoreLinkTypeReferenceNames=t.CoreFieldRefNames=t.CoreField=t.CacheStatus=void 0,function(n){n[n.UpToDate=0]="UpToDate";n[n.NewData=1]="NewData";n[n.StaleData=2]="StaleData"}(i=t.CacheStatus||(t.CacheStatus={})),function(n){n[n.Id=-3]="Id";n[n.Rev=8]="Rev";n[n.Title=1]="Title";n[n.Description=52]="Description";n[n.WorkItemType=25]="WorkItemType";n[n.TeamProject=-42]="TeamProject";n[n.State=2]="State";n[n.Reason=22]="Reason";n[n.CreatedBy=33]="CreatedBy";n[n.AssignedTo=24]="AssignedTo";n[n.ChangedBy=9]="ChangedBy";n[n.ChangedDate=-4]="ChangedDate";n[n.CreatedDate=32]="CreatedDate";n[n.RevisedDate=-5]="RevisedDate";n[n.AuthorizedDate=3]="AuthorizedDate";n[n.AuthorizedAs=-1]="AuthorizedAs";n[n.History=54]="History";n[n.AreaPath=-7]="AreaPath";n[n.AreaId=-2]="AreaId";n[n.IterationPath=-105]="IterationPath";n[n.IterationId=-104]="IterationId";n[n.NodeName=-12]="NodeName";n[n.RelatedLinkCount=75]="RelatedLinkCount";n[n.HyperLinkCount=-32]="HyperLinkCount";n[n.AttachedFileCount=-31]="AttachedFileCount";n[n.ExternalLinkCount=-57]="ExternalLinkCount";n[n.CommentCount=-33]="CommentCount";n[n.LinkType=100]="LinkType";n[n.Tags=80]="Tags";n[n.Watermark=7]="Watermark";n[n.BoardColumn=90]="BoardColumn";n[n.BoardColumnDone=91]="BoardColumnDone";n[n.BoardLane=92]="BoardLane";n[n.IsDeleted=-404]="IsDeleted";n[n.Parent=-35]="Parent"}(r=t.CoreField||(t.CoreField={})),function(n){n.AreaId="System.AreaId";n.AreaPath="System.AreaPath";n.AssignedTo="System.AssignedTo";n.AttachedFileCount="System.AttachedFileCount";n.AuthorizedAs="System.AuthorizedAs";n.BoardColumn="System.BoardColumn";n.BoardColumnDone="System.BoardColumnDone";n.BoardLane="System.BoardLane";n.ChangedBy="System.ChangedBy";n.ChangedDate="System.ChangedDate";n.CreatedBy="System.CreatedBy";n.CreatedDate="System.CreatedDate";n.Description="System.Description";n.CommentCount="System.CommentCount";n.ExternalLinkCount="System.ExternalLinkCount";n.History="System.History";n.HyperLinkCount="System.HyperLinkCount";n.RemoteLinkCount="System.RemoteLinkCount";n.Id="System.Id";n.IterationId="System.IterationId";n.IterationPath="System.IterationPath";n.LinkType="System.Links.LinkType";n.NodeName="System.NodeName";n.Reason="System.Reason";n.RelatedLinkCount="System.RelatedLinkCount";n.Rev="System.Rev";n.RevisedDate="System.RevisedDate";n.State="System.State";n.AuthorizedDate="System.AuthorizedDate";n.TeamProject="System.TeamProject";n.Tags="System.Tags";n.Title="System.Title";n.WorkItemType="System.WorkItemType";n.Watermark="System.Watermark";n.IsDeleted="System.IsDeleted";n.Parent="System.Parent"}(u=t.CoreFieldRefNames||(t.CoreFieldRefNames={})),function(n){n.Related="System.LinkTypes.Related";n.Hierarchy="System.LinkTypes.Hierarchy";n.Dependency="System.LinkTypes.Dependency";n.Duplicate="System.LinkTypes.Duplicate"}(f=t.CoreLinkTypeReferenceNames||(t.CoreLinkTypeReferenceNames={})),function(n){n.IDId=-3;n.RevId=8;n.TitleId=1;n.DescriptionId=52;n.WorkItemTypeId=25;n.PortfolioProjectId=-42;n.WorkItemFormIDId=-14;n.WorkItemFormId=-15;n.StateId=2;n.ReasonId=22;n.CreatedById=33;n.WatermarkId=7;n.AssignedToId=24;n.LastChangedById=9;n.LastChangedDateId=-4;n.AuthorizedDateId=3;n.CreatedDateId=32;n.RevisedDateId=-5;n.PersonNameId=-1;n.AuthorizedAsId=-1;n.HistoryId=54;n.AreaPathId=-7;n.AreaIDId=-2;n.IterationPathId=-105;n.IterationIDId=-104;n.NodeNameId=-12;n.RelatedLinkCountId=75;n.RemoteLinkCountId=-34;n.LinkedFileCountId=-32;n.AttachedFileCountId=-31;n.CommentCountId=-33;n.BISURICountId=-57;n.Tags=80;n.BoardColumnId=90;n.BoardColumnDoneId=91;n.BoardLaneId=92;n.RelatedLinks=37;n.PersonID=-6;n.LinkedFiles=51;n.BISURI=58;n.AttachedFiles=50;n.HiddenAttachedFiles=49;n.AreaLevel1=-43;n.AreaLevel2=-44;n.AreaLevel3=-45;n.AreaLevel4=-46;n.AreaLevel5=-47;n.AreaLevel6=-48;n.AreaLevel7=-49;n.IterationLevel1=-50;n.IterationLevel2=-51;n.IterationLevel3=-52;n.IterationLevel4=-53;n.IterationLevel5=-54;n.IterationLevel6=-55;n.IterationLevel7=-56;n.IsDeleted=-404;n.ZZZDummyField=-58;n.Parent=-35}(e=t.DalFields||(t.DalFields={})),function(n){n[n.Internal=0]="Internal";n[n.String=1]="String";n[n.Integer=2]="Integer";n[n.DateTime=3]="DateTime";n[n.PlainText=5]="PlainText";n[n.Html=7]="Html";n[n.TreePath=8]="TreePath";n[n.History=9]="History";n[n.Double=10]="Double";n[n.Guid=11]="Guid";n[n.Boolean=12]="Boolean";n[n.PicklistInteger=14]="PicklistInteger";n[n.PicklistString=15]="PicklistString"}(o=t.FieldType||(t.FieldType={})),function(n){n.ArtifactType="WorkItem";n.UnfollowResult="UnfollowResult"}(s=t.FollowsConstants||(t.FollowsConstants={})),function(n){n[n.Desktop=0]="Desktop";n[n.Mobile=1]="Mobile"}(h=t.FormLayoutType||(t.FormLayoutType={})),function(n){n.BacklogPriority="Microsoft.VSTS.Common.BacklogPriority";n.StackRank="Microsoft.VSTS.Common.StackRank";n.ActivatedBy="Microsoft.VSTS.Common.ActivatedBy";n.ActivatedDate="Microsoft.VSTS.Common.ActivatedDate";n.ClosedBy="Microsoft.VSTS.Common.ClosedBy";n.ClosedDate="Microsoft.VSTS.Common.ClosedDate";n.ResolvedBy="Microsoft.VSTS.Common.ResolvedBy";n.ResolvedDate="Microsoft.VSTS.Common.ResolvedDate";n.StateChangeDate="Microsoft.VSTS.Common.StateChangeDate"}(c=t.OobFieldRefNames||(t.OobFieldRefNames={})),function(n){n.LastVisitedQueryGroupKey="LAST_VISITED_QUERY_GROUP";n.MyFavoritesGroupKey="MY_FAVORITES_GROUP";n.LastVisitedQueryMruKey="Queries/LastVisited";n.TeamFavoriteGroupsExpandStatesMruKey="Queries/FavoriteGroupExpandStates"}(l=t.QueriesConstants||(t.QueriesConstants={})),function(n){n[n.Json=0]="Json";n[n.Html=1]="Html"}(a=t.QueryResultFormat||(t.QueryResultFormat={})),function(n){n[n.unfollowFailed=0]="unfollowFailed";n[n.unfollowSuccess=1]="unfollowSuccess"}(v=t.UnfollowResultStatus||(t.UnfollowResultStatus={})),function(n){n.HtmlControl="HtmlFieldControl";n.PlainTextControl="PlainTextControl";n.FreshnessIndicatorControl="FreshnessIndicatorControl";n.FieldControl="FieldControl";n.DateControl="DateTimeControl";n.ClassificationControl="WorkItemClassificationControl";n.WorkItemLogControl="WorkItemLogControl";n.WorkItemHistoryControl="WorkItemHistoryControl";n.WorkItemStateGraphControl="WorkItemStateGraphControl";n.LinksControl="LinksControl";n.AttachmentsControl="AttachmentsControl";n.WebpageControl="WebpageControl";n.LabelControl="LabelControl";n.TagFieldControl="TagFieldControl";n.TestStepsControl="TestStepsControl";n.AssociatedAutomationControl="AssociatedAutomationControl";n.StageControl="StageControl";n.StageBuildControl="StageBuildControl";n.ReleaseBuildControl="ReleaseBuildControl";n.AcceptanceCriteriaControl="AcceptanceCriteriaControl";n.DevelopmentControl="DevelopmentControl";n.WorkItemDiscussionControl="WorkItemDiscussionControl";n.ParameterSetControl="ParameterSetControl";n.DeploymentsControl="DeploymentsControl"}(y=t.WellKnownControlNames||(t.WellKnownControlNames={})),function(n){n.LinkTypes="LinkTypes";n.WorkItemTypes="WorkItemTypes";n.Nodes="Nodes";n.Fields="Fields";n.AllowedValues="AllowedValues";n.ConstantSets="ConstantSets";n.WorkItemTypeCategories="WorkItemTypeCategories";n.TeamProjects="TeamProjects";n.AdhocQueries="AdhocQueries";n.WorkItemTrackingArea="WIT";n.WitCacheProviderInit="WorkItemTracking.CacheProvider.Initialize"}(p=t.WITCommonConstants||(t.WITCommonConstants={})),function(n){n.DataProviderName="ms.vss-work-web.work-item-feature-state-data-provider"}(w=t.WorkItemFeatureStateConstants||(t.WorkItemFeatureStateConstants={})),function(n){n.ShowOnDeletedWorkItem="showOnDeletedWorkItem";n.Height="height";n.Name="name";n.Inputs="inputs";n.InputId="id";n.InputRequired="isRequired";n.InputMode="inputMode";n.InputValidation="validation";n.InputDataType="dataType";n.InputDescription="description";n.InputType="type";n.InputProperties="properties";n.InputType_WorkItemField="WorkItemField";n.FieldType="Field";n.InputProperties_WorkItemFieldTypes="workItemFieldTypes"}(b=t.WorkItemFormContributionProperties||(t.WorkItemFormContributionProperties={})),function(n){n.ContributionDefaultHeight_Group=150;n.ContributionDefaultHeight_Control=75;n.ContributionTarget_Form="ms.vss-work-web.work-item-form";n.ContributionType_Page="ms.vss-work-web.work-item-form-page";n.ContributionType_Group="ms.vss-work-web.work-item-form-group";n.ContributionType_Control="ms.vss-work-web.work-item-form-control";n.ContributionType_Notifications="ms.vss-work-web.work-item-notifications"}(k=t.WorkItemFormExtensionsConstants||(t.WorkItemFormExtensionsConstants={})),function(n){n.RESOURCELINKTYPES=["Hyperlink","ArtifactLink"];n.WORKITEMLINKUSAGE="workItemLink";n.RESOURCELINKUSAGE="resourceLink";n.ATTACHEDLINKTYPE="AttachedFile";n.HYPERLINKLINKTYPE="Hyperlink";n.ARTIFACTLINKTYPE="ArtifactLink";n.EXTERNALLINKTYPE="ExternalLink";n.ATTRIBUTES_USAGE="usage";n.ATTRIBUTES_EDITABLE="editable";n.ATTRIBUTES_ENABLED="enabled";n.ATTRIBUTES_ACYCLIC="acyclic";n.ATTRIBUTES_DIRECTIONAL="directional";n.ATTRIBUTES_SINGLETARGET="singleTarget";n.ATTRIBUTES_TOPOLOGY="topology";n.ATTRIBUTES_ID="id";n.ATTRIBUTES_AUTHORIZEDDATE="authorizedDate";n.ATTRIBUTES_RESOURCECREATEDDATE="resourceCreatedDate";n.ATTRIBUTES_RESOURCEMODIFIEDDATE="resourceModifiedDate";n.ATTRIBUTES_REVISEDDATE="revisedDate";n.ATTRIBUTES_RESOURCESIZE="resourceSize";n.ATTRIBUTES_COMMENT="comment";n.ATTRIBUTES_NAME="name";n.ATTRIBUTES_ISLOCKED="isLocked"}(d=t.WorkItemLinkConstants||(t.WorkItemLinkConstants={})),function(n){n.DataProviderName="ms.vss-work-web.work-item-settings-data-provider";n.Path="WorkItemTracking/Settings"}(g=t.WorkItemSettingsConstants||(t.WorkItemSettingsConstants={})),function(n){n.CookieFormat="WIT";n.DataProviderExperimentId="ms.vss-work-web.work-item-form-data-providers-experiment"}(nt=t.WorkItemTrackingMetadataCacheConstants||(t.WorkItemTrackingMetadataCacheConstants={})),function(n){n.WorkItemTypeIconNames=["icon_clipboard","icon_crown","icon_trophy","icon_list","icon_book","icon_sticky_note","icon_insect","icon_traffic_cone","icon_chat_bubble","icon_flame","icon_megaphone","icon_code_review","icon_code_response","icon_review","icon_response","icon_test_plan","icon_test_suite","icon_test_case","icon_test_step","icon_test_parameter","icon_star","icon_ribbon","icon_chart","icon_headphone","icon_key","icon_airplane","icon_car","icon_diamond","icon_asterisk","icon_database_storage","icon_government","icon_gavel","icon_parachute","icon_paint_brush","icon_palette","icon_gear","icon_check_box","icon_gift","icon_test_beaker","icon_broken_lightbulb","icon_clipboard_issue","icon_github","icon_pull_request","icon_github_issue"];n.DefaultWorkItemTypeIconName="icon_clipboard"}(tt=t.WorkItemTypeIcons||(t.WorkItemTypeIcons={}))});

define("Presentation/Scripts/TFS/Generated/TFS.Server.WebAccess.WorkItemTracking.Constants",["require","exports"],function(n,t){var i,r,u;Object.defineProperty(t,"__esModule",{value:!0});t.WorkItemTrackingRestResources=t.WitConstants=t.QueryResultFormat=void 0,function(n){n[n.Json=0]="Json";n[n.Html=1]="Html"}(i=t.QueryResultFormat||(t.QueryResultFormat={})),function(n){n.WorkItemsLocationId="72C7DDF8-2CDC-4F60-90CD-AB71C14A399B";n.QueriesLocationId="A67D190C-C41F-424B-814D-0E906F659301";n.WorkItemTypeFieldsLocationId="BD293CE5-3D25-4192-8E67-E8092E879EFB";n.WorkItemRuleEngineLocationId="1A3A1536-DCA6-4509-B9C3-DD9BB2981506";n.AreaName="wit";n.DefaultPreviewApiVersion="1.0-Preview.2";n.DefaultReleaseApiVersion="1.0"}(r=t.WitConstants||(t.WitConstants={})),function(n){n.WorkItems="workItems"}(u=t.WorkItemTrackingRestResources||(t.WorkItemTrackingRestResources={}))});

var __extends=this&&this.__extends||function(){var n=function(t,i){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])},n(t,i)};return function(t,i){function r(){this.constructor=t}if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");n(t,i);t.prototype=i===null?Object.create(i):(r.prototype=i.prototype,new r)}}(),__assign=this&&this.__assign||function(){return __assign=Object.assign||function(n){for(var t,r,i=1,u=arguments.length;i<u;i++){t=arguments[i];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},__assign.apply(this,arguments)};define("VersionControl/Scripts/TFS.VersionControl.WebApi",["require","exports","TFS/VersionControl/Contracts","VersionControl/Scripts/Generated/TFS.VersionControl.Common","VSS/WebApi/RestClient","Presentation/Scripts/TFS/Generated/TFS.WorkItemTracking.Constants","Presentation/Scripts/TFS/Generated/TFS.Server.WebAccess.WorkItemTracking.Constants"],function(n,t,i,r,u,f,e){var o,s;Object.defineProperty(t,"__esModule",{value:!0});t.TfvcHttpClient=t.GitHttpClient=void 0;o=function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.beginGetAllRepositories=function(){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,responseIsCollection:!0})},t.prototype.beginGetProjectRepositories=function(n){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,routeValues:{project:n},responseIsCollection:!0})},t.prototype.beginGetRepository=function(n,t){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,routeValues:{project:n,repositoryId:t}})},t.prototype.beginGetGitRefs=function(n,t){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RefsLocationId,routeValues:{repositoryId:n,filter:t},responseType:i.TypeInfo.GitRef,responseIsCollection:!0})},t.prototype.beginGetGitRef=function(n,t,u,f){return f===void 0&&(f=!1),u.indexOf("refs/")===0&&(u=u.substr(5)),this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RefsLocationId,queryParams:{filter:u,peelTags:f},routeValues:{project:n,repositoryId:t},responseType:i.TypeInfo.GitRef,responseIsCollection:!0})},t.prototype.beginGetGitRefsBatch=function(n,u){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:t.REFS_BATCH_LOCATION_ID,routeValues:{repositoryId:n},data:{refNames:this.normalizeWithRefsPrefix(u),searchType:i.GitRefSearchType.Exact},responseType:i.TypeInfo.GitRef,responseIsCollection:!0})},t.prototype.normalizeWithRefsPrefix=function(n){return n.map(function(n){return n.indexOf("refs/")===0?n:"refs/"+n})},t.prototype.beginUpdateGitRef=function(n,t,u,f){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RefsLocationId,routeValues:{repositoryId:n},data:[{name:t,oldObjectId:u,newObjectId:f}],responseType:i.TypeInfo.GitRefUpdateResult,responseIsCollection:!0})},t.prototype.beginCreateRepository=function(n,t,i){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,data:{project:{id:n,name:t},name:i}})},t.prototype.beginRenameRepository=function(n,t){return this._beginRequest({httpMethod:"PATCH",httpResponseType:"html",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,routeValues:{repositoryId:n},data:{name:t}})},t.prototype.beginDeleteRepository=function(n){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.RepositoriesLocationId,routeValues:{repositoryId:n}})},t.prototype.beginGetCommits=function(n,t,u){var e=this,f=jQuery.Deferred();return this._beginRequestWithAjaxResult({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.CommitsBatchLocationId,routeValues:{repositoryId:n,project:t},data:u,responseType:i.TypeInfo.GitCommitRef,responseIsCollection:!0}).spread(function(n,t,i){var r=e._getLinkResponseHeaders(i);f.resolve({commits:n,startingCommitId:r.startingCommitId,hasMore:!!r.next,stillProcessing:(i.getResponseHeader("Still-Processing")||"").toLowerCase()==="true"})},f.reject),f.promise()},t.prototype.beginPushChanges=function(n,t){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PushesLocationId,routeValues:{repositoryId:n},data:t,requestType:i.TypeInfo.GitPush,responseType:i.TypeInfo.GitPush})},t.prototype.beginGetCommitDiffs=function(n,t,u,f,e,o,s){return this._beginRequest({httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.CommitDiffsLocationId,routeValues:{repositoryId:n,project:t},data:{baseVersion:u.version,baseVersionType:u.versionType,baseVersionOptions:u.versionOptions,targetVersion:f.version,targetVersionType:f.versionType,targetVersionOptions:f.versionOptions,diffCommonCommit:e,$top:o,$skip:s},responseType:i.TypeInfo.GitCommitDiffs})},t.prototype.beginGetPush=function(n,t,u,f,e){return this._beginRequest({httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PushesLocationId,routeValues:{project:t,repositoryId:n,pushId:u},data:{includeCommits:f,includeRefUpdates:e},responseType:i.TypeInfo.GitPush})},t.prototype.beginGetPushes=function(n,t,u,f){return this._beginRequest({httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PushesLocationId,routeValues:{repositoryId:n},data:$.extend({$top:u,$skip:f},t),requestType:i.TypeInfo.GitPushSearchCriteria,responseType:i.TypeInfo.GitPushRef,responseIsCollection:!0})},t.prototype.beginGetItems=function(n,t,u){var f={httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.ItemsBatchLocationId,routeValues:{repositoryId:n,project:t},data:u,responseType:i.TypeInfo.GitItem,responseIsCollection:!0};return this._beginRequest(f)},t.prototype.beginGetItem=function(n,t,i,r,u,f,e,o,s){return this._beginGetItem(n,t,i,r,u,f,e,o,s,0,null)},t.prototype.beginGetItemContent=function(n,t,u,f,e,o){var s={path:u,scopePath:f,recursionLevel:o,includeContentMetadata:!1,latestProcessedChange:!1,download:!1},h;return e&&(s=$.extend(e,s)),h={httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.ItemsLocationId,routeValues:{repositoryId:n,project:t},data:s,responseType:i.TypeInfo.ItemContent,httpResponseType:"text/plain"},this._beginRequest(h,!0)},t.prototype.beginGetItemAjaxResult=function(n,r,u,f,e,o,s,h,c,l,a){var v={path:r,scopePath:f,recursionLevel:e,includeContentMetadata:o,latestProcessedChange:s,download:h,versionDescriptor:c,includeContent:l,resolveLfs:a};return this._beginRequestWithAjaxResult({httpMethod:"GET",area:"git",locationId:"fb93c0db-47ed-4a31-8c20-47552878fb44",resource:"Items",routeTemplate:t.ITEMS_ROUTE_TEMPLATE,responseType:i.TypeInfo.GitItem,routeValues:{project:u,repositoryId:n},queryParams:v,apiVersion:t.ITEMS_API_VERSION}).spread(function(n,t,i){return{gitItem:n,textStatus:t,jqXHR:i}})},t.prototype.getFileContentUrl=function(n,i,r,u,f,e,o){var s=t.ITEMS_ROUTE_TEMPLATE,h=__assign({project:n,repositoryId:i},o),c={path:r,versionDescriptor:f,download:u,resolveLfs:e,$format:"octetStream","api-version":t.ITEMS_API_VERSION};return this.getRequestUrl(s,"git","Items",h,c)},t.prototype.getZippedContentUrl=function(n,i,r,u,f){var e=t.ITEMS_ROUTE_TEMPLATE,o={project:n,repositoryId:i},s={path:r,versionDescriptor:u,resolveLfs:f,$format:"zip","api-version":t.ITEMS_API_VERSION};return this.getRequestUrl(e,"git","Items",o,s)},t.prototype._beginGetItem=function(n,t,u,f,e,o,s,h,c,l,a){var y={path:u,scopePath:f,recursionLevel:o,includeContentMetadata:s,latestProcessedChange:h,download:c},v;return e&&(y=$.extend(e,y)),v={httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.ItemsLocationId,routeValues:{repositoryId:n,project:t},data:y,responseType:i.TypeInfo.GitItem,responseIsCollection:!0},l&&(v.customHeaders={Range:"bytes=0-"+l}),a&&(v.httpResponseType=a),this._beginRequest(v)},t.prototype.beginGetAllPullRequests=function(n,t,u,f,e,o,s,h,c){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n,project:t},data:{status:u,creatorId:f,reviewerId:e,$top:h,$skip:c,sourceRefName:o,targetRefName:s},responseType:i.TypeInfo.GitPullRequest,responseIsCollection:!0})},t.prototype.beginGetPullRequest=function(n,t,u,f){return f===void 0&&(f=!1),this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestsLocationId,routeValues:{project:n,repositoryId:t,pullRequestId:u},responseType:i.TypeInfo.GitPullRequest,data:{includeCommits:f}})},t.prototype.beginCreatePullRequest=function(n,t,u,f,e,o,s,h,c,l){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:t},data:{sourceRefName:u,targetRefName:f,Title:e,Description:o,Reviewers:s,WorkItemRefs:h,ForkSource:{Repository:n},Labels:c,isDraft:!!l},responseType:i.TypeInfo.GitPullRequest})},t.prototype.beginUpdatePullRequest=function(n,t,u){return this._beginRequest({httpMethod:"PATCH",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n,pullRequestId:t},data:u,responseType:i.TypeInfo.GitPullRequest})},t.prototype.beginUpdatePullRequestReviewer=function(n,t,i,u){return this._beginRequest({httpMethod:"PUT",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i},data:u,responseIsCollection:!0})},t.prototype.beginAddPullRequestTfsReviewer=function(n,t,i,u){return this._beginRequest({httpMethod:"PUT",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i},data:u,responseIsCollection:!0})},t.prototype.beginAddPullRequestAadReviewers=function(n,t,i){return this._beginRequest({httpMethod:"POST",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t},data:i,responseIsCollection:!0})},t.prototype.beginDeletePullRequestReviewer=function(n,t,i){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i}})},t.prototype.beginGetSuggestions=function(n){return this._beginRequest({area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.SuggestionsLocationId,routeValues:{repositoryId:n},responseIsCollection:!0})},t.prototype.beginGetPullRequestWorkItemsResourceRef=function(n,t,i,u){var e=this,f=jQuery.Deferred(),o=this._beginRequest({httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.PullRequestWorkItemsLocationId,routeValues:{repositoryId:n,pullRequestId:t},data:{commitsTop:i,commitsSkip:u},responseIsCollection:!0},!0);return o.spread(function(n,t,i){var r=e._getLinkResponseHeaders(i);f.resolve({resourceRefs:n,hasMoreCommits:!!r.next,nextLink:r.next})},f.reject),f.promise()},t.prototype.beginGetReferencedWorkItems=function(n){var u=this,t=jQuery.Deferred(),i,r;return n&&n.length>0?(i=n.map(function(n){return n.id}).join(","),r=[f.CoreFieldRefNames.Id,f.CoreFieldRefNames.AssignedTo,f.CoreFieldRefNames.Title,f.CoreFieldRefNames.State,f.CoreFieldRefNames.WorkItemType].join(","),this._beginRequest({httpMethod:"GET",area:e.WitConstants.AreaName,locationId:e.WitConstants.WorkItemsLocationId,data:{ids:i,fields:r},routeValues:{resource:e.WorkItemTrackingRestResources.WorkItems},responseIsCollection:!0}).then(function(n){var i=u._buildAssociatedWorkItems(n);t.resolve(i)},function(n){t.reject(n)})):t.resolve([]),t.promise()},t.prototype.beginGetTemplateList=function(n,t){return this._beginRequest({httpMethod:"GET",area:r.GitWebApiConstants.AreaName,locationId:r.GitWebApiConstants.TemplatesLocationId,routeValues:{project:n},queryParams:{type:t},responseIsCollection:!0})},t.prototype._buildAssociatedWorkItems=function(n){var t=[];return n&&$.each(n,function(n,i){var r={};$.each(i.fields,function(n,t){switch(n){case f.CoreFieldRefNames.Id:r.id=t;break;case f.CoreFieldRefNames.AssignedTo:r.assignedTo=t;break;case f.CoreFieldRefNames.State:r.state=t;break;case f.CoreFieldRefNames.Title:r.title=t;break;case f.CoreFieldRefNames.WorkItemType:r.workItemType=t}});r.url=i.url;t.push(r)}),t},t.REFS_BATCH_LOCATION_ID="D5E42319-9C64-4ACD-A906-F524A578A7FE",t.ITEMS_ROUTE_TEMPLATE="{project}/_apis/{area}/repositories/{repositoryId}/{resource}/{*path}",t.ITEMS_API_VERSION="5.0-preview.1",t}(u.VssHttpClient);t.GitHttpClient=o;s=function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.beginGetProjectInfo=function(n){return this._beginRequest({area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.VersionControlProjectInfoLocationId,routeValues:{projectId:n},responseType:i.TypeInfo.VersionControlProjectInfo})},t.prototype.beginGetProjectInfos=function(){return this._beginRequest({area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.VersionControlProjectInfosLocationId,responseType:i.TypeInfo.VersionControlProjectInfo,responseIsCollection:!0})},t.prototype.beginGetItem=function(n,t,u,f,e,o){var s={path:n,scopePath:t,recursionLevel:f,filename:e,download:o},h;return u&&(s=$.extend(s,u)),h={httpMethod:"GET",area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.TfvcItemsLocationId,data:s,responseType:i.TypeInfo.TfvcItem,responseIsCollection:!0},this._beginRequest(h)},t.prototype.beginGetItemContent=function(n,t,u,f){var e={path:n,scopePath:t,recursionLevel:f,filename:"",download:!1},o;return u&&(e=$.extend(e,u)),o={httpMethod:"GET",area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.TfvcItemsLocationId,data:e,responseType:i.TypeInfo.TfvcItem,httpResponseType:"text/plain"},this._beginRequest(o,!0)},t.prototype.beginGetItemAjaxResult=function(n,r,u,f,e,o,s,h){var c={path:n,fileName:u,download:f,scopePath:e,recursionLevel:o,versionDescriptor:s,includeContent:h};return this._beginRequestWithAjaxResult({httpMethod:"GET",area:"tfvc",locationId:"ba9fc436-9a38-4578-89d6-e4f3241f5040",resource:"Items",routeTemplate:t.ITEMS_ROUTE_TEMPLATE,responseType:i.TypeInfo.TfvcItem,routeValues:{project:r},queryParams:c,apiVersion:t.ITEMS_API_VERSION}).spread(function(n,t,i){return{tfvcItem:n,textStatus:t,jqXHR:i}})},t.prototype.getFileContentUrl=function(n,i,r,u,f){var e=t.ITEMS_ROUTE_TEMPLATE,o=__assign({project:n},f),s={path:i,versionDescriptor:u,download:r,$format:"octetStream","api-version":t.ITEMS_API_VERSION};return this.getRequestUrl(e,"tfvc","Items",o,s)},t.prototype.getZippedContentUrl=function(n,i,r){var u=t.ITEMS_ROUTE_TEMPLATE,f={project:n},e={path:i,versionDescriptor:r,$format:"zip","api-version":t.ITEMS_API_VERSION};return this.getRequestUrl(u,"tfvc","Items",f,e)},t.prototype.beginGetItemsBatch=function(n){var t={httpMethod:"POST",area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.TfvcItemBatchLocationId,data:n,responseType:i.TypeInfo.TfvcItem,responseIsCollection:!0};return this._beginRequest(t)},t.prototype.beginCreateChangeset=function(n){return this._beginRequest({httpMethod:"POST",area:r.TfvcConstants.AreaName,locationId:r.TfvcConstants.TfvcChangesetsLocationId,data:n,requestType:i.TypeInfo.TfvcChangeset,responseType:i.TypeInfo.TfvcChangesetRef})},t.ITEMS_ROUTE_TEMPLATE="{project}/_apis/{area}/{resource}/{*path}",t.ITEMS_API_VERSION="4.1-preview.1",t}(u.VssHttpClient);t.TfvcHttpClient=s});

define("VersionControl/Scripts/ChangeListIdentityHelper",["require","exports"],function(n,t){function i(n){if(!n)return null;var t=n.indexOf("<");return t>=0?n.substr(0,t).trim():n}function r(n){var t=n.ownerDisplayName,i=n.owner;return t&&t.indexOf("<")!=-1?t.substring(t.indexOf("<")+1,t.lastIndexOf(">")):i&&i.indexOf("@")!=-1?i:null}Object.defineProperty(t,"__esModule",{value:!0});t.getCommitterEmailIdFromChangeList=t.getUserNameWithoutEmail=void 0;t.getUserNameWithoutEmail=i;t.getCommitterEmailIdFromChangeList=r});

define("VersionControl/Scripts/RepositoryContext",["require","exports","VSS/Diag"],function(n,t,i){var u,r;Object.defineProperty(t,"__esModule",{value:!0});t.RepositoryContext=t.RepositoryType=void 0,function(n){n[n.Tfvc=0]="Tfvc";n[n.Git=1]="Git";n[n.GitHub=2]="GitHub";n[n.Bitbucket=3]="Bitbucket"}(u=t.RepositoryType||(t.RepositoryType={}));r=function(){function n(n,t,i){this._tfsContext=n;this._repositoryType=t;this._rootPath=i}return n.prototype.getRepositoryType=function(){return this._repositoryType},n.prototype.getRepository=function(){return undefined},n.prototype.getTfsContext=function(){return this._tfsContext},n.prototype.getRootPath=function(){return this._rootPath},n.prototype.getRepositoryId=function(){return undefined},n.prototype.getClient=function(){return this._client||(this._client=this._createClient()),this._client},n.prototype._createClient=function(){return null},n.prototype.comparePaths=function(){return 0},n.prototype.pathStartsWith=function(n,t){return(n||"").indexOf(t)===0},n.prototype.getRepositoryClass=function(){return undefined},n.prototype.getProjectId=function(){return undefined},n}();t.RepositoryContext=r});

define("VersionControl/Scripts/VersionControlClientServiceBase",["require","exports","Presentation/Scripts/TFS/TFS.Legacy.Ajax","Presentation/Scripts/TFS/TFS.Service","q","VersionControl/Scripts/ChangeListIdentityHelper","VersionControl/Scripts/RepositoryContext","VersionControl/Scripts/Resources/TFS.Resources.VersionControl","VSS/Contributions/Services","VSS/Service","VSS/Utils/Core","VSS/VSS"],function(n,t,i,r,u,f,e,o,s,h,c,l){Object.defineProperty(t,"__esModule",{value:!0});t.VersionControlClientServiceBase=void 0;var a=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t.beginGetChangeListPromise=function(n,i,r){return t.invokeAndGetPromise(t.beginGetChangeList,n,i,r)},t.beginGetAssociatedWorkItemsPromise=function(n,i){return t.invokeAndGetPromise(t.beginGetAssociatedWorkItems,n,i)},t}return __extends(t,n),t.prototype._getApiLocation=function(n){return this.getTfsContext().getActionUrl(n||"","versioncontrol",{area:"api"})},t.prototype.invokeAndGetPromise=function(n){for(var r=this,i=[],t=1;t<arguments.length;t++)i[t-1]=arguments[t];return u.Promise(function(t,u){var f=function(n){t(n)},e=function(n){u(n)};i.push(f,e);n.apply(r,i)})},t.prototype.beginGetFileDiff=function(n,t,i,r){var u=n.getRepositoryId()||"",f={repositoryId:u,diffParameters:t};this._queryDataProvider("ms.vss-code-web.file-diff-data-provider",f,n,i,r)},t.prototype.beginGetChangeList=function(n,t,i,r,u){var f=this,e={repositoryId:n.getRepositoryId()||"",version:t,maxChanges:i},o=function(n){f._processChangeList(n);r(n)};this._queryDataProvider("ms.vss-code-web.change-data-provider",e,n,o,u)},t.prototype.beginFetchMoreChanges=function(n,t,i,r,u){var f=this;this.beginGetChangeListChanges(n,t.version,i,t.changes?t.changes.length:0,function(n){var u=n.results,i;t.changes=(t.changes||[]).concat(u);t.allChangesIncluded=!n.moreResultsAvailable;i=f._convertChangeCountsToObject(n.changeCounts);i&&(t.changeCounts&&$.each(t.changeCounts,function(n,t){i[n]=(i[n]||0)+t}),t.changeCounts=i);typeof r=="function"&&r.call(f,t)},u)},t.prototype.beginGetChangeListChanges=function(n,t,i,r,u,f){var e=n.getRepositoryId()||"",o={repositoryId:e,version:t,maxChanges:i,skipCount:r};this._queryDataProvider("ms.vss-code-web.changelist-changes-data-provider",o,n,u,f)},t.prototype.beginGetAssociatedWorkItems=function(n,t,i,r){var u=n.getRepositoryId()||"",f={repositoryId:u,versions:t};this._queryDataProvider("ms.vss-code-web.associated-workitems-data-provider",f,n,i,r)},t.prototype.beginGetAuthors=function(n,t,r,u){var f=this;l.queueRequest(this,n,"_authors",t,r,function(t,r){i.getMSJSON(f._getApiLocation("authors"),{repositoryId:n.getRepositoryId()||""},function(n){t(n)},r,u)})},t.prototype.beginGetUserPreferences=function(n,t){var r=this;this._userPreferences?n.call(this,this._userPreferences):l.queueRequest(this,this,"_userPreferencesAsync",n,t,function(n,t){i.getMSJSON(r._getApiLocation("userPreferences"),{},function(t){r._userPreferences||(r._userPreferences=t);n(r._userPreferences)},t)})},t.prototype.beginUpdateUserPreferences=function(n,t,r){this._userPreferences=n;i.postHTML(this._getApiLocation("updateUserPreferences"),{preferences:c.stringifyMSJSON(n)},t,r)},t.prototype._setUserPreferencesFromViewData=function(n){this._userPreferences=n},t.prototype._getChangeListFromJsonIsland=function(n,t){var i=null;return n.length&&(i=c.parseMSJSON(n.html(),!1),i&&this._processChangeList(i),t&&n.remove()),i},t.prototype._processChangeList=function(n){if(n.changeCounts=this._convertChangeCountsToObject(n.changeCounts),n.author){var t=n;t.author.displayName||(t.author.displayName=f.getUserNameWithoutEmail(t.author.id))}},t.prototype.beginGetAllGitRepositoriesOptions=function(n,t){var r=this;i.getMSJSON(this._getApiLocation("AllGitRepositoriesOptions"),{},function(t){typeof n=="function"&&n.call(r,t)},t)},t.prototype.beginGetRepositoryOptions=function(n,t,r){var u=this;i.getMSJSON(this._getApiLocation("RepositoryOptions"),{repositoryId:n.getRepositoryId()},function(n){typeof t=="function"&&t.call(u,n)},r)},t.prototype.beginUpdateRepositoryOption=function(n,t,r,u){var f=this;i.postHTML(this._getApiLocation("UpdateRepositoryOption"),{repositoryId:n.getRepositoryId(),option:JSON.stringify(t)},function(n){typeof r=="function"&&r.call(f,n)},u)},t.prototype._queryDataProvider=function(n,t,i,r,u){var f=this,e=h.getService(s.WebPageDataService);e.getDataAsync(n,null,t).then(function(n){return r(n||{})}).catch(function(n){f._handleJsonContentError(n,i,u)})},t.prototype.itemModelToLegacyFileContent=function(n){return{content:n.content,metadata:n.contentMetadata}},t.prototype._convertChangeCountsToObject=function(n){var t=null;return n&&(t={},$.each(n,function(n,i){t[i.Key]=i.Value})),t},t.prototype._handleJsonContentError=function(n,t,i){n.xhr&&n.xhr.statusText==="parsererror"&&t.getRepositoryType()===e.RepositoryType.Tfvc&&(n=new Error(o.ContentJsonParseErrorTFS));typeof i=="function"?i.call(this,n):l.errorHandler.showError(n)},t}(r.TfsService);t.VersionControlClientServiceBase=a});

define("VersionControl/Scripts/VersionSpecUtils",["require","exports","TFS/VersionControl/Contracts","VersionControl/Scripts/TFS.VersionControl.VersionSpecs","VSS/Utils/Date"],function(n,t,i,r,u){function e(n){var u={versionOptions:i.GitVersionOptions.None},t=r.VersionSpec.parse(n);return t instanceof r.PreviousVersionSpec&&(u.versionOptions=i.GitVersionOptions.PreviousChange,t=t.version),t instanceof r.GitBranchVersionSpec?(u.versionType=i.GitVersionType.Branch,u.version=t.branchName):t instanceof r.GitCommitVersionSpec?(u.versionType=i.GitVersionType.Commit,u.version=t.commitId):t instanceof r.GitTagVersionSpec&&(u.versionType=i.GitVersionType.Tag,u.version=t.tagName),u}function o(n){var t;switch(n.versionType){case i.GitVersionType.Branch:t=new r.GitBranchVersionSpec(n.version);break;case i.GitVersionType.Commit:t=new r.GitBranchVersionSpec(n.version);break;case i.GitVersionType.Tag:t=new r.GitTagVersionSpec(n.version)}return n.versionOptions===i.GitVersionOptions.PreviousChange&&(t=new r.PreviousVersionSpec(t)),t}function s(n){var t=r.VersionSpec.parse(n);return f(t)}function f(n){var t={},u;return n instanceof r.LatestVersionSpec?t.versionType=i.TfvcVersionType.Latest:n instanceof r.TipVersionSpec?(t=f(n.version),n.version instanceof r.ShelvesetVersionSpec&&(t.version="S"+t.version),t.versionType=i.TfvcVersionType.Tip):n instanceof r.PreviousVersionSpec?(t=f(n.version),t.versionOption=i.TfvcVersionOption.Previous):n instanceof r.ChangesetVersionSpec?(t.versionType=i.TfvcVersionType.Changeset,t.version=n.changeset.toString()):n instanceof r.ChangeVersionSpec?(t.versionType=i.TfvcVersionType.Change,t.version=n.changeset.toString()):n instanceof r.MergeSourceVersionSpec?(t.versionType=i.TfvcVersionType.MergeSource,t.version=n.changeset.toString(),t.versionOption=n.useRenameSource?i.TfvcVersionOption.UseRename:i.TfvcVersionOption.None):n instanceof r.ShelvesetVersionSpec?(t.versionType=i.TfvcVersionType.Shelveset,u=n,t.version=u.name+(u.owner?";"+u.owner:"")):n instanceof r.DateVersionSpec?(t.versionType=i.TfvcVersionType.Date,t.version=n.date):t.versionType=i.TfvcVersionType.Latest,t}function h(n){var t,e,f,o;switch(n.versionType){case i.TfvcVersionType.Change:t=new r.ChangeVersionSpec(parseInt(n.version,10));break;case i.TfvcVersionType.Changeset:t=new r.ChangesetVersionSpec(parseInt(n.version,10));break;case i.TfvcVersionType.Date:e=u.parseDateString(n.version);t=new r.DateVersionSpec(e);break;case i.TfvcVersionType.MergeSource:t=new r.MergeSourceVersionSpec(parseInt(n.version),n.versionOption===i.TfvcVersionOption.UseRename);break;case i.TfvcVersionType.Shelveset:f=n.version.split(";");t=new r.ShelvesetVersionSpec(f[0],f[1]);break;case i.TfvcVersionType.Tip:n.version[0]==="S"?t=r.VersionSpec.parse(n.version.substring(1)):(o=parseInt(n.version),t=new r.ChangesetVersionSpec(o));t=new r.TipVersionSpec(t);case i.TfvcVersionType.Latest:default:t=new r.LatestVersionSpec}return t}function c(n){if(n instanceof r.GitBranchVersionSpec)return n.toFullName()}Object.defineProperty(t,"__esModule",{value:!0});t.getBranchFullName=t.tfvcVersionDescriptorToVersionSpec=t.tfvcVersionSpecToVersionDescriptor=t.tfvcVersionStringToVersionDescriptor=t.gitVersionDescriptorToVersionSpec=t.gitVersionStringToVersionDescriptor=void 0;t.gitVersionStringToVersionDescriptor=e;t.gitVersionDescriptorToVersionSpec=o;t.tfvcVersionStringToVersionDescriptor=s;t.tfvcVersionSpecToVersionDescriptor=f;t.tfvcVersionDescriptorToVersionSpec=h;t.getBranchFullName=c});

define("VersionControl/Scripts/GitClientService",["require","exports","Presentation/Scripts/TFS/TFS.Legacy.Ajax","TFS/VersionControl/GitRestClient","VersionControl/Scenarios/Shared/Permissions/GitPermissionsSource","VersionControl/Scenarios/Shared/Permissions/SettingsPermissionsSource","VersionControl/Scripts/Generated/TFS.VersionControl.Common","VersionControl/Scripts/Generated/TFS.VersionControl.Common","VersionControl/Scripts/Generated/TFS.VersionControl.Legacy.Contracts","VersionControl/Scripts/GitItemFromJsonIsland","VersionControl/Scripts/GitItemUtils","VersionControl/Scripts/Resources/TFS.Resources.VersionControl","VersionControl/Scripts/TFS.VersionControl.WebApi","VersionControl/Scripts/VersionControlClientServiceBase","VersionControl/Scripts/VersionSpecUtils","VSS/Diag","VSS/Utils/Core","VSS/Utils/String","VSS/VSS"],function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p,w,b,k){Object.defineProperty(t,"__esModule",{value:!0});t.GitClientService=void 0;var d=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t._gitRefZeroValue="0000000000000000000000000000000000000000",t}return __extends(t,n),t.prototype.initializeConnection=function(t){n.prototype.initializeConnection.call(this,t);this._repositoriesByProject={};this._repositoriesByProjectAsync={};this._httpClient=t.getHttpClient(a.GitHttpClient);this._gitRestClient=t.getHttpClient(r.GitHttpClient4_1);this._gitPermissionsSource=new u.GitPermissionsSource;this._settingsPermissionsSource=new f.SettingsPermissionsSource},t.prototype.beginGetAllRepositories=function(n,t){var i=this;k.queueRequest(this,this,"_collectionRepositories",n,t||k.handleError,function(n,t){i._httpClient.beginGetAllRepositories().then(n,t)})},t.prototype.beginGetProjectRepositories=function(n,t,i){var r=this;k.queueRequest(this,this._repositoriesByProjectAsync,n,t,i||k.handleError,function(t,i){r._httpClient.beginGetProjectRepositories(n).then(function(i){r._repositoriesByProject[n]=i;t(i)},i)})},t.prototype.beginGetProjectRepository=function(n,t,i,r){var u=this;this._gitRestClient.getRepository(t,n).then(function(n){i.call(u,n)},r)},t.prototype.beginGetRepository=function(n,t,i){var r=this;this.beginGetAllRepositories(function(u){var f;$.each(u,function(t,i){if(i.id.toLowerCase()===(n||"").toLowerCase())return f=i,!1});f?t.call(r,f):i?i.call(r,new Error(b.format(l.NoRepositoryByIdError,n))):k.handleError(new Error(b.format(l.NoRepositoryByIdError,n)))},i)},t.prototype.clearCachedProjectRepositories=function(n){this._repositoriesByProject[n]=[];this._repositoriesByProjectAsync[n]=null},t.prototype._clearCachedGitRefs=function(n,t){var i=this._getRefTypeCacheProperty(t);n[i]=null},t.prototype._getRefTypeCacheProperty=function(n){return n?"_refs_"+n:"_refs"},t.prototype._getRefTypeForRefName=function(n){return n&&n.indexOf("refs/heads/")===0?e.GitWebApiConstants.HeadsFilter:n&&n.indexOf("refs/tags/")===0?e.GitWebApiConstants.TagsFilter:""},t.prototype.clearBranchesCache=function(n){this._clearCachedGitRefs(n,e.GitWebApiConstants.HeadsFilter)},t.prototype.beginGetGitRefs=function(n,t,i,r){var u=this,f=this._getRefTypeCacheProperty(r);k.queueRequest(this,n,f,function(n){var i=$.grep(n,function(n){return n.isBranch}),r=$.grep(n,function(n){return n.isTag});t.call(u,n,i,r)},i||k.handleError,function(t,i){u._httpClient.beginGetGitRefs(n.id,r).then(function(n){return t(u.decorateWithFriendlyNames(n))},i)})},t.prototype.decorateWithFriendlyNames=function(n){return $.map(n,function(n){var t=n;return t.friendlyName=n.name,(n.name||"").indexOf("refs/heads/")===0?(t.friendlyName=n.name.substr(11),t.isBranch=!0):(n.name||"").indexOf("refs/tags/")===0?(t.friendlyName=n.name.substr(10),t.isTag=!0):t.friendlyName=n.name||"",t})},t.prototype.beginGetGitBranches=function(n,t,i){var r=this;this.beginGetGitRefs(n,function(n,i){t.call(r,i)},i,e.GitWebApiConstants.HeadsFilter)},t.prototype.beginGetGitTags=function(n,t,i){var r=this;this.beginGetGitRefs(n,function(n,i,u){t.call(r,u)},i,e.GitWebApiConstants.TagsFilter)},t.prototype.beginGetGitRef=function(n,t,i,r){var u=this;this._httpClient.beginGetGitRef(n.project.id,n.id,t).then(function(n){typeof i=="function"&&i.call(u,n)},r||k.handleError)},t.prototype.beginGetGitRefsBatch=function(n,t,i,r){var u=this;this._httpClient.beginGetGitRefsBatch(n.id,t).then(function(n){typeof i=="function"&&i.call(u,u.decorateWithFriendlyNames(n))},r||k.handleError)},t.prototype.beginDeleteGitRef=function(n,t,i,r,u){var f=this._gitRefZeroValue;this.beginUpdateGitRef(n,t,i,f,r,u)},t.prototype.beginCreateGitRef=function(n,t,i,r,u){var f=this._gitRefZeroValue;this.beginUpdateGitRef(n,t,f,i,r,u)},t.prototype.beginUpdateGitRef=function(n,t,i,r,u,f){var e=this;this._httpClient.beginUpdateGitRef(n.id,t,i,r).then(function(i){var r=e._getRefTypeForRefName(t);e._clearCachedGitRefs(n,r);typeof u=="function"&&u.call(e,i)},f||k.handleError)},t.prototype.beginSetDefaultBranch=function(n,t,r,u){var f=this;i.postHTML(this._getApiLocation("SetGitDefaultRef"),{repositoryId:n.id,refName:t},function(){n.defaultBranch=t;typeof r=="function"&&r.call(f)},u)},t.prototype.beginGetCommitDiffs=function(n,t,i,r,u,f,e,o,s){var h=y.gitVersionStringToVersionDescriptor(i),c=y.gitVersionStringToVersionDescriptor(r);this._httpClient.beginGetCommitDiffs(n,t,h,c,u,f,e).then(o,s)},t.prototype.beginGetPush=function(n,t,i,r,u,f){this._httpClient.beginGetPush(n.getRepositoryId(),n.getProjectId(),t,i,r).then(u,f)},t.prototype.beginGetPushes=function(n,t,i,r,u,f){this._httpClient.beginGetPushes(n,t,i,r).then(u,f)},t.prototype.beginLockGitRef=function(n,t,r,u){var f=this;i.postHTML(this._getApiLocation("LockGitRef"),{repositoryId:n.id,refName:t},function(){typeof r=="function"&&r.call(f)},u)},t.prototype.beginUnlockGitRef=function(n,t,r,u){var f=this;i.postHTML(this._getApiLocation("UnlockGitRef"),{repositoryId:n.id,refName:t},function(){typeof r=="function"&&r.call(f)},u)},t.prototype.beginCreateRepository=function(n,t,i,r,u){var f=this;this._httpClient.beginCreateRepository(n,t,i).then(function(t){f.clearCachedProjectRepositories(n);typeof r=="function"&&r.call(f,t)},u||k.handleError)},t.prototype.beginRenameRepository=function(n,t,i,r){var u=this;this._httpClient.beginRenameRepository(n.id,t).then(function(){n.name=t;typeof i=="function"&&i.call(u,n)},r||k.handleError)},t.prototype.beginDeleteRepository=function(n,t,i){var r=this;this._httpClient.beginDeleteRepository(n.id).then(function(){r.clearCachedProjectRepositories(n.project.id);typeof t=="function"&&t.call(r)},i||k.handleError)},t.prototype.beginGetBranchDiffSummary=function(n,t,r,u,f){i.postMSJSON(this._getApiLocation("BranchDiffSummary"),{repositoryId:n.id,baseVersion:t,versions:w.stringifyMSJSON(r)},u,f)},t.prototype.beginGetCommitFileDiff=function(n,t,i,r,u,f,e){var o=this,s=n.getRepositoryId(),h={repositoryId:s,baseVersion:t,targetVersion:i,maxNumberOfChanges:r,skipCount:u},c=function(n){o._processChangeList(n);f(n)};this._queryDataProvider("ms.vss-code-web.diff-commits-data-provider",h,n,c,e)},t.prototype.beginGetCommitItems=function(n,t,r,u,f){i.postMSJSON(this._getApiLocation("commitItems"),{version:t,path:r,repositoryId:n.id},u,f,{showGlobalProgressIndicator:!1})},t.prototype.beginGetLastChangeTreeItems=function(n,t,i,r,u,f,e){var o={repositoryId:n.getRepositoryId(),version:t,path:i,allowPartial:r,includeCommits:u};this._queryDataProvider("ms.vss-code-web.git-last-change-tree-items-data-provider",o,n,f,e)},t.prototype.beginGetAnnotateGitDiffs=function(n,t,i,r,u){var f={repositoryId:n.getRepositoryId(),path:t,versions:i};this._queryDataProvider("ms.vss-code-web.annotate-git-diffs-data-provider",f,n,r,u)},t.prototype.beginGetUserLastBranch=function(n,t,r){var u=this;i.getMSJSON(this._getApiLocation("gitUserDefaultBranchName"),{repositoryId:n.id},function(n){t.call(u,n.branchName)},r)},t.prototype.beginGetUserDefaultRepository=function(n,t,r){var u=this;i.getMSJSON(this._getApiLocation("gitUserDefaultRepository"),{projectName:n},function(n){t.call(u,n.repository)},r)},t.prototype.getQueryCriteria=function(n){var t={fromDate:n.fromDate,toDate:n.toDate,fromCommitId:n.fromVersion,toCommitId:n.toVersion,itemPath:n.itemPath,excludeDeletes:n.excludeDeletes,user:n.user,$top:n.top,$skip:n.skip};return n.itemVersion&&(t.itemVersion=y.gitVersionStringToVersionDescriptor(n.itemVersion)),n.compareVersion&&(t.compareVersion=y.gitVersionStringToVersionDescriptor(n.compareVersion)),t},t.prototype.getHistoryQueryResults=function(n){return{moreResultsAvailable:n.hasMore,startingCommitId:n.startingCommitId,unprocessedCount:n.stillProcessing?1:0,unpopulatedCount:n.stillProcessing?1:0,results:$.map(n.commits,function(n){var t={changeList:c.gitCommitRefToLegacyChangeList(n)},i;return n.changes&&n.changes.length&&(i=n.changes[0],$.extend(t,{itemChangeType:i.changeType,serverItem:i.sourceServerItem})),n.statuses&&$.extend(t.changeList,{statuses:n.statuses}),t})}},t.prototype.beginGetHistory=function(n,t,i,r){var u=this,f=this.getQueryCriteria(t);this._httpClient.beginGetCommits(n.getRepositoryId(),n.getProjectId(),f).then(function(n){i(u.getHistoryQueryResults(n))},r||k.handleError)},t.prototype.beginGetCommits=function(n,t,i,r){var u=this;t.itemVersion&&typeof t.itemVersion=="string"&&(t.itemVersion=y.gitVersionStringToVersionDescriptor(t.itemVersion));t.compareVersion&&typeof t.compareVersion=="string"&&(t.compareVersion=y.gitVersionStringToVersionDescriptor(t.compareVersion));this._httpClient.beginGetCommits(n.getRepositoryId(),n.getProjectId(),t).done(function(n){i.call(u,n)}).fail(r||k.handleError)},t.prototype.beginGetCommitsById=function(n,t,i,r){var u=this;this._httpClient.beginGetCommits(n.getRepositoryId(),n.getProjectId(),{ids:t}).done(function(n){i.call(u,n.commits)}).fail(r||k.handleError)},t.prototype.beginPushChanges=function(n,t,i,r){this._httpClient.beginPushChanges(n.id,t).then(function(n){typeof i=="function"&&i(n)},r||k.handleError)},t.prototype.beginGetItems=function(n,t,i,r,u){var o=[],f,e,l;i=i||{};f=h.GitItemFromJsonIsland.getGitItems(t,i);e=function(n){var u=[];$.each(n,function(n,r){r&&r.length!==0?u.push(c.gitItemArrayToLegacyGitItem(r,t[n].version,o[n],i.recursionLevel==s.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders)):u.push(null)});typeof r=="function"&&r(u)};f?e(f):(l={itemDescriptors:$.map(t,function(n){var t=y.gitVersionStringToVersionDescriptor(n.version);return o.push(t),{path:n.path,version:t.version,versionOptions:t.versionOptions,versionType:t.versionType,recursionLevel:i.recursionLevel}}),includeContentMetadata:i.includeContentMetadata},this._httpClient.beginGetItems(n.getRepositoryId(),n.getProjectId(),l).then(e,u||k.handleError))},t.prototype.beginGetItem=function(n,t,i,r,u,f){var l,o,a,e;r=r||{recursionLevel:s.VersionControlRecursionType.OneLevel};r.recursionLevel!==s.VersionControlRecursionType.None&&(l=t,t="");o=null;i&&(o=y.gitVersionStringToVersionDescriptor(i));a=function(n){var t=c.gitItemArrayToLegacyGitItem(n,i,o,r.recursionLevel==s.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders);typeof u=="function"&&u(t)};e=h.GitItemFromJsonIsland.getGitItems([{path:l,version:i}],r);p.Debug.assert(!e||e.length===1,"More than one matching cached git item for path");e?a(e[0]):this._httpClient.beginGetItem(n.getRepositoryId(),n.getProjectId(),t,l,o,r.recursionLevel,r.includeContentMetadata,!1,!1).then(a,f||k.handleError)},t.prototype.beginGetItemContent=function(n,t,i,r,u){this.beginGetItemContentWithRepoId(n,n.getRepositoryId(),t,i,r,u)},t.prototype.beginGetItemContentWithRepoId=function(n,t,i,r,u,f){var o=s.VersionControlRecursionType.None,e=null;r&&(e=y.gitVersionStringToVersionDescriptor(r));this._httpClient.beginGetItemContent(t,n.getProjectId(),i,"",e,o).then(function(n){n[2].status!=206?typeof u=="function"&&u(n[0]):typeof f=="function"&&f(l.FileSizeTooLarge)},function(n){typeof f=="function"&&f(n)})},t.prototype.beginGetItemContentJson=function(n,t,i,r,u){var f=this,e=n.getRepositoryId()||"",o=n.getProjectId(),h=s.VersionControlRecursionType.None,c=i?y.gitVersionStringToVersionDescriptor(i):null;this._httpClient.beginGetItemAjaxResult(e,t,o,null,h,!0,!1,!1,c,!0,!0).then(function(n){var t=f.itemModelToLegacyFileContent(n.gitItem);n.jqXHR.status==206&&(t.exceededMaxContentLength=!0);r(t)},u||k.handleError)},t.prototype.beginGetPullRequestSearch=function(n,t,i,r,u){this._gitRestClient.getPullRequestsByProject(null,n,null,i,t).then(function(n){r(n)},u||k.handleError)},t.prototype.beginGetPullRequests=function(n,t,i,r,u,f,e,o,s,h){var l=this._getBranchRefName(u),a=this._getBranchRefName(f),c;n?this._httpClient.beginGetAllPullRequests(n.getRepositoryId(),n.getProjectId(),t,i,r,l,a,e,o).then(function(n){s(n,t,i,r)},h||k.handleError):(c={creatorId:i,reviewerId:r,status:t},this._gitRestClient.getPullRequestsByProject(null,c,null,o,e).then(function(n){s(n,t,i,r)},h||k.handleError))},t.prototype.beginGetPullRequest=function(n,t,i,r){this._httpClient.beginGetPullRequest(n.getProjectId(),n.getRepositoryId(),t).then(function(n){i(n)},r||k.handleError)},t.prototype.beginCreatePullRequest=function(n,t,i,r,u,f,e,o,s,h,c,l){var a=this._getBranchRefName(i),v=this._getBranchRefName(r);this._httpClient.beginCreatePullRequest(n,t.id,a,v,u,f,e,o,s,h).then(function(n){c(n)},l||k.handleError)},t.prototype.beginUpdatePullRequest=function(n,t,i,r,u){this._httpClient.beginUpdatePullRequest(n.getRepositoryId(),t,i).then(function(n){r(n)},u||k.handleError)},t.prototype.beginUpdatePullRequestReviewer=function(n,t,i,r,u,f){this._httpClient.beginUpdatePullRequestReviewer(n.getRepositoryId(),t,i,r).then(function(n){u(n)},f||k.handleError)},t.prototype.beginAddPullRequestTfsReviewer=function(n,t,i,r,u,f){this._httpClient.beginAddPullRequestTfsReviewer(n.getRepositoryId(),t,i,r).then(function(n){u(n)},f||k.handleError)},t.prototype.beginAddPullRequestAadReviewers=function(n,t,i,r,u){this._httpClient.beginAddPullRequestAadReviewers(n.getRepositoryId(),t,i).then(function(n){r(n)},u||k.handleError)},t.prototype.beginDeletePullRequestReviewer=function(n,t,i,r,u){this._httpClient.beginDeletePullRequestReviewer(n.getRepositoryId(),t,i).then(function(){r()},u||k.handleError)},t.prototype.beginGetSuggestions=function(n,t,i){var r=this;this._checkGitPermissions(n.getProjectId(),n.getRepositoryId(),o.GitRepositoryPermissions.PullRequestContribute).then(function(u){if(!u){t([]);return}r._httpClient.beginGetSuggestions(n.getRepositoryId()).then(function(n){t(n)},i||k.handleError)})},t.prototype.beginGetUserPreferences=function(t,i){var r=this;if(this._userPreferences){t(this._userPreferences);return}this._checkSettingsPermissions(f.SettingsPermissionSet.Read).then(function(u){if(!u){t(r._userPreferences);return}n.prototype.beginGetUserPreferences.call(r,t,i)})},t.prototype.beginUpdateUserPreferences=function(t,i,r){var u=this;this._checkSettingsPermissions(f.SettingsPermissionSet.Write).then(function(f){if(!f){i&&i();return}n.prototype.beginUpdateUserPreferences.call(u,t,i,r)})},t.prototype.beginGetRepositoryOptions=function(t,i,r){var u=this;this._checkSettingsPermissions(f.SettingsPermissionSet.Read).then(function(f){if(!f){i([]);return}n.prototype.beginGetRepositoryOptions.call(u,t,i,r)})},t.prototype.beginGetPullRequestWorkItemsResourceRef=function(n,t,i,r,u,f){this._httpClient.beginGetPullRequestWorkItemsResourceRef(n.getRepositoryId(),t,r,u).then(function(n){i(n.resourceRefs,n.hasMoreCommits,n.nextLink)},f||k.handleError)},t.prototype.beginGetReferencedWorkItems=function(n,t,i){this._httpClient.beginGetReferencedWorkItems(n).then(function(n){t(n)},i||k.handleError)},t.prototype.beginGetPullRequestPingEmail=function(n,t,r,u){i.getMSJSON(this._getApiLocation("pullRequestPingEmail"),{repositoryId:n.getRepositoryId()||"",pullRequestId:t},r,u)},t.prototype.beginGetTemplateList=function(n,t,i,r){this._httpClient.beginGetTemplateList(n,t).then(i,r)},t.prototype.getHttpClient=function(){return this._httpClient},t.prototype.beginGetPullRequestPolicyEvaluations=function(n,t,i,r){var u={repositoryId:n.getRepositoryId(),pullRequestId:t};this._queryDataProvider("ms.vss-code-web.pull-request-detail-policy-data-provider",u,n,i,r)},t.prototype.beginGetPullRequestPolicyEvaluationsByIds=function(n,t,i,r,u){var f={repositoryId:n.getRepositoryId(),pullRequestId:t,policyEvaluationIds:i};this._queryDataProvider("ms.vss-code-web.pull-request-detail-policy-data-provider",f,n,r,u)},t.prototype._checkGitPermissions=function(n,t,i){var r=u.createRepositoryGitPermissionsKey(n,t);return this._gitPermissionsSource.queryGitPermissionsAsync([r]).then(function(n){var r=u.getRepositoryPermissions(n,t);return r[o.GitRepositoryPermissions[i]]})},t.prototype._checkSettingsPermissions=function(n){return this._settingsPermissionsSource.querySettingsPermissionsAsync().then(function(t){return t[f.SettingsPermissionSet[n]]})},t.prototype._getBranchRefName=function(n){return n&&n.indexOf("refs/heads/")!==0?"refs/heads/"+n:n},t}(v.VersionControlClientServiceBase);t.GitClientService=d});

define("VersionControl/Scripts/GitRepositoryContext",["require","exports","VSS/Utils/String","Presentation/Scripts/TFS/TFS.Host.TfsContext","Presentation/Scripts/TFS/TFS.OM.Common","VersionControl/Scripts/GitClientService","VersionControl/Scripts/RepositoryContext"],function(n,t,i,r,u,f,e){Object.defineProperty(t,"__esModule",{value:!0});t.GitRepositoryContext=void 0;var o=function(n){function t(t,i){var r=n.call(this,t,e.RepositoryType.Git,"/")||this;return r._gitRepository=i,r}return __extends(t,n),t.create=function(n,i){return new t(i||r.TfsContext.getDefault(),n)},t.prototype.getRepository=function(){return this._gitRepository},t.prototype._createClient=function(){return u.ProjectCollection.getConnection(this.getTfsContext()).getService(f.GitClientService)},t.prototype.getGitClient=function(){return this.getClient()},t.prototype.comparePaths=function(n,t){return i.localeComparer(n,t)},t.prototype.getRepositoryId=function(){return this._gitRepository?this._gitRepository.id:"00000000-0000-0000-0000-000000000000"},t.prototype.getRepositoryClass=function(){return this.getRepository().isFork?"bowtie-git-fork":"bowtie-git"},t.prototype.getProjectId=function(){return this._gitRepository.project.id},t}(e.RepositoryContext);t.GitRepositoryContext=o});

var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(n){for(var t,r,i=1,u=arguments.length;i<u;i++){t=arguments[i];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},__assign.apply(this,arguments)};define("VersionControl/Scripts/VersionControlUrls",["require","exports","VSS/Utils/String","Presentation/Scripts/TFS/TFS.Host.TfsContext","VersionControl/Scenarios/History/HistoryPushesRoutes","VersionControl/Scripts/Controls/ControlsCommon","VersionControl/Scripts/Generated/TFS.VersionControl.Legacy.Contracts","VersionControl/Scripts/GitRefUtility","VersionControl/Scripts/GitRepositoryContext","VersionControl/Scripts/RepositoryContext","VSS/Navigation/Services","VersionControl/Scripts/VersionSpecUtils"],function(n,t,i,r,u,f,e,o,s,h,c,l){function p(n,t,i,u,f,e){var o,s,h;return t===void 0&&(t=null),i===void 0&&(i=!1),u===void 0&&(u=!1),f===void 0&&(f=null),e===void 0&&(e=null),o=[],s="changesets",n&&(o.push(""+n),s="changeset"),u&&o.push("review"),h="versionControl",t=t||r.TfsContext.getDefault(),e=__assign(__assign(__assign({},e||{}),{parameters:o}),f),i?t.getPublicActionUrl(s,h,e):t.getActionUrl(s,h,e)}function ut(n,t,i,r,u,f,e){u===void 0&&(u=!1);f===void 0&&(f=!1);var o={_a:i,path:t,discussionId:e};return p(n,r,u,f,null,o)}function w(n,t,i,u,f,e){i===void 0&&(i=r.TfsContext.getDefault());u===void 0&&(u=!1);f===void 0&&(f=!1);e===void 0&&(e=null);var o=__assign({},e||{}),s="shelvesets";return n&&(o.ss=n+(t?";"+t:""),s="shelveset"),f&&(o.parameters="review"),u?i.getPublicActionUrl(s,"versionControl",o):i.getActionUrl(s,"versionControl",o)}function ft(n,t,i,r,u,f,e){u===void 0&&(u=null);f===void 0&&(f=!1);var o={path:i,discussionId:e};return r&&(o._a=r),w(n,t,u,f,!1,o)}function d(n,t,u,f,e){var o,s;return e===void 0&&(e=!1),o=[],n||(n=r.TfsContext.getDefault()),u&&i.localeIgnoreCaseComparer(u,"index")!==0&&o.push(u),f||(f={}),f.parameters&&(Array.isArray(f.parameters)?o=o.concat(f.parameters):o.push(f.parameters)),o.length>0&&(f.parameters=o),s=f.project?f.project:n.navigation.project,n.navigation.team&&f.includeTeam!==!1||i.localeIgnoreCaseComparer(s,t)!==0||(f.project=null),e?n.getPublicActionUrl(t,"git",f):n.getActionUrl(t,"git",f)}function a(n,t,i,r,u){u===void 0&&(u=!1);r||(r={});!r.project&&t&&t.project&&t.project.name&&(r.project=t.project.name);r.project&&n.navigation.team&&r.project!==n.navigation.project&&(r.includeTeam=!1);var f=t?t.name:null;return d(n,f,i,r,u)}function et(n,t){return g(n,t,"security")}function ot(n,t){var i=n.getRepositoryId().toLowerCase(),r=o.getFullRefNameFromBranch(t),u=i?"repo=".concat(i):"",f="".concat(i?"&":"","refs=").concat(r),e="&_a=".concat(i?"policiesMid":"policies"),s=n.getTfsContext().getActionUrl("repositories","settings",{})+"?";return"".concat(s).concat(u).concat(f).concat(e)}function g(n,t,i){var r={repositoryId:n.getRepositoryId(),branchName:t};return i&&(r._a=i),n.getTfsContext().getActionUrl("_versioncontrol","admin",r)}function nt(n,t,i,r,u){return u=__assign(__assign({},u||{}),r||{}),i&&(u._a=i),t&&(u.path=t),n.getRepositoryType()===h.RepositoryType.Git?a(n.getTfsContext(),n.getRepository(),null,u):n.getTfsContext().getActionUrl(null,"versionControl",u)}function v(n,t,i,r,u,f){i===void 0&&(i=!1);r===void 0&&(r=!1);u===void 0&&(u=null);f===void 0&&(f=null);var e=[t];return r&&e.push("review"),f=__assign(__assign(__assign({},f||{}),{parameters:e}),u||{}),a(n.getTfsContext(),n.getRepository(),"commit",f,i)}function st(n,t,i,r,u,f,e,o){return u===void 0&&(u=!1),f===void 0&&(f=!1),o===void 0&&(o=null),o=o||{},$.extend(o,{_a:r,path:i,discussionId:e}),v(n,t,u,f,null,o)}function ht(n,t,i,r){var u={id:n,name:n,project:{id:t}},f=new s.GitRepositoryContext(r,u);return v(f,i,!1,!1,null,{project:t,includeTeam:!1})}function ct(n,t,i,r,u,f){return i&&u&&r===e.GitObjectType.Blob?this.getCommitUrlForFile(n,t,i,u,!1,!1,undefined,f):this.getCommitUrl(n,t,!1,!1,undefined,f)}function lt(n,t,i,r){var u={id:n,name:n,project:{id:t}},f=new s.GitRepositoryContext(r,u);return nt(f,null,null,{version:i},{project:t,includeTeam:!1})}function at(n,t){return a(n.getTfsContext(),n.getRepository(),"commits",__assign({parameters:u.CommitsHubRoutes.commitsSearchRouteParam},t),!1)}function vt(n,t,i){return a(n.getTfsContext(),n.getRepository(),"branches",{_a:"commits",baseVersion:t,targetVersion:i},!1)}function yt(n,t,i){return a(n.getTfsContext(),n.getRepository(),"branches",{_a:"files",baseVersion:t,targetVersion:i},!1)}function pt(n,t){return a(n.getTfsContext(),n.getRepository(),u.CommitsHubRoutes.commitsRoute,{itemVersion:y(t)},!1)}function wt(n,t){return a(n.getTfsContext(),n.getRepository(),u.CommitsHubRoutes.commitsRoute,{itemVersion:tt(t)},!1)}function bt(n,t){var i={_a:"contents",version:y(t)};return a(n.getTfsContext(),n.getRepository(),null,i,!1)}function kt(n,t){return a(n.getTfsContext(),n.getRepository(),u.PushesHubRoutes.pushesRoute,{itemVersion:y(t)},!1)}function dt(n,t){return a(n.getTfsContext(),n.getRepository(),null,{version:b(t),_a:"contents"},!1)}function gt(n,t){return a(n.getTfsContext(),n.getRepository(),u.CommitsHubRoutes.commitsRoute,{itemVersion:b(t)},!1)}function b(n){return"GT"+n}function y(n){return"GB"+n}function tt(n){return"GC"+n}function ni(n,t,i,r,u){return r===void 0&&(r=!1),u===void 0&&(u={}),k(n,t,i,r,__assign(__assign({},u),{_a:"commits"}))}function k(n,t,i,r,f){r===void 0&&(r=!1);f===void 0&&(f={});var e=__assign(__assign({},f||{}),{parameters:""+t});return i&&$.extend(e,{refName:i}),a(n.getTfsContext(),n.getRepository(),u.PushesHubRoutes.pushRoute,e,r)}function ti(n,t,i,r){return r===void 0&&(r=!1),k(n,t,i,r,{_a:f.VersionControlActionIds.CommitsRemoved})}function ii(n,t,i){var f=n.getProjectId(),r,u;if(n.getRepositoryType()===h.RepositoryType.Git){var e=n.getRepositoryId(),r=i?l.gitVersionStringToVersionDescriptor(i):null,u=n.getClient().getHttpClient();return u.getZippedContentUrl(f,e,t,r,!0)}return r=i?l.tfvcVersionStringToVersionDescriptor(i):null,u=n.getClient().getHttpClient(),u.getZippedContentUrl(f,t,r)}function ri(n,t,i,r,u){var f,e;r===void 0&&(r=!1);u===void 0&&(u=null);var o=!r,s=n.getProjectId();if(n.getRepositoryType()===h.RepositoryType.Git){var c=n.getRepositoryId(),f=i?l.gitVersionStringToVersionDescriptor(i):null,e=n.getClient().getHttpClient();return e.getFileContentUrl(s,c,t,o,f,!0,u)}return f=i?l.tfvcVersionStringToVersionDescriptor(i):null,e=n.getClient().getHttpClient(),e.getFileContentUrl(s,t,o,f,u)}function ui(n,t,i,r,u){return i===void 0&&(i=!1),r===void 0&&(r=!1),u===void 0&&(u=null),n.getRepositoryType()===h.RepositoryType.Git?v(n,t.commitId.full,i,r,u):t.changesetId?p(t.changesetId,n.getTfsContext(),i,r,u):w(t.shelvesetName,t.owner,n.getTfsContext(),i,r,u)}function fi(n,t,i,r,u,f,e,o){var s,h,l;return(t===void 0&&(t=null),i===void 0&&(i=null),r===void 0&&(r=!1),u===void 0&&(u=null),f===void 0&&(f=null),e===void 0&&(e=null),o===void 0&&(o=null),!n)?null:(s={sourceRef:t!==null?t:null,targetRef:i!==null?i:null,sourceRepositoryId:e!==null?e:null,targetRepositoryId:o!==null?o:null},u&&$.extend(s,u),f=f||{},h=a(n.getTfsContext(),n.getRepository(),"pullrequestcreate",f,r),l=c.HistoryService.serializeState(s),l?h+"?"+l:h)}function it(n,t,i,r,u,f){return i===void 0&&(i=!1),r===void 0&&(r=null),u===void 0&&(u=null),f===void 0&&(f=null),rt(n.getTfsContext(),n.getRepository(),t,i,r,u,f)}function rt(n,t,i,r,u,f,e){r===void 0&&(r=!1);u===void 0&&(u=null);f===void 0&&(f=null);e===void 0&&(e=null);var o=[i.toString()];return f=__assign(__assign(__assign({},f||{}),{parameters:o,_a:"overview"}),u),e||(e="pullrequest"),a(n,t,e,f,r)}function ei(n,t,i){var r={parameters:[t.toString()],_a:"files",iteration:i};return i-1>0&&(r=__assign(__assign({},r),{base:i-1})),a(n.getTfsContext(),n.getRepository(),"pullrequest",r,!1)}function oi(n){return a(n.getTfsContext(),n.getRepository(),"pullrequests",{})}function si(n){return a(n.getTfsContext(),n.getRepository(),"branches",{area:null})}function hi(n,t,i,r,u){u===void 0&&(u=null);var f={id:n,name:n,project:{id:t}},e=new s.GitRepositoryContext(r,f);return it(e,i,!0,null,u?u:{project:t,includeTeam:!1})}Object.defineProperty(t,"__esModule",{value:!0});t.getPullRequestUrlUsingRepoId=t.getBranchesUrl=t.getPullRequestsUrl=t.getPullRequestIterationUrl=t.getPullRequestUrlByRepository=t.getPullRequestUrl=t.getCreatePullRequestUrl=t.getChangeListUrl=t.getFileContentUrl=t.getZippedContentUrl=t.getRemovedCommitsInPushUrl=t.getPushUrl=t.getPushCommitsUrl=t.getCommitItemVersion=t.getBranchItemVersion=t.getTagItemVersion=t.getTagHistoryUrl=t.getTagExplorerUrl=t.getBranchUpdatesUrl=t.getBranchExplorerUrl=t.getCommitHistoryUrl=t.getBranchHistoryUrl=t.getBranchCompareFilesUrl=t.getBranchCompareUrl=t.getCommitsSearchUrl=t.getRefUrlUsingRepoId=t.getCommitDetailUrl=t.getCommitUrlUsingRepoId=t.getCommitUrlForFile=t.getCommitUrl=t.getExplorerUrl=t.getBranchAdminUrl=t.getBranchPolicyUrl=t.getBranchSecurityUrl=t.getGitActionUrlByRepository=t.getGitActionUrl=t.getShelvesetUrlForFile=t.getShelvesetUrl=t.getChangesetUrlForFile=t.getChangesetUrl=void 0;t.getChangesetUrl=p;t.getChangesetUrlForFile=ut;t.getShelvesetUrl=w;t.getShelvesetUrlForFile=ft;t.getGitActionUrl=d;t.getGitActionUrlByRepository=a;t.getBranchSecurityUrl=et;t.getBranchPolicyUrl=ot;t.getBranchAdminUrl=g;t.getExplorerUrl=nt;t.getCommitUrl=v;t.getCommitUrlForFile=st;t.getCommitUrlUsingRepoId=ht;t.getCommitDetailUrl=ct;t.getRefUrlUsingRepoId=lt;t.getCommitsSearchUrl=at;t.getBranchCompareUrl=vt;t.getBranchCompareFilesUrl=yt;t.getBranchHistoryUrl=pt;t.getCommitHistoryUrl=wt;t.getBranchExplorerUrl=bt;t.getBranchUpdatesUrl=kt;t.getTagExplorerUrl=dt;t.getTagHistoryUrl=gt;t.getTagItemVersion=b;t.getBranchItemVersion=y;t.getCommitItemVersion=tt;t.getPushCommitsUrl=ni;t.getPushUrl=k;t.getRemovedCommitsInPushUrl=ti;t.getZippedContentUrl=ii;t.getFileContentUrl=ri;t.getChangeListUrl=ui;t.getCreatePullRequestUrl=fi;t.getPullRequestUrl=it;t.getPullRequestUrlByRepository=rt;t.getPullRequestIterationUrl=ei;t.getPullRequestsUrl=oi;t.getBranchesUrl=si;t.getPullRequestUrlUsingRepoId=hi});

define("VersionControl/Scripts/Mentions/PullRequestMentionDataProvider",["require","exports","q","VSS/Service","VSS/Utils/String","TFS/VersionControl/GitRestClient","VersionControl/Scripts/VersionControlUrls","TFS/VersionControl/Contracts","Mention/Scripts/TFS.Mention.Helpers","VSS/Utils/Array"],function(n,t,i,r,u,f,e,o,s,h){function c(n,t){return n&&n.original&&t&&t.original&&n.original.id-t.original.id}Object.defineProperty(t,"__esModule",{value:!0});t.PullRequestMentionDataProvider=void 0;var l=function(){function n(){this._gitRestClient=r.getClient(f.GitHttpClient,s.getMainTfsContext().contextData);this._dataCache={}}return n.instance=function(){return n._instance||(n._instance=new n),n._instance},n.prototype.initializeMyPullRequests=function(){var n;if(!this._myPRs){if(n=s.getMainTfsContext(),!n.contextData.project||!n.contextData.project.id){this._myPRs=i.resolve([]);return}var t={repositoryId:null,includeLinks:!1,status:o.PullRequestStatus.All,creatorId:n.currentIdentity.id,reviewerId:null,sourceRefName:null,targetRefName:null,sourceRepositoryId:null,maxTime:null,minTime:null,queryTimeRangeType:null},r={repositoryId:null,includeLinks:!1,status:o.PullRequestStatus.All,creatorId:null,reviewerId:n.currentIdentity.id,sourceRefName:null,targetRefName:null,sourceRepositoryId:null,maxTime:null,minTime:null,queryTimeRangeType:null},u=this._gitRestClient.getPullRequestsByProject(n.contextData.project.id,t,0,0,20).then(function(t){return t.map(function(t){return{title:t.title,id:t.pullRequestId,url:e.getPullRequestUrlUsingRepoId(t.repository.id,t.repository.project.id,t.pullRequestId,n,{project:t.repository.project.id,includeTeam:!1})}})}),f=this._gitRestClient.getPullRequestsByProject(n.contextData.project.id,r,0,0,10).then(function(t){return t.map(function(t){return{title:t.title,id:t.pullRequestId,url:e.getPullRequestUrlUsingRepoId(t.repository.id,t.repository.project.id,t.pullRequestId,n,{project:t.repository.project.id,includeTeam:!1})}})});this._myPRs=i.allSettled([u,f]).then(function(n){var t=[];return n.forEach(function(n){n.state=="fulfilled"&&(t=h.union(t,n.value,c))}),t},function(){return[]})}},n.prototype.getPullRequests=function(n){var r=this,t={};return n.forEach(function(n){r._dataCache[n.toString()]?t[n]=r._dataCache[n.toString()]:(t[n]=n>0?r._gitRestClient.getPullRequestById(n).then(function(n){return{title:n.title,id:n.pullRequestId,url:e.getPullRequestUrlUsingRepoId(n.repository.id,n.repository.project.id,n.pullRequestId,s.getMainTfsContext(),{project:n.repository.project.id,includeTeam:!1})}},function(){return null}):i.resolve(null),r._dataCache[n.toString()]=t[n])}),t},n.prototype.searchPullRequests=function(n){var t=this,r=Object.keys(this._dataCache).map(function(n){return t._dataCache[n]});return i.allSettled(r).then(function(i){var r=[];return i.forEach(function(i){if(i.state==="fulfilled"&&i.value){var u=i.value;t._shouldIncludePR(u,n)&&r.push({original:u,highlighted:u})}}),r}).then(function(i){var r=[];return t._myPRs.then(function(u){return u.forEach(function(i){t._shouldIncludePR(i,n)&&r.push({original:i,highlighted:i})}),h.union(i,r,c)})})},n.prototype._shouldIncludePR=function(n,t){return t===""||u.caseInsensitiveContains(n.title,t)||u.caseInsensitiveContains(n.id.toString(),t)},n}();t.PullRequestMentionDataProvider=l});

define("VersionControl/Scripts/Mentions/PullRequestMentionAutocomplete",["require","exports","q","Mention/Scripts/TFS.Mention","Mention/Scripts/TFS.Mention.Autocomplete.JQueryAutocomplete","VersionControl/Scripts/Mentions/PullRequestMentionDataProvider","VSS/Utils/String","Mention/Scripts/TFS.Mention.Helpers","VSS/Utils/Array"],function(n,t,i,r,u,f,e,o,s){function v(n){return new h(n)}Object.defineProperty(t,"__esModule",{value:!0});t.createPlugin=t.PullRequestAutocomplete=void 0;var c=new RegExp("(".concat(r.Constants.PATTERN_WORD_START_SEPARATOR,")!([0-9]+)$"),"i"),l=new RegExp("(".concat(r.Constants.PATTERN_WORD_START_SEPARATOR,")!(([^").concat("\\s![","]*)$)"),"i"),a=new RegExp("^(".concat(r.Constants.PATTERN_WORD_END_SEPARATOR,")"),"i"),h=function(n){function t(t){var i=__construct(this,n,[t]);for(var r in i)i.hasOwnProperty(r)&&(this[r]=i[r]);return f.PullRequestMentionDataProvider.instance().initializeMyPullRequests(),i}return __extends(t,n),t.prototype.dispose=function(){},t.prototype.getPluginName=function(){return"PullRequestAutocomplete"},t.prototype.canOpen=function(n){var t=this.mentionPattern().exec(n.textBeforeSelection),i;return t?(i=t.index,t[1]&&(i+=t[1].length),{start:i,end:n.textBeforeSelection.length}):null},t.prototype.getSuggestions=function(n){var t=$.Deferred(),e={},r=c.exec(n.textBeforeSelection),u,o,h,f;return r?(o=this._findPullRequestById(r[2]),h=this._searchPullRequests(r[2]),u=i.all([o,h]).spread(function(n,t){return s.union(n,t,function(n,t){return(n.original&&n.original.id)-(t.original&&t.original.id)})})):(f=this.mentionPattern().exec(n.textBeforeSelection),u=f?this._searchPullRequests(f[2]):this._searchPullRequests("")),u.then(function(n){n=n.filter(function(n){return n.original!==null}).sort(function(n,t){return t.original.id-n.original.id});e.suggestionsCount="".concat(n.length);t.resolve({result:n,telemetry:e})},function(n){t.reject(n)}),t},t.prototype._findPullRequestById=function(n){var i=this,t=parseInt(n);return f.PullRequestMentionDataProvider.instance().getPullRequests([t])[t].then(function(t){return t?[{original:t,highlighted:i._searchHighlightedMention(n.toString(),t)}]:[]})},t.prototype._searchPullRequests=function(n){var t=this;return f.PullRequestMentionDataProvider.instance().searchPullRequests(n).then(function(i){return i.forEach(function(i){i.highlighted=t._searchHighlightedMention(n,i.original)}),i})},t.prototype.renderSuggestion=function(n,t){return $("<li>\n                <a>\n                    <span class='bowtie-icon bowtie-tfvc-pull-request pr-icon'><\/span>\n                    <span class='".concat(r.CssClasses.AUTOCOMPLETE_ID,"'>PR ").concat(t.original.id,": <\/span>\n                    <span class='").concat(r.CssClasses.AUTOCOMPLETE_TITLE,"'>").concat(t.highlighted.title,"<\/span>\n                <\/a>\n            <\/li>")).appendTo(n)},t.prototype.afterRender=function(){},t.prototype.getReplacementText=function(n,t,i){var r=this.mentionPattern().exec(n.textBeforeSelection),f=r.index+r[1].length+1,e=n.textBeforeSelection.substr(0,f),u=t.original.id.toString();return a.exec(n.textAfterSelection)||(u+=" "),{textBeforeSelection:i?n.textBeforeSelection:e+u,textInSelection:"",textAfterSelection:n.textAfterSelection}},t.prototype.getReplacementHtml=function(n){var t=n.original;return r.createHtmlMention(t.url,"PR ".concat(t.id,": ").concat(t.title))},t.prototype.getProviderName=function(){return"PullRequestAutocompleteProvider"},t.prototype.mentionPattern=function(){return l},t.prototype._searchHighlightedMention=function(n,t){var c=t,r='<span class="'.concat(u.CssClasses.HIGHLIGHT,'">$&<\/span>'),i=n.split(/\s+/).filter(function(n){return!!n}).map(function(n){return e.htmlEncode(n)}),h=o.searchString(t.id.toString(),i,o.SearchBehavior.Prefix,r),f=o.searchString(e.htmlEncode(t.title),i,o.SearchBehavior.Contains,r),s=!0;return i.forEach(function(n){var t=h.found[n]||f.found[n];t||(s=!1)}),s?{id:t.id,title:f.highlightedSource,url:t.url}:{id:t.id,title:e.htmlEncode(t.title),url:t.url}},t}(u.JQueryAutocompletePlugin);t.PullRequestAutocomplete=h;t.createPlugin=v});

define("VersionControl/Scripts/Mentions/PullRequestMentionParser",["require","exports","Mention/Scripts/TFS.Mention"],function(n,t,i){function u(){return new r}Object.defineProperty(t,"__esModule",{value:!0});t.createParser=t.PullRequestMentionParser=void 0;var r=function(n){function t(){var t=__construct(this,n,arguments);for(var i in t)t.hasOwnProperty(i)&&(this[i]=t[i]);return t}return __extends(t,n),t.prototype.parseFromText=function(n){for(var u=[],f=new RegExp("(".concat(i.Constants.PATTERN_WORD_START_SEPARATOR,")!([0-9]{1,10})(?=(").concat(i.Constants.PATTERN_WORD_END_SEPARATOR,"))"),"ig"),t;t=f.exec(n);){var e=t.index,o=f.lastIndex,r=t[1];r&&r.length&&(e+=r.length);u.push({index:{start:e,end:o},id:t[2]})}return u},t.prototype.getArtifactType=function(){return"PullRequest"},t}(i.ArtifactMentionParser);t.PullRequestMentionParser=r;t.createParser=u});

define("VersionControl/Scripts/CodeHubContributionIds",["require","exports","VersionControl/Scenarios/History/HistoryPushesRoutes"],function(n,t,i){Object.defineProperty(t,"__esModule",{value:!0});t.CodeHubContributionIds=void 0;var r;(function(n){n.branchesHub="ms.vss-code-web.branches-hub";n.tagsHub="ms.vss-code-web.tags-hub";n.pushesHub=i.PushesHubRoutes.contributionId;n.changesetsHub="ms.vss-code-web.tfvc-changesets-hub";n.collectionChangesetsHub="ms.vss-code-web.collection-changesets-hub";n.collectionShelvesetsHub="ms.vss-code-web.collection-shelvesets-hub";n.gitFilesHub="ms.vss-code-web.files-hub-git";n.tfvcFilesHub="ms.vss-code-web.tfvc-files-hub";n.collectionTfvcFilesHub="ms.vss-code-web.collection-files-hub-tfvc";n.historyHub=i.CommitsHubRoutes.contributionId;n.pullRequestHub="ms.vss-code-web.pull-request-hub";n.shelvesetsHub="ms.vss-code-web.tfvc-shelvesets-hub";n.newBuildEditorContributionId="ms.vss-ciworkflow.build-ci-hub";n.oldReleaseDefinitionEditorContributionId="ms.vss-releaseManagement-web.hub-explorer";n.newReleaseDefinitionEditorContributionId="ms.vss-releaseManagement-web.cd-workflow-hub";n.releaseProgressHub="ms.vss-releaseManagement-web.cd-release-progress"})(r=t.CodeHubContributionIds||(t.CodeHubContributionIds={}))});

define("VersionControl/Scripts/Mentions/PullRequestMentionRenderer",["require","exports","VersionControl/Scripts/Mentions/PullRequestMentionDataProvider","VersionControl/Scripts/Resources/TFS.Resources.VersionControl","VSS/Utils/UI","VSS/Navigation/HubsService","VSS/Service","VersionControl/Scripts/CodeHubContributionIds"],function(n,t,i,r,u,f,e,o){function l(){return new c}function a(n){var t=$(".".concat(s,":not(.").concat(h,")"),n);t.length>0&&(t.addClass(h),t.each(function(n,t){var i=$(t);i.click(e.getLocalService(f.HubsService).getHubNavigateHandler(o.CodeHubContributionIds.pullRequestHub,i.attr("href")))}))}Object.defineProperty(t,"__esModule",{value:!0});t.generatePrFpsLinks=t.createRenderer=t.PullRequestMentionsRenderer=void 0;var s="mention-pr-link",h="mention-click-handled",c=function(){function n(){}return n.prototype.dispose=function(){},n.prototype.getArtifactType=function(){return"PullRequest"},n.prototype.renderMention=function(n){return this.findPullRequestById(n.ArtifactId).then(function(n){var i='<a class="mention-widget-item '.concat(s,'" href="').concat(n.url,'">')+'<i class="bowtie-icon bowtie-tfvc-pull-request pr-icon"/>'+'<span class="mention-widget-typeid">'.concat(r.PullRequest_PRText," ").concat(n.id,": <\/span>")+'<span class="mention-widget-title">'.concat(u.htmlEncode(n.title),"<\/span>")+"<\/a>",t=$(i);return t.click(e.getLocalService(f.HubsService).getHubNavigateHandler(o.CodeHubContributionIds.pullRequestHub,n.url)),{htmlComponent:t,displayText:"".concat(r.PullRequest_PRText," ").concat(n.id,": ").concat(u.htmlEncode(n.title))}})},n.prototype.getTelemetryMentionSummary=function(n){return"".concat(this.getArtifactType(),":").concat(n.ArtifactId)},n.prototype.findPullRequestById=function(n){var t=parseInt(n);return i.PullRequestMentionDataProvider.instance().getPullRequests([t])[t]},n}();t.PullRequestMentionsRenderer=c;t.createRenderer=l;t.generatePrFpsLinks=a});

if (window.performance && window.performance.mark) { window.performance.mark('endLoadBundleInner-async'); }