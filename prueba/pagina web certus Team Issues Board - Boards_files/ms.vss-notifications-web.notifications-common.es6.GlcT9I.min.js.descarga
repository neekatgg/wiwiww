"use strict";define("Notifications/Common",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Util/Linking"],(function(e,t,i,s,o){!function(e){t[e]={};class o extends s.RestClientBase{constructor(e){super(e)}async performBatchNotificationOperations(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/BatchNotificationOperations",body:e})}async listLogs(e,t,i,s){const o={startTime:i,endTime:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/DiagnosticLogs/{source}/entries/{entryId}",routeValues:{source:e,entryId:t},queryParams:o})}async getSubscriptionDiagnostics(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/subscriptions/{subscriptionId}/diagnostics",routeValues:{subscriptionId:e}})}async updateSubscriptionDiagnostics(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/notification/subscriptions/{subscriptionId}/diagnostics",routeValues:{subscriptionId:t},body:e})}async publishEvent(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/Events",body:e})}async transformEvent(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/EventTransforms",body:e})}async queryEventTypes(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/eventTypes/{eventType}/fieldValuesQuery",routeValues:{eventType:t},body:e})}async getEventType(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/EventTypes/{eventType}",routeValues:{eventType:e}})}async listEventTypes(e){const t={publisherId:e};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/EventTypes/{eventType}",queryParams:t})}async getNotificationReasons(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/NotificationReasons/{notificationId}",routeValues:{notificationId:e}})}async listNotificationReasons(e){const t={notificationIds:e};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/NotificationReasons/{notificationId}",queryParams:t})}async getSettings(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/Settings"})}async updateSettings(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"_apis/notification/Settings",body:e})}async getSubscriber(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/Subscribers/{subscriberId}",routeValues:{subscriberId:e}})}async updateSubscriber(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"_apis/notification/Subscribers/{subscriberId}",routeValues:{subscriberId:t},body:e})}async querySubscriptions(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/SubscriptionQuery",body:e})}async createSubscription(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}",body:e})}async deleteSubscription(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}",routeValues:{subscriptionId:e}})}async getSubscription(e,t){const i={queryFlags:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}",routeValues:{subscriptionId:e},queryParams:i})}async listSubscriptions(e,t,i){const s={targetId:e,ids:t&&t.join(","),queryFlags:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}",queryParams:s})}async updateSubscription(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}",routeValues:{subscriptionId:t},body:e})}async getSubscriptionTemplates(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/notification/SubscriptionTemplates"})}async updateSubscriptionUserSettings(e,t,i){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/notification/Subscriptions/{subscriptionId}/UserSettings/{userId}",routeValues:{subscriptionId:t,userId:i},body:e})}}t[e].NotificationClientName="INotificationRestClient",t[e].getNotificationClient=function(i,s){return i.getRestClient(t[e].NotificationClientName,s)},i.RestClients.add(t[e].NotificationClientName,{factory:o,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}("RestClientNotification"),function(e){var s;t[e]={},function(e){e.Follow="Follow",e.Unfollow="Unfollow"}(s=t[e].FollowsAction||(t[e].FollowsAction={})),function(e){e.WorkItem="WorkItem"}(t[e].KnownArtifactTypes||(t[e].KnownArtifactTypes={}));class r extends i.VssObservableService{constructor(){super(...arguments),this._cachedFollowedArtifactsPromises={},this._cachedFollowedArtifacts={}}refresh(e){return this.ensureArtifacts(e,!0)}isFollowing(e,t){return this._cachedFollowedArtifacts[e]?Promise.resolve(this.isFollowingFromCache(e,t)):this.ensureArtifacts(e).then((()=>this.isFollowingFromCache(e,t)))}follow(e,t,i){return this.ensureArtifacts(e).then((()=>{if(this.getSubscriptionFromCache(e,t))return Promise.resolve();const s=this.pageContext.getRestClient("INotificationRestClient"),o=this.createSubscriptionObject(e,t,i);return s.createSubscription(o).then((t=>{const i=this.getFollowedArtifactFromSubscription(e,t);this.addFollowedArtifact(i)}),(e=>{}))}))}unfollow(e,t){return this.ensureArtifacts(e).then((()=>{const i=this.getSubscriptionFromCache(e,t);return i?this.getSubscriptionId(i).then((e=>{if(e)return this.deleteFromServerWithSubscriptionId(i)}),(e=>{})):Promise.resolve()}))}setData(e,t){const i=this._cachedFollowedArtifacts[e]||{},o={};this._cachedFollowedArtifacts[e]=o,t&&t.forEach((t=>{let r=i[t];r?o[t]=r:(o[t]={id:t,type:e},this.fireEvent(o[t],s.Follow))}));for(let e in i)o[e]||this.fireEvent(i[e],s.Unfollow)}async getSubscription(e,t){const i=this.getSubscriptionFromCache(e,t);if(!i)return null;const s=await this.getSubscriptionId(i);if(!s)return this.deleteFollowedArtifact(i),null;return this.pageContext.getRestClient("INotificationRestClient").getSubscription(s)}getSubscriptionId(e){e.subscriptionId&&Promise.resolve(e.subscriptionId);const t=this.getSubscriptionQuery(e.type,e.id);if(!t)return Promise.resolve(null);return this.pageContext.getRestClient("INotificationRestClient").querySubscriptions(t).then((t=>t.length>0?(e.subscriptionId=t[0].id,e.subscriptionId):null))}deleteFromServerWithSubscriptionId(e){const t=this.pageContext.getRestClient("INotificationRestClient");if(e.subscriptionId){return t.deleteSubscription(e.subscriptionId).then((()=>{this.deleteFollowedArtifact(e)}),(()=>(this.deleteFollowedArtifact(e),Promise.resolve())))}return Promise.reject("Must have subscription id present to call this method.")}getUserId(){const e=this.pageContext.getService("IVssPageService").getData();return e?e.user.id:null}ensureArtifacts(e,t){const i=this._cachedFollowedArtifactsPromises[e];if(i)return i;if(this._cachedFollowedArtifacts[e]&&!t)return Promise.resolve();this._cachedFollowedArtifacts[e]&&(this._cachedFollowedArtifacts[e+r.PreviousCachedArtifactSuffix]=this._cachedFollowedArtifacts[e],delete this._cachedFollowedArtifacts[e]);const s=this.getSubscriptionQuery(e,void 0);if(!s)return Promise.reject("could not construct sub-query");const o=this.pageContext.getRestClient("INotificationRestClient").querySubscriptions(s).then((t=>{delete this._cachedFollowedArtifactsPromises[e],this.processResults(e,t)}));return this._cachedFollowedArtifactsPromises[e]=o,o}getSubscriptionQuery(e,t){let i=this.getUserId();if(!i)return null;return{conditions:[{subscriptionId:null,filter:{artifactId:t,artifactType:e,artifactUri:void 0,type:r.FollowsType,eventType:void 0},scope:null,subscriberId:i,flags:null}],queryFlags:0}}createSubscriptionObject(e,t,i){const s={artifactId:t,artifactType:e,type:r.FollowsType,artifactUri:null,eventType:null};return{diagnostics:null,_links:null,adminSettings:null,channel:null,flags:null,lastModifiedBy:null,modifiedDate:null,scope:null,status:null,statusMessage:"",subscriber:this.getUserId(),url:"",userSettings:null,description:null!=i?i:"",extendedProperties:null,id:void 0,filter:s,permissions:null}}isFollowingFromCache(e,t){return null!=this.getSubscriptionFromCache(e,t)}getSubscriptionFromCache(e,t){const i=this._cachedFollowedArtifacts[e];return i?i[t]:null}processResults(e,t){if(this._cachedFollowedArtifacts[e])return;this._cachedFollowedArtifacts[e]={};const i={};t.forEach((t=>{const s=this.getFollowedArtifactFromSubscription(e,t);i[s.id]=s,this.addFollowedArtifact(s)}));const o=this._cachedFollowedArtifacts[e+r.PreviousCachedArtifactSuffix]||{},n=this._cachedFollowedArtifacts[e];for(let e in o)n[e]||this.fireEvent(o[e],s.Unfollow);delete this._cachedFollowedArtifacts[e+r.PreviousCachedArtifactSuffix]}addFollowedArtifact(e){let t=this._cachedFollowedArtifacts[e.type];t||(t={},this._cachedFollowedArtifacts[e.type]=t),t[e.id]=e;(this._cachedFollowedArtifacts[e.type+r.PreviousCachedArtifactSuffix]||{})[e.id]||this.fireEvent(e,s.Follow)}deleteFollowedArtifact(e){const t=this._cachedFollowedArtifacts[e.type];if(t){const i=t[e.id];i&&(delete t[e.id],this.fireEvent(i,s.Unfollow))}}getFollowedArtifactFromSubscription(e,t){const i=t.filter.artifactUri;return{id:(0,o.decodeUri)(i).id,type:e,subscriptionId:t.id}}fireEvent(e,t){const i={action:t,id:e.id,subscriptionId:e.subscriptionId,type:e.type},s=`${e.type}_${e.id}`;this._notify(i,s)}}r.FollowsType="Artifact",r.PreviousCachedArtifactSuffix="_old",i.Services.add("IFollowsService",{serviceFactory:r})}("ServicesFollowsService"),function(e){t.ServicesMailConfigurationService={};class s extends i.VssService{isEnabled(){const e=this.pageContext.getService("IVssContributionService").getData("ms.vss-notifications-web.mail-configuration");return!!e&&e.isEnabled}}i.Services.add("IMailConfigurationService",{serviceFactory:s})}()}),["RestClient/Notification","Services/FollowsService","Services/MailConfigurationService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-notifications-web.notifications-common"}}));