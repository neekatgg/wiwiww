"use strict";define("Wit/Common/WorkItemTemplateService",["require","exports","VSS/Platform/Context"],(function(e,t,s){!function(e){t.IWorkItemTemplateService={};class a extends s.VssService{constructor(){super(...arguments),this.templatesPromiseMap=new Map}async createTemplate(e,t,s){const a=this.getKey(e,s.workItemTypeName);this.templatesPromiseMap.delete(a);const r=this.pageContext.getRestClient("IWorkItemTrackingRestClient");return await r.createTemplate(s,e,t)}async getTemplate(e,t,s){return this.pageContext.getRestClient("IWorkItemTrackingRestClient").getTemplate(e,t,s)}async getMyTemplateReferences(e,t,s){const a=this.getKey(e,s);let r=this.templatesPromiseMap.get(a);if(!r){r=this.pageContext.getService("IVssContributionService").getDataAsync("ms.vss-work-web.work-item-templates-data-provider",{workItemTypeName:s},!0),this.templatesPromiseMap.set(a,r)}const i=await r;return null!=i?i:[]}async replaceTemplate(e,t,s){const a=this.getKey(e,s.workItemTypeName);this.templatesPromiseMap.delete(a);const r=this.pageContext.getRestClient("IWorkItemTrackingRestClient");return await r.replaceTemplate(s,e,t,s.id)}getKey(e,t){return`${e}-${t}`}}s.Services.add("IWorkItemTemplateService",{serviceFactory:a})}()}),["IWorkItemTemplateService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-work-web.work-item-template-service"}}));