"use strict";define("Dashboards/WidgetCommon",["require","exports","Reporting/Common/CacheableQueryService","Dashboards/Common/DashboardsNotificationService","VSS/Platform/Context"],(function(e,t,i,r,s){!function(e){t[e]={},t[e].IDashboardsCacheableQueryServiceName="IDashboardsCacheableQueryService";class n extends i.CacheableQueryService{constructor(){super(...arguments),this.notificationListener=(e,t)=>{"dashboardRefreshing"===t&&this.resetCache()}}_serviceStart(e){super._serviceStart(e),this.notificationService=this.pageContext.getService(r.IDashboardsNotificationServiceName),this.notificationService.subscribe(this.notificationListener)}}s.Services.add(t[e].IDashboardsCacheableQueryServiceName,{serviceFactory:n})}("DashboardsCacheableQueryService"),function(e){t[e]={};class i{}t[e].DashboardsTelemetryConstants=i,i.Area="Dashboards";class r extends s.VssService{_serviceStart(e){super._serviceStart(e),this.telemetryService=e.getService("IVssTelemetryService")}onWidgetClick(e,t={}){const r=t.linkDescription?t.linkDescription:"GenericClick",s=this.pageContext.getService("IVssPageService").getData().sessionId,n=e.contributionId,a=n.startsWith("ms.vss-dashboards-web.")?n.replace("ms.vss-dashboards-web.",""):n,o={WidgetId:e.id,WidgetTypeId:a,ContributionId:e.contributionId,WidgetPresentationMode:e.presentationMode,Description:r,StartTime:Date.now(),SessionId:s};this.telemetryService.publishEvent(i.Area,"WidgetClicked",o)}onWidgetFailure(e,t,r,s={}){const n=Object.assign({WidgetId:e.id,WidgetTypeId:e.contributionId,ContributionId:e.contributionId,WidgetPresentationMode:e.presentationMode,ErrorMessage:t,OperationName:r},s);this.telemetryService.publishEvent(i.Area,"WidgetFailed",n)}onWidgetLoaded(e,t){this.generateAndPublishTelemetry(e,t,"WidgetLoaded")}onWidgetLoading(e,t){this.generateAndPublishTelemetry(e,t,"WidgetLoading")}generateAndPublishTelemetry(e,t,r){const s={WidgetId:e.id,WidgetTypeId:e.contributionId,ContributionId:e.contributionId,WidgetPresentationMode:e.presentationMode,ParentPageName:e.parentPageName,TeamId:e.teamContext.id,WidgetProperties:Object.assign({Width:e.size.width,Height:e.size.height,Size:`${e.size.width} * ${e.size.height}`},t)};this.telemetryService.publishEvent(i.Area,r,s)}}t[e].WidgetTelemetryService=r,s.Services.add("IWidgetTelemetryService",{serviceFactory:r}),t[e].onWidgetClick=function(e,t,i){e.getService("IWidgetTelemetryService").onWidgetClick(t,i)},t[e].onWidgetFailure=function(e,t,i,r,s){e.getService("IWidgetTelemetryService").onWidgetFailure(t,i,r,s)},t[e].onWidgetLoaded=function(e,t,i){e.getService("IWidgetTelemetryService").onWidgetLoaded(t,Object.assign({},i))},t[e].onWidgetLoading=function(e,t,i){e.getService("IWidgetTelemetryService").onWidgetLoading(t,Object.assign({},i))},t[e].executeAndTimeAsync=function(e,t,r,s,n,a){let o=null,d={Function:r,StartDate:new Date,StartTime:Date.now()};const c=e.getService("IVssTelemetryService"),g=e=>{d.ElapsedTimeMs=Date.now()-d.StartTime;const r=n?n(e):e;d.Error=r,d=Object.assign(Object.assign({},d),a),c.publishEvent(i.Area,t,d)};try{o=s().then((e=>(d.ElapsedTimeMs=Date.now()-d.StartTime,d=Object.assign(Object.assign({},d),a),c.publishEvent(i.Area,t,d),e)),(e=>{throw g(e),e}))}catch(e){throw g(e),e}return o}}("WidgetTelemetry")}),["DashboardsCacheableQueryService","WidgetTelemetry"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-dashboards.dashboards-widget-common"}}));