"use strict";define("Analytics/Boards/CumulativeFlowDiagramQueries",["require","exports","Analytics/Common/AnalyticsCacheableQueryBase","Analytics/Common/Utilities/QueryUtilities","Analytics/Common/Utilities/DateSKParser"],(function(e,r,t,a,o){var n,s,i;n=r[i="Resources"]={},r[i].Error_FailedToFindAVisibleBoard="Failed to find any visible boards. Please visit/configure boards and try again.",function(e){r[e]={};class o extends t.AnalyticsCacheableQueryBase{constructor(e,r,t){super(e,o.generateQueryOptions(r,t))}static generateQueryOptions(e,r){return{entityType:"BoardLocations",oDataVersion:a.latestODataVersion,project:e,$apply:`filter(BoardId eq ${r})/groupby((BoardCategoryReferenceName, ColumnId, ColumnName, ColumnOrder), aggregate(RevisedDate with max as LatestRevisedDate))`}}getQueryName(){return"BoardColumnsQuery"}interpretQueryResults({value:e}){return this.filterColumnRevisionsToLatest(e)}filterColumnRevisionsToLatest(e){const r={};for(const t of e){const e=r[t.ColumnId];if(null!=e){const a=new Date(t.LatestRevisedDate),o=new Date(e.LatestRevisedDate);a.getTime()>o.getTime()&&(r[t.ColumnId]=t)}else r[t.ColumnId]=t}const t=[];for(const e in r){const a=r[e],n=new Date(a.LatestRevisedDate).getTime()!==o.endOfTime.getTime();t.push({ColumnId:a.ColumnId,ColumnName:a.ColumnName,ColumnOrder:a.ColumnOrder,RevisedDate:a.LatestRevisedDate,IsDeleted:n})}return{boardColumns:t,boardCategoryReferenceName:e[0].BoardCategoryReferenceName}}}r[e].BoardColumnsQuery=o,o.endOfTime=new Date(Date.UTC(9999,0,1))}("BoardColumnsQuery"),function(e){s=r[e]={};class o extends t.AnalyticsCacheableQueryBase{static generateQueryOptions(e,r){return{entityType:"BoardLocations",oDataVersion:a.latestODataVersion,project:e,$apply:`filter(TeamSK eq ${r} and IsCurrent eq true)/groupby((BoardName,BoardId,BoardLevel,IsBoardVisible,BoardCategoryReferenceName))`,$orderby:"BoardLevel desc"}}constructor(e,r,t){super(e,o.generateQueryOptions(r,t))}getQueryName(){return"BoardsQuery"}}r[e].BoardsQuery=o}("BoardsQuery"),function(e){r[e]={};class o extends t.AnalyticsCacheableQueryBase{static generateQueryOptions(e,r){return{entityType:"BoardLocations",oDataVersion:a.latestODataVersion,project:e,$apply:`filter(BoardId eq ${r} and IsCurrent eq true)/groupby((LaneId,LaneName,IsDefaultLane,LaneOrder))`,$orderby:"LaneOrder"}}constructor(e,r,t){super(e,o.generateQueryOptions(r,t))}getQueryName(){return"BoardSwimlaneQuery"}}r[e].BoardSwimlaneQuery=o}("BoardSwimlaneQuery"),function(e){r[e]={};class n extends t.AnalyticsCacheableQueryBase{static generateQueryOptions(e){return{entityType:"WorkItemBoardSnapshot",oDataVersion:a.latestODataVersion,project:e.project,$apply:n.createApplyQueryOption(e),$orderby:"ColumnId,DateSK",followNextLink:!0}}static createApplyQueryOption({boardId:e,boardLane:r,startDate:t}){const n=[`filter(BoardId eq ${e} and DateSK ge ${o.DateSKParser.dateStringToDateSK(t)})`];return null!=r&&n.push(`filter(LaneName eq '${a.QueryUtilities.escapeString(r)}')`),n.push("groupby((DateSK,ColumnId), aggregate($count as Count))"),n.join("/")}constructor(e,r){super(e,n.generateQueryOptions(r))}getQueryName(){return"CumulativeFlowHistoryQuery"}interpretQueryResults({value:e}){return e.map((e=>({Count:e.Count,ColumnId:e.ColumnId,SampleDate:o.DateSKParser.parseDateSKAsDateString(e.DateSK)})))}}r[e].CumulativeFlowHistoryQuery=n}("CumulativeFlowHistoryQuery"),function(e){r[e]={};r[e].LowestLevelVisibleBoardQuery=class{constructor(e,r,t){this.boardsQuery=new s.BoardsQuery(e,r,t)}async runQuery(e){const r=(await this.boardsQuery.runQuery(e)).filter((e=>e.IsBoardVisible));if(0===r.length)throw new Error(n.Error_FailedToFindAVisibleBoard);return r.sort((function(e,r){return r.BoardLevel-e.BoardLevel}))[0]}getKey(){return`LowestLevelVisibleBoardQuery-${this.boardsQuery.getKey()}`}}}("LowestLevelVisibleBoardQuery")}),["Resources","BoardColumnsQuery","BoardsQuery","BoardSwimlaneQuery","CumulativeFlowHistoryQuery","LowestLevelVisibleBoardQuery"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-analytics.cumulative-flow-diagram-queries"}}));