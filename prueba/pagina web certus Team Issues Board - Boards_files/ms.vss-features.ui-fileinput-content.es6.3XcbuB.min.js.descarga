"use strict";define("VSSUI",["require","exports","react","VSS/Core/Util/String"],(function(e,t,i,s){var r,l,n,o;r=t[o="ResourcesFileInput"]={},t[o].FileInputBrowseButtonLabel="Browse...",t[o].FileInputDragDropLabel="Drag and drop files here or click browse",t[o].FileInputDragDropSingleFileLabel="Drag and drop a file here or click browse to select a file.",t[o].FileInputErrorDuplicateFileName='Duplicate file: "{0}". Cannot upload two files with the same file name.',t[o].FileInputErrorLabel="Error",t[o].FileInputErrorMaxFileSize="File {0} is {1} which exceeds the maximum size allowed for upload of a single file ({2}).",t[o].FileInputErrorMaxNumFiles="Only {0} files are allowed to be uploaded at one time.",t[o].FileInputErrorNotAllowedExtensionType="File extension {0} is not supported. Allowed Extensions : {1}",t[o].FileInputErrorSingleFileOnly="Only a single file can be uploaded at a time.",t[o].FileInputErrorTotalFileSize="The files being added total {0} which exceeds the maximum total size allowed to be uploaded ({1}).",t[o].FileInputReadErrorFormat="Failed to read file {0}: {1}",t[o].FileInputRemoveAll="remove all",t[o].FileInputRemoveFile="remove",t[o].FileSizeBytesFormat="{0} bytes",t[o].FileSizeKBFormat="{0} KB",t[o].FileSizeMBFormat="{0} MB",t[o].Loading="Loading...",function(e){l=t[e]={};class n extends i.Component{constructor(){super(...arguments),this._files=[],this._clear=()=>{this._files.forEach((e=>{e.fileReader.readyState!==window.FileReader.DONE&&e.fileReader.abort()})),this._files=[],this.setState({files:this._files,errorMessage:""}),this._triggerUpdateEvent()},this._remove=e=>{this._files=this._files.filter((t=>t!==e)),this.setState({files:this._files}),this._triggerUpdateEvent()},this._addFiles=e=>{if(this.props.allowedFileExtensions&&this.props.allowedFileExtensions.length>0)for(let t=0;t<e.length;t++){const i=e[t].name.split(".").pop();let l=!1;for(let e=0;e<this.props.allowedFileExtensions.length;e++)if(i.toLocaleLowerCase()===this.props.allowedFileExtensions[e].toLocaleLowerCase()){l=!0;break}if(!l){const e=(0,s.format)(r.FileInputErrorNotAllowedExtensionType,i,this.props.allowedFileExtensions.join());return void this.setState({errorMessage:e})}}const t={};for(let e=0,i=this._files.length;e<i;e++)t[this.props.fileNamesCaseSensitive?this._files[e].result.name:this._files[e].result.name.toLowerCase()]=1;let i=this._getTotalFilesSize();for(let l=0,n=e.length;l<n;l++){if(this.props.maximumSingleFileSize&&e[l].size>this.props.maximumSingleFileSize){const t=this._getLimitErrorMessage((0,s.format)(r.FileInputErrorMaxFileSize,e[l].name,this._getFriendlySizeString(e[l].size),this._getFriendlySizeString(this.props.maximumSingleFileSize)),{fileSize:e[l].size});return void this.setState({errorMessage:t})}i+=e[l].size;const n=this.props.fileNamesCaseSensitive?e[l].name:e[l].name.toLowerCase();if(t[n]){const t=(0,s.format)(r.FileInputErrorDuplicateFileName,e[l].name);return void this.setState({errorMessage:t})}t[n]=1}if(this.props.maximumTotalFileSize&&i>this.props.maximumTotalFileSize){const e=this._getLimitErrorMessage((0,s.format)(r.FileInputErrorTotalFileSize,this._getFriendlySizeString(i),this._getFriendlySizeString(this.props.maximumTotalFileSize)),{totalSize:i});return void this.setState({errorMessage:e})}const l=this._files.length+e.length;if(this.props.maximumNumberOfFiles&&l>this.props.maximumNumberOfFiles){const e=1===this.props.maximumNumberOfFiles?r.FileInputErrorSingleFileOnly:(0,s.format)(r.FileInputErrorMaxNumFiles,this.props.maximumNumberOfFiles),t=this._getLimitErrorMessage(e,{fileCount:l});this.setState({errorMessage:t})}else for(let t=0,i=e.length;t<i;t++)this._addFile(e[t])}}componentDidMount(){this.props.initialFiles&&this._addFiles(this.props.initialFiles)}render(){const e=this.props.maximumNumberOfFiles||0,t=this._files,s=this.state&&this.state.errorMessage?this.state.errorMessage:"",l=!e||t.length<e;let n=null;if(this.props.allowedFileExtensions){n=this.props.allowedFileExtensions.map((e=>"."!==e[0]?"."+e:e)).join()}const a=1===e?r.FileInputDragDropSingleFileLabel:r.FileInputDragDropLabel,p=1!==e;return i.createElement(o,{dragDropLabel:a,multiple:p,canAddMoreFiles:l,accept:n,files:t,errorMessage:s,addFiles:this._addFiles,remove:this._remove,clear:this._clear})}_addFile(e){const t={name:e.name,size:e.size,type:e.type,lastModifiedDate:e.lastModified?new Date(e.lastModified):e.lastModifiedDate,statusText:r.Loading,isError:!1},i=new window.FileReader,l={result:t,fileReader:i};this._files.push(l);const n=()=>{this.setState({files:this._files,errorMessage:this.state&&this.state.errorMessage?this.state.errorMessage:""}),this._triggerUpdateEvent()},o=()=>{t.statusText=this._getFriendlySizeString(e.size),n()};i.onload=e=>{if(t.encoding=0,1===this.props.resultContentType)t.content=i.result||"";else{const e=i.result;e&&e.indexOf(",")>-1?(t.content=e.substr(e.indexOf(",")+1),"//"===t.content.substr(0,2)&&t.content.length%4==2&&(t.content=t.content.substr(2))):t.content="",this.props.detectEncoding&&(t.encoding=function(e){if(void 0===window.atob)return 0;const t=window.atob(e),i=[];for(let e=0;e<4;e++)i.push(t.charCodeAt(e));if(254===i[0]&&255===i[1])return 6;if(255===i[0]&&254===i[1])return 0===i[2]&&0===i[3]?5:7;if(239===i[0]&&187===i[1]&&191===i[2])return 3;if(0===i[0]&&0===i[1]&&254===i[2]&&255===i[3])return 4;let s=!0;for(let e=0,i=t.length;e<i;e++){const i=t.charCodeAt(e);if((i<=31||127==i)&&9!=i&&12!=i&&13!=i&&10!=i&&26!=i)return 1;i>127&&(s=!1)}return s?2:3}(t.content))}o()},i.onerror=e=>{(0,s.format)(r.FileInputReadErrorFormat,t.name,i.error.message);t.statusText=r.FileInputErrorLabel,t.isError=!0,n()},i.onloadend=e=>{n()},1===this.props.resultContentType?i.readAsText(e):2===this.props.resultContentType?(t.encoding=0,t.file=e,o(),n()):i.readAsDataURL(e)}_triggerUpdateEvent(){this.props.updateHandler&&this.props.updateHandler({loading:this._files.some((e=>e.fileReader.readyState!==window.FileReader.DONE)),files:this._files})}_getTotalFilesSize(){let e=0;const t=this._files;for(let i=0,s=t.length;i<s;i++)e+=t[i].result.size;return e}_getLimitErrorMessage(e,t){let i=e;return this.props.limitMessageFormatter&&(i=this.props.limitMessageFormatter(e,t)),i}_getFriendlySizeString(e,t=1){Math.pow(10,t);return e<1024?(0,s.format)(r.FileSizeBytesFormat,e):e<1048576?(0,s.format)(r.FileSizeKBFormat,Math.round(e/1024*10)/10):(0,s.format)(r.FileSizeMBFormat,Math.round(e/1048576*10)/10)}}t[e].FileInput=n;class o extends i.Component{constructor(){super(...arguments),this._onClearClick=()=>{this.props.clear&&this.props.clear()},this._onRemoveClick=e=>{this.props.remove&&this.props.remove(e)},this._onBrowseContainerClick=()=>{this._fileInput&&this._fileInput.click()},this._resolveFileInput=e=>{this._fileInput=e},this._onDragEnter=e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!0})},this._onDragLeave=e=>{e.preventDefault(),this.setState({isDragging:!1})},this._onDragOver=e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!0})},this._onDrop=e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!1});const t=e.dataTransfer.files;t&&t.length>0&&this.props.addFiles&&this.props.addFiles(t)},this._onFileInputChange=e=>{e.currentTarget.files&&e.currentTarget.files.length&&(this.props.addFiles&&this.props.addFiles(e.currentTarget.files),e.currentTarget.value="")}}render(){const e=(0,t.Util.css)("vss-FileInput-filesDropTarget",this.state.isDragging?this.props.dragOverCssClass||"vss-FileInput-dragOver":"");return i.createElement("div",{className:"vss-FileInput"},this.props.canAddMoreFiles&&i.createElement("div",{className:e,onDragOver:this._onDragOver,onDragLeave:this._onDragLeave,onDragEnter:this._onDragEnter,onDrop:this._onDrop},i.createElement("div",{className:"vss-FileInput-dragDropTable flex-row",role:"presentation"},i.createElement("div",{className:"vss-FileInput-dragDropLabel flex-grow"},i.createElement("span",null,this.props.dragDropLabel)),i.createElement("div",{className:"vss-FileInput-browseButton"},i.createElement(t.Button.Button,{className:"vss-FileInput-browseContainer",onClick:this._onBrowseContainerClick},r.FileInputBrowseButtonLabel),i.createElement("input",{type:"file",ref:this._resolveFileInput,onChange:this._onFileInputChange,accept:this.props.accept,multiple:this.props.multiple,style:{display:"none"}})))),this.props.files.length>1&&i.createElement("div",{className:"vss-FileInput-overallStatusContainer"},i.createElement("span",{className:"vss-FileInput-overallStatusActions"},i.createElement(t.Link.Link,{onClick:this._onClearClick},r.FileInputRemoveAll))),i.createElement("div",{className:"vss-FileInput-errorContainer"},this.props.errorMessage),this.props.files.length>0&&i.createElement("ul",{className:"vss-FileInput-fileList",style:{display:"block"}},this.props.files.map((e=>i.createElement("li",{key:e.result.name},i.createElement("div",{className:"vss-FileInput-headerContainer"},i.createElement("span",{className:"vss-FileInput-fileName"},e.result.name)),i.createElement("div",{className:"vss-FileInput-detailsContainer"},i.createElement("span",{className:e.result.isError?"vss-FileInput-status-error":"vss-FileInput-status"},e.result.statusText),i.createElement("span",{className:"vss-FileInput-links"},i.createElement(t.Button.Button,{tabIndex:0,onClick:()=>this._onRemoveClick(e),role:"button"},r.FileInputRemoveFile))))))))}componentWillMount(){this.setState({isDragging:!1})}_setDropEffect(e){try{e.dataTransfer.dropEffect="copy"}catch(e){}}}}("ComponentsFileInputFileInput"),function(e){n=t[e]={},Object.defineProperty(t[e],"FileInput",{enumerable:!0,get:function(){return l.FileInput}})}("ComponentsFileInputindex"),function(e){t[e]={},__exportStar(n,t[e])}("FileInput")}),["Resources.FileInput","Components/FileInput/FileInput","Components/FileInput/index","FileInput"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-features.ui-fileinput-content"}}));