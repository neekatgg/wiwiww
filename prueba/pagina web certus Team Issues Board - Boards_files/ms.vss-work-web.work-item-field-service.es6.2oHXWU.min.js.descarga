"use strict";define("Wit/Common/WorkItemFieldService",["require","exports","VSS/Platform/Context","Wit/Common/Generated/Constants"],(function(e,s,t,r){!function(e){s[e]={};class i extends t.VssService{constructor(){super(...arguments),this.allowedValuesCache={},this.fieldsById={},this.fieldsByReferenceName={}}getField(e){return this.getFields(),this.fieldsById[e]}getFieldByReferenceName(e){return this.getFields(),this.fieldsByReferenceName[e]}getFields(){if(!this.fields){const e=this.pageContext.getService("IVssContributionService").getData("ms.vss-work-web.fields-data-provider");this.loadFields(e)}return this.fields}async getFieldsAsync(){if(!this.fields){const e=this.pageContext.getService("IVssContributionService"),s=await e.getDataAsync("ms.vss-work-web.fields-data-provider");this.loadFields(s)}return this.fields}async getAllowedValues(e,s,t){const i=function(e,s,t){return e||s||t?[e,s,t].filter((e=>e)).join("-"):"global"}(s,e,t);let a;if(!this.allowedValuesCache[i]){if(e.startsWith(r.CoreFieldRefNames.Tags))a=s?this.getTagsSuggestedValues(s).then((e=>null!=e?e:new Array)):Promise.resolve([]);else{const r={projectId:s,fieldRefName:e,workItemTypeName:t};a=this.loadAllowedValues(r)}this.allowedValuesCache[i]=a}return a||this.allowedValuesCache[i]}getFieldsErrorMessage(){if(this.fieldsDataProviderError)return this.fieldsDataProviderError;const e=this.pageContext.getService("IVssContributionService").getDataProviderExceptions()["ms.vss-work-web.fields-data-provider"];return null==e?void 0:e.message}getFieldAllowedValuesErrorMessage(){if(this.allowedValuesDataProviderError)return this.allowedValuesDataProviderError;const e=this.pageContext.getService("IVssContributionService").getDataProviderExceptions()["ms.vss-work-web.fields-allowed-values-provider"];return null==e?void 0:e.message}getTagsSuggestedValues(e){const s={projectScope:e};return this.pageContext.getService("IVssContributionService").getDataAsync("ms.vss-work-web.work-item-tag-suggestions-data-provider",s,!0)}async loadAllowedValues(e){const s=this.pageContext.getService("IVssContributionService"),t=await s.getDataAsync("ms.vss-work-web.fields-allowed-values-provider",e,!0);if(null==t?void 0:t.data)return t.data;(null==t?void 0:t.errorMessage)&&(this.allowedValuesDataProviderError=t.errorMessage)}async loadFields(e){(null==e?void 0:e.data)?(this.fields=[...e.data],this.fields.forEach((e=>{this.fieldsById[e.id]=e,this.fieldsByReferenceName[e.referenceName]=e}))):(null==e?void 0:e.errorMessage)&&(this.fieldsDataProviderError=e.errorMessage)}}const a="IWorkItemFieldService";t.Services.add(a,{serviceFactory:i}),s[e].getWorkItemFieldService=function(e){return e.getService(a)}}("IWorkItemFieldService")}),["IWorkItemFieldService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-work-web.work-item-field-service"}}));