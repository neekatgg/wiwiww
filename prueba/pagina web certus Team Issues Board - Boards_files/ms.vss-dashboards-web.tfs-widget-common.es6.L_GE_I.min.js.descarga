"use strict";define("Tfs/Widget",["require","exports","VSS/Platform/Context","VSS/Platform/UserClaims"],(function(e,t,r,s){!function(e){var s;t[e]={},function(e){e[e.Tfvc=0]="Tfvc",e[e.Git=1]="Git"}(s=t[e].RepositoryType||(t[e].RepositoryType={}));class i extends r.VssService{getProject(e){const t=e.getService("ITfsPageService").getData();if(!t||!t.project)throw new Error("Couldn't fetch project information.");return t.project}getUserName(e){const t=e.getService("IVssPageService").getData();if(!t||!t.user||!t.user.displayName)throw new Error("Couldn't fetch user name");return t.user.displayName}isAdmin(e){return e.getService("IDashboardsUserPermissionService").CanManagePermissionForDashboards()}isHosted(e){const t=e.getService("IVssPageService").getData();if(!t)throw new Error("Couldn't verify if environment is hosted");return t.isHosted}}i.TfvcPathRoot="$/",r.Services.add("ITfsWidgetContextService",{serviceFactory:i}),t[e].getProject=function(e){return e.getService("ITfsWidgetContextService").getProject(e)},t[e].getUserName=function(e){return e.getService("ITfsWidgetContextService").getUserName(e)},t[e].isAdmin=function(e){return e.getService("ITfsWidgetContextService").isAdmin(e)},t[e].isHosted=function(e){return e.getService("ITfsWidgetContextService").isHosted(e)},t[e].getRepoType=function(e){return 0==e.indexOf(i.TfvcPathRoot)?s.Tfvc:s.Git}}("Context"),function(e){t[e]={};class r{static isMemberUser(e){return(0,s.userHasClaim)(e,"member")}static canUserAccessWITQueriesPage(e){return r.isMemberUser(e)}}t[e].LinkPermissionsHelper=r}("LinkPermissionsHelper")}),["Context","LinkPermissionsHelper"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-dashboards-web.tfs-widget-common"}}));