"use strict";define("Wit/Common/BulkUpdateUtils",["require","exports","Wit/Common/Generated/Constants","Wit/WorkItemModel/WorkItem/FieldUtils"],(function(e,t,i,o){var a,n,s;a=t[s="BulkUpdateInterfaces"]={},(t[s].BulkUpdateConstants||(t[s].BulkUpdateConstants={})).AllTypes="AllTypes",function(e){function a(i){if(!i)return[];const o=i.split(t[e].TagSplittingSeparator),a=[];for(const e of o){const t=e.trim();t&&a.push(t)}return a}function s(e){return e.join("; ")}n=t[e]={},t[e].processTagsChanges=function(n,l){const d=n.getFieldById(i.CoreField.Tags);if(d&&(0,o.isEditable)(d)){const o=a(n.getFieldValueById(i.CoreField.Tags)),d=a(l.value),r=l.fieldName===t[e].AddTagsPseudoRefName?[...new Set([...o,...d]).values()]:l.fieldName===t[e].RemoveTagsPseudoRefName?o.filter((e=>d.indexOf(e)<0)):void 0;r&&n.setFieldValueById(i.CoreField.Tags,s(r))}},t[e].AddTagsPseudoRefName="System.Tags-Add",t[e].RemoveTagsPseudoRefName="System.Tags-Remove",t[e].TagSplittingSeparator=/[,;]/,t[e].splitAndTrimTags=a,t[e].formatTags=s}("TagUtils"),function(e){async function s(e,t,a){for(const s of a){const l=t.getFieldByName(s.fieldName);if(l){if(l.fieldDefinition.id===i.CoreField.WorkItemType){let o,n,l=t.project.guid;const d=a.find((e=>e.fieldName===i.CoreFieldRefNames.TeamProject));if(d){const i=e.getService("IWorkItemDataManager"),a=e.getService("IWorkItemNodeService"),s=await i.beginGetFieldProjectData(d.value),r=await a.getAreaPathNodes(d.value),u=await a.getIterationNodes(d.value),f=null==s?void 0:s.projects.find((e=>e.guid===d.value));if(!f||!r||!u){console.warn(`Failed to find project data for project ${l}, aborting update of work item type for work item ${t.id}`);continue}n=null==s?void 0:s.fields,l=f.guid,o=Object.assign(Object.assign({},f),{areaNodes:r,iterationNodes:u})}const r=e.getService("IWorkItemTypesService"),u=await r.getWorkItemTypeData(l,[s.value]);t.changeWorkItemType(u[0],o,[],n)}else if((0,o.isEditable)(l)){let e=s.value;if(l.fieldDefinition.id===i.CoreField.History){const o=t.isFieldDirty(i.CoreField.History)?t.getFieldValueById(i.CoreField.History):"";e=`${s.value}${o?"<BR>"+o:""}`}else l.fieldDefinition.type===i.FieldType.DateTime&&s.value&&(e=s.value instanceof Date?s.value:new Date(s.value).toLocaleString());t.setFieldValueById(l.fieldDefinition.id,e,{handleExceptions:!0})}}else(0,n.processTagsChanges)(t,s)}}t[e]={},t[e].performBulkUpdate=async function(e,t,o){var n;if(!t.length)return[];const l=e.getService("IWorkItemModelService"),d=(r=t).length>0&&"number"==typeof r[0]?await l.getWorkItems(t):t;var r;const u=[];for(const t of d){const l=t.getFieldValueById(i.CoreField.WorkItemType),d=null!==(n=o.get(l))&&void 0!==n?n:o.get(a.BulkUpdateConstants.AllTypes);d?u.push(s(e,t,d)):console.warn(`Couldn't find change list for work item ${t.id} with work item type ${l}`)}return await Promise.all(u),d},t[e].getWorkItemTypes=function(e){const t=new Set;for(const o of e)t.add(o[i.CoreFieldRefNames.WorkItemType]);return[...t.values()]}}("BulkUpdateUtils")}),["BulkUpdateInterfaces","TagUtils","BulkUpdateUtils"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-work-web.bulk-update-utils"}}));