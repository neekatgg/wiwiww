"use strict";define("Reporting/CFDReport",["require","exports","Analytics/Boards/CumulativeFlowDiagramQueries/BoardsQuery","Widgets/CumulativeFlowDiagram/QueryUtilities","Analytics/Boards/CumulativeFlowDiagramQueries/BoardColumnsQuery","react","VSS/Platform/Layout","VSSUI/Dropdown","VSSUI/Utilities/DropdownSelection","VSS/Core/Util/String","Analytics/Boards/CumulativeFlowDiagramQueries/BoardSwimlaneQuery","Reporting/BoardsCommon/BoardsReport","Reporting/BoardsCommon/BoardsRoutingHelper","Reporting/BoardsCommon/ReportGuidedTourUtility","Reporting/BoardsCommon/ReportQueryHelper","Reporting/BoardsCommon/ReportTelemetry","Reporting/BoardsCommon/ResetElement","Reporting/BoardsCommon/Resources","Reporting/BoardsCommon/UnmaterializedBoardMessage","VSS/Core/Observable","VSS/Platform/Components/Layout","VSS/Platform/FPS","VSSUI/FormItem","VSSUI/TextField","WidgetCommon/DateUtils/DateUtils","Widgets/Configs/Common/GenericSelectionDropdown","Reporting/BoardsCommon/ReportPageState"],(function(e,t,i,a,s,o,n,r,l,d,m,c,u,g,h,p,C,b,S,D,f,R,y,B,w,I,P){var x,L,T,v,F,N,k,O,U;x=t[U="Resources"]={},t[U].ReportTitle="Cumulative Flow Diagram",t[U].AllBoardLanesName="All",t[U].DefaultBoardLaneName="{0} (Default)",t[U].DeletedBoardColumnName="{0} (Deleted)",t[U].LastNDays="Last {0} days",t[U].CustomRollingPeriod="Custom rolling period",t[U].TourBubbleTitle="The Cumulative Flow Diagram",t[U].TourBubbleText="Get insights into your team's workload, throughput, and potential bottlenecks. ​To customize the report, set the columns, swimlanes, and timeframe. ​Click next to take a quick tour.",t[U].FilterBubbleTitle="CFD Configuration",t[U].FilterBubbleText="​Configure the CFD columns, swimlanes, and timeframe. Your selection will be saved next time you visit the report.",t[U].ChartBubbleTitle="CFD Chart",t[U].ChartBubbleText="The CFD shows the aggregated items in each Kanban column for the selected time period. This chart shows the amount of work in progress, a count of unfinished requirements, and lead time, the average amount of time it takes to complete a requirement from the time it is defined to when it is completed.",t[U].LegendBubbleTitle="CFD Chart Legend",t[U].LegendBubbleText="​Click the chart's legend to hide or show board columns.",t[U].UnmaterializedBoard="Information about the selected boards category for this team could not be found. Have you visited the corresponding boards page yet?",t[U].RollingPeriodLabel="Rolling period",t[U].CustomRollingPeriodLabel="Custom days",t[U].SwimlaneLabel="Swimlane",t[U].ColumnOptionsLabel="Column options",t[U].WidgetTitleWithoutSwimlaneFormat="{0} {1} CFD",t[U].WidgetTitleWithSwimlaneFormat="{0} {1} CFD ({2})",function(e){L=t[e]={};class i{static async reset(e,t,a){const s=e.getService("ISettingsService");await s.removeEntries("CFDReport",0,i.teamScopeName,t)}static async save(e,t,a,s){const o=e.getService("ISettingsService"),n=`CFDReport/${s}`,r={};r[n+"/"+i.daysKey]=t.chartDataSettings.timePeriod.settings,r[n+"/"+i.boardLaneKey]=t.chartDataSettings.boardLane,r[n+"/"+i.boardColumnsKey]=t.chartDataSettings.desiredBoardColumnIds,await o.setEntries(r,0,i.teamScopeName,a)}static async load(e,t,a){const s=e.getService("ISettingsService"),o=await s.getEntriesAsync("CFDReport/"+a,0,i.teamScopeName,t);return{rollingDuration:o[i.daysKey],boardLane:o[i.boardLaneKey],boardColumnIds:o[i.boardColumnsKey]}}}function a(){return"CFDReport"}t[e].CFDReportUserSettings=i,i.daysKey="Days",i.boardLaneKey="BoardLane",i.boardColumnsKey="BoardColumnIds",i.teamScopeName="team",t[e].getCFDReportSettingsStorageKey=a}("CfdReportUserSettings"),function(e){T=t[e]={},t[e].getTeachingBubblesData=function(){return{reportKey:(0,L.getCFDReportSettingsStorageKey)(),tourBubble:{title:x.TourBubbleTitle,text:x.TourBubbleText},filterBubble:{title:x.FilterBubbleTitle,text:x.FilterBubbleText},chartBubble:{title:x.ChartBubbleTitle,text:x.ChartBubbleText},legendBubble:{title:x.LegendBubbleTitle,text:x.LegendBubbleText},reportDocumentationUrl:"https://go.microsoft.com/fwlink/?linkid=2095909"}}}("CfdReportTeachingBubbleHelper"),function(e){v=t[e]={},t[e].getBoard=async function(e,t,s,o){const n=e.getService("IDashboardsCacheableQueryService"),r=new i.BoardsQuery(a.reportCommand,t,s),l=await n.getCacheableQueryResult(r),d=l.findIndex((e=>e.BoardCategoryReferenceName===o));return d>=0?l[d]:void 0}}("PickersBoardsQuery"),function(e){F=t[e]={};class i extends n.VssComponent{constructor(e){super(e),this.onSelectionChange=()=>{const e=this.selection.value,t=new Set;for(let i=0;i<e.length;i++)for(let a=e[i].beginIndex;a<=e[i].endIndex;a++)t.add(this.props.items[a]);this.props.onSelect(Array.from(t))},this.selection=new l.DropdownMultiSelection}componentDidMount(){this.applySelection(this.props),this.selection.subscribe(this.onSelectionChange)}componentWillReceiveProps(e){JSON.stringify(e)!=JSON.stringify(this.props)&&(this.selection.unsubscribe(this.onSelectionChange),this.applySelection(e),this.selection.subscribe(this.onSelectionChange))}componentWillUnmount(){this.selection.unsubscribe(this.onSelectionChange)}render(){return o.createElement("div",{className:"flex-row"},o.createElement(r.Dropdown,{className:"board-column-picker",items:this.props.items,selection:this.selection}))}applySelection(e){void 0!==e.selectedIds&&(this.selection.clear(),e.selectedIds.forEach((t=>{const i=e.items.findIndex((e=>e.id===t));i>=0&&this.selection.select(i,1,true)})))}}t[e].ColumnPicker=i,t[e].getColumns=async function(e,t,i,o){const n=e.getService("IDashboardsCacheableQueryService"),r=new s.BoardColumnsQuery(a.reportCommand,t,i),{boardColumns:l}=await n.getCacheableQueryResult(r);return function(e){const t=[],i=[];for(const a of e)a.IsDeleted?i.push(a):t.push(a);i.sort(((e,t)=>{const i=new Date(e.RevisedDate);return new Date(t.RevisedDate).getTime()-i.getTime()})),t.sort(((e,t)=>t.ColumnOrder-e.ColumnOrder));const a=t.slice();return a.splice(1,0,...i),a}(l).filter((e=>new Date(e.RevisedDate)>o)).map((e=>({id:e.ColumnId,text:e.IsDeleted?(0,d.format)(x.DeletedBoardColumnName,e.ColumnName):e.ColumnName,data:e})))},n.VssComponent.register("BoardsColumnPicker",i)}("PickersColumnPicker"),function(e){function i(e){return{id:e.toString(),text:(0,d.format)(x.LastNDays,e),data:e}}N=t[e]={},t[e].customRollingPeriodId="customrollingperiod",t[e].getDaysItems=function(){return[i(14),i(30),i(60),i(180),{id:"separator",type:3},{id:t[e].customRollingPeriodId,text:x.CustomRollingPeriod}]},t[e].getDaysItem=function(i,a){const s=i.findIndex((e=>e.data===a));return s<0?t[e].customRollingPeriodId:i[s].id}}("PickersDaysPickerOptions"),function(e){function i(e){return e[e.findIndex((e=>void 0!==e.data&&e.data.IsDefaultLane))]}function s(e,t){return e.data.IsDefaultLane?-1:t.data.IsDefaultLane?1:e.data.LaneOrder-t.data.LaneOrder}k=t[e]={},t[e].getSwimlanes=async function(e,t,i){const o=e.getService("IDashboardsCacheableQueryService"),n=new m.BoardSwimlaneQuery(a.reportCommand,t,i);let r=(await o.getCacheableQueryResult(n)).map((e=>{const t=e.IsDefaultLane&&"(Default Lane)"!==e.LaneName?(0,d.format)(x.DefaultBoardLaneName,e.LaneName):e.LaneName;return{id:e.LaneId,text:t,data:e}}));return r=r.sort(s),r.unshift({id:"All",text:x.AllBoardLanesName,data:{IsDefaultLane:!1,LaneId:null,LaneName:null,LaneOrder:0}}),r},t[e].lookupLane=function(e,t){let a=e[e.findIndex((e=>void 0!==e.data&&e.data.LaneName===t))];return null==a&&(a=i(e)),a},t[e].lookupDefaultLane=i}("PickersSwimlanePickerOptions"),function(e){O=t[e]={};class i extends c.BoardsReport{constructor(e,t){super(e,t),this.textFieldValue=new D.ObservableValue(""),this.resetSettings=async()=>{await L.CFDReportUserSettings.reset(this.context.pageContext,this.props.teamId,this.props.categoryReferenceName),this.initializeReportState()},this.onDaysSelect=e=>{const t=e.id===N.customRollingPeriodId;if(t)this.textFieldValue.value=this.state.widgetSettings.chartDataSettings.timePeriod.settings.toString(),this.setState({customRollingPeriodValidationMessage:null});else{const t=Object.assign({},this.state.widgetSettings);t.chartDataSettings.timePeriod.settings=e.data,this.setUserSelection(t)}this.setState({isCustomRollingPeriod:t})},this.onLaneSelect=e=>{const t=Object.assign({},this.state.widgetSettings),i=this.generateVisibleColumns(e,this.state.columnOptions),a=this.generateDesiredColumnIds(t.chartDataSettings.desiredBoardColumnIds,i,this.state.columnOptions);t.chartDataSettings.boardLane=e.data.LaneName,t.chartDataSettings.desiredBoardColumnIds=a,this.setState({visibleColumnOptions:i}),this.setUserSelection(t)},this.onColumnsSelect=e=>{const t=Object.assign({},this.state.widgetSettings);t.chartDataSettings.desiredBoardColumnIds=e.map((e=>e.data.ColumnId)),this.setUserSelection(t)},this.onCustomRollingPeriodChanged=(e,t)=>{const i=t.replace(/\D/,"");this.textFieldValue.value=i,this.validateAndSaveCustomRollingPeriodInput(i)},this.toggleTeachingBubble=()=>{this.setState({showTeachingBubble:!this.state.showTeachingBubble})},this.onBubbleDismiss=()=>{this.setState({showTeachingBubble:!1})},this.state=this.getDefaultState()}getWidgetContributionId(){return"ms.vss-dashboards-web.Microsoft.VisualStudioOnline.Dashboards.CumulativeFlowDiagramWidget"}getReportTelemetryName(){return"CFDReport"}getReportTitle(){return x.ReportTitle}renderTeachingBubble(){return o.createElement(o.Fragment,null," ",this.reportGuidedTourUtility.render(this.state.showTeachingBubble)," ")}getWidgetName(){const e=(0,k.lookupLane)(this.state.swimlaneOptions,this.state.widgetSettings.chartDataSettings.boardLane),t=null!=e.data&&null!=e.data.LaneId,i=this.props.teamName;return t?(0,d.format)(x.WidgetTitleWithSwimlaneFormat,i,this.props.categoryName,e.data.LaneName):(0,d.format)(x.WidgetTitleWithoutSwimlaneFormat,i,this.props.categoryName)}initializeOnRender(){this.reportGuidedTourUtility=new g.ReportGuidedTourUtility(this.context.pageContext,(0,T.getTeachingBubblesData)(),this.onBubbleDismiss)}getTitleBlock(){const e=this.isReady()&&!this.isInAbnormalState()&&this.isConfigurationValid();return o.createElement(o.Fragment,null,super.getTitleBlock((0,g.getInfoIcon)(this.reportGuidedTourUtility.titleBubbleCallback,this.toggleTeachingBubble,e,this.getReportTitle())))}decorateWidgetContent(e){return o.createElement("div",{ref:this.reportGuidedTourUtility.chartBubbleCallback},e)}getFilterItems(){const e=this.state.widgetSettings.chartDataSettings,t=(0,N.getDaysItem)(this.state.daysOptions,e.timePeriod.settings),i=(0,k.lookupLane)(this.state.swimlaneOptions,this.state.widgetSettings.chartDataSettings.boardLane);return o.createElement(o.Fragment,null,o.createElement(y.FormItem,{label:x.RollingPeriodLabel},o.createElement(I.GenericSelectionDropdown,{className:"days-picker",selectedId:this.state.isCustomRollingPeriod?N.customRollingPeriodId:t,items:this.state.daysOptions,onSelect:this.onDaysSelect})),this.state.isCustomRollingPeriod&&o.createElement(y.FormItem,{label:x.CustomRollingPeriodLabel,className:"custom-rolling-period-form-item",message:this.state.customRollingPeriodValidationMessage,error:null!==this.state.customRollingPeriodValidationMessage},o.createElement(B.TextField,{ariaLabel:x.CustomRollingPeriod,value:this.textFieldValue,onChange:this.onCustomRollingPeriodChanged,width:"auto",className:"custom-rolling-period-text-field",inputClassName:"custom-rolling-period-text-field-input"})),o.createElement(y.FormItem,{label:x.SwimlaneLabel},o.createElement(I.GenericSelectionDropdown,{className:"swimlane-picker",selectedId:i.id,items:this.state.swimlaneOptions,onSelect:this.onLaneSelect})),o.createElement("div",{ref:this.reportGuidedTourUtility.filterBubbleCallback},o.createElement(y.FormItem,{label:x.ColumnOptionsLabel},o.createElement(F.ColumnPicker,{items:this.state.visibleColumnOptions,onSelect:this.onColumnsSelect,selectedIds:e.desiredBoardColumnIds}))),o.createElement(C.ResetElement,{onClick:this.resetSettings,isEnabled:this.state.hasCustomUserSettings}))}getKnownWarningComponent(){return this.state.knownWarning===b.UnmaterializedBoardDetail?o.createElement(S.UnmaterializedBoardMessage,null):null}componentDidMount(){(0,h.resetQueryCache)(this.context.pageContext),this.initializeReportState()}componentDidUpdate(e){JSON.stringify(this.props)!==JSON.stringify(e)&&(this.props.lastRefresh!==e.lastRefresh&&(0,h.resetQueryCache)(this.context.pageContext),this.setState(this.getDefaultState()),this.initializeReportState())}async initializeReportState(){this.cancelDataPromises();try{const e=await L.CFDReportUserSettings.load(this.context.pageContext,this.props.teamId,this.props.categoryReferenceName),t=await(0,g.hasUserSeenBubble)(this.context.pageContext,(0,L.getCFDReportSettingsStorageKey)());this.boardCanceleablePromise=this.trackPromise((0,v.getBoard)(this.context.pageContext,this.props.projectId,this.props.teamId,this.props.categoryReferenceName));const a=await this.boardCanceleablePromise.promise;if(null==a||null==a.BoardId){const e=b.UnmaterializedBoardDetail;return this.setState({knownWarning:e}),void(0,p.publishEmptyReportTelemetry)(this.context.pageContext,this.getReportTelemetryName(),e)}const s=e.rollingDuration?e.rollingDuration:i.defaultRollingDuration;this.swimlanesCanceleablePromise=this.trackPromise((0,k.getSwimlanes)(this.context.pageContext,this.props.projectId,a.BoardId));const o=(0,w.addDays)(new Date,-s);this.columnsCanceleablePromise=this.trackPromise((0,F.getColumns)(this.context.pageContext,this.props.projectId,a.BoardId,o));const[n,r]=await Promise.all([this.swimlanesCanceleablePromise.promise,this.columnsCanceleablePromise.promise]),l=e.boardLane?e.boardLane:null,d=(0,k.lookupLane)(n,l),m=this.generateVisibleColumns(d,r),c=this.generateDesiredColumnIds(e.boardColumnIds,m,r),u=this.assembleSettings(a,d.data,s,c),h=(0,N.getDaysItems)(),C=this.isCustomRollingPeriod(h,s);this.setState({daysOptions:h,swimlaneOptions:n,columnOptions:r,visibleColumnOptions:m,widgetSettings:u,isCustomRollingPeriod:C,showTeachingBubble:!t,hasCustomUserSettings:"{}"!==JSON.stringify(e)}),C&&(this.textFieldValue.value=this.state.widgetSettings.chartDataSettings.timePeriod.settings.toString()),(0,p.publishReportTelemetry)(this.context.pageContext,this.getReportTelemetryName(),{rollingPeriod:u.chartDataSettings.timePeriod.settings,boardLane:u.chartDataSettings.boardLane,columnCount:u.chartDataSettings.desiredBoardColumnIds&&u.chartDataSettings.desiredBoardColumnIds.length})}catch(e){if(e.isCanceled)return;this.handleCommonInitError(e)}finally{this.props.onLoadCompleted&&this.props.onLoadCompleted()}}getDefaultState(){return Object.assign({board:void 0,daysOptions:[],swimlaneOptions:[],columnOptions:[],visibleColumnOptions:[],customRollingPeriodValidationMessage:null},super.getDefaultState())}isConfigurationValid(){return null===this.state.customRollingPeriodValidationMessage}getBackButtonProps(){return{onClick:()=>{const e=(0,u.getBoardsReportUrl)(this.context.pageContext,this.props.categoryName);(0,R.FastPageSwitch)(this.context.pageContext,e,!0)}}}cancelDataPromises(){this.boardCanceleablePromise&&this.boardCanceleablePromise.cancel(),this.swimlanesCanceleablePromise&&this.swimlanesCanceleablePromise.cancel(),this.columnsCanceleablePromise&&this.columnsCanceleablePromise.cancel()}generateVisibleColumns(e,t){const i=[...t];return null!=e.data&&(e.data.IsDefaultLane||null==e.data.LaneId)||i.pop(),i}generateDesiredColumnIds(e,t,i){let a;return void 0!==e?a=e:(a=t.map((e=>e.id)),i.length===t.length&&a.pop()),a}validateAndSaveCustomRollingPeriodInput(e){const t=Number(e);if(""!==e&&t>=14&&t<=180){this.setState({customRollingPeriodValidationMessage:null});const e=Object.assign({},this.state.widgetSettings);e.chartDataSettings.timePeriod.settings=t,this.setUserSelection(e)}else this.setState({customRollingPeriodValidationMessage:(0,d.format)(b.ValueMustBeWithinRange,14,180)})}isCustomRollingPeriod(e,t){return!e.some((e=>null!=e.data&&e.data===t))}assembleSettings(e,t,i,a){return{chartDataSettings:{board:e.BoardId,boardLane:t.LaneName,includeFirstBoardColumn:!1,desiredBoardColumnIds:a,project:this.props.projectId,team:this.props.teamId,timePeriod:{identifier:"RollingPeriod",settings:i}},themeName:"Blue"}}setUserSelection(e){L.CFDReportUserSettings.save(this.context.pageContext,e,this.props.teamId,this.props.categoryReferenceName),this.setState({widgetSettings:e,hasCustomUserSettings:!0})}}t[e].CFDReport=i,i.defaultRollingDuration=30,n.VssComponent.register("CFDReport",i),n.VssComponent.register("CFDReportPreloader",f.NoOpComponent)}("CfdReport"),function(e){t[e]={};class i extends n.VssComponent{async componentDidMount(){this.setState(await(0,P.getReportPageState)(this.context.pageContext))}render(){return null==this.state?null:o.createElement(O.CFDReport,{categoryReferenceName:this.state.categoryReferenceName,categoryName:this.state.categoryName,teamId:this.state.teamId,teamName:this.state.teamName,projectId:this.state.projectId})}}t[e].CFDReportPage=i,n.VssComponent.register("CFDReportPage",i)}("CfdReportPage")}),["Resources","CfdReportUserSettings","CfdReportTeachingBubbleHelper","Pickers/BoardsQuery","Pickers/ColumnPicker","Pickers/DaysPickerOptions","Pickers/SwimlanePickerOptions","CfdReport","CfdReportPage"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-reporting-web.cfd-report-content"}}));